structured_description;solution
The process starts when<act>request product</act>. <act>confirm order</act> . In case the customer has a gold card, <act>handle information internally</act>. If the customer does not have a gold card, <act>call customer</act>. Before<act>send invoice</act>, a database query is performed <act>find shipping information</act> . Then<act>check payment</act>.; <act> request product </act> <act> confirm order </act> <path1><act> handle information internally </act></path1><path2><act> call customer </act></path2> <act> send invoice </act> <act> find shipping information </act> <act> check payment </act>
The process starts when<act>request product</act>. Thereafter<act>check order</act>. If it is a premium customer, <act>handle information internally</act>. If the customer does not have a gold card, <act>call customer</act>. Afterwards, a database query is performed <act>find shipping information</act> . Then<act>send invoice</act>. Thereafter<act>pay bill</act>.; <act> request product </act> <act> check order </act> <path1><act> handle information internally </act></path1><path2><act> call customer </act></path2> <act> find shipping information </act> <act> send invoice </act> <act> pay bill </act>
The process starts when<act>place purchase order</act> . After that,<act>confirm order</act>. If it is a premium customer, <act>handle information internally</act>. If the customer does not have a gold card, <act>call customer</act>. Before<act>send invoice</act>, <act>retrieve shipping address</act>. Next<act>do payment</act>.; <act> place purchase order </act> <act> confirm order </act> <path1><act> handle information internally </act></path1><path2><act> call customer </act></path2> <act> retrieve shipping address </act> <act> send invoice </act>  <act> do payment </act>
The process starts when<act>receive order</act> . Subsequently<act>send confirmation message</act>. If the customer is a frequent buyer, <act>handle information internally</act>. In case the customer does not have a gold card, <act>call customer</act>. <act>ask shipping details</act>. After that,<act>send invoice</act>. After that,<act>pay bill</act>.; <act> receive order </act> <act> send confirmation message </act> <path1><act> handle information internally </act></path1><path2><act> call customer </act></path2> <act> ask shipping details </act> <act> send invoice </act> <act> pay bill </act>
Initially<act>place purchase order</act>. <act>confirm order</act> . Whenever the customer possesses a gold card, <act>handle information internally</act>. In case the customer does not have a gold card, <act>call customer</act>. Later<act>find shipping information</act> . Thereafter<act>send invoice</act>. Next<act>pay invoice</act>.; <act> place purchase order </act> <act> confirm order </act> <path1><act> handle information internally </act></path1><path2><act> call customer </act></path2> <act> find shipping information </act> <act> send invoice </act> <act> pay invoice </act>
The loan approval process starts when<act>place request for loan amount</act>. Before<act>evaluate request of customer</act>, <act>invoke risk assessment web service</act> . If the customer wants further information , <act>approve loan</act>. If the customer is high risk, <act>deny loan</act>. When<act>send request</act>, <act>receive feedback</act>.; <act> place request for loan amount </act>  <act> invoke risk assessment web service </act> <act> evaluate request of customer</act>  <path1><act> approve loan </act></path1><path2><act> deny loan </act></path2> <act> send request </act> <act> receive feedback </act>
The loan approval process starts by <act>receive customer request for loan amount</act>. Once<act>invoke risk assessment web service</act> , <act>evaluate request of customer</act>. Whenever the loan amount is for 10000 dollar or more, <act>accept loan</act>. If the customer is high risk, <act>deny loan</act>. When<act>send request</act>, <act>receive feedback</act>.; <act> receive customer request for loan amount</act> <act> invoke risk assessment web service </act> <act> evaluate request of customer </act> <path1><act> accept loan </act></path1><path2><act> deny loan </act></path2> <act> send request </act> <act> receive feedback </act>
The process starts when<act>place request for loan amount</act>. Once<act>invoke risk assessment web service</act> , <act>evaluate request of customer</act>. If the customer wants further information , <act>accept loan</act>. If the customer is high risk, <act>deny loan</act>. Once<act>close loan request</act>, <act>receive feedback</act>.; <act> place request for loan amount </act>  <act> invoke risk assessment web service </act> <act> evaluate request of customer </act> <path1><act> accept loan </act></path1><path2><act> deny loan </act></path2> <act> deny loan </act> <act> </act> close loan request <act> receive feedback </act>
First<act>receive request for loan amount</act>. Before<act>evaluate request of customer</act>, <act>invoke risk assessment web service</act> . Whenever the loan amount is for 10000 dollar or more, <act>accept loan</act>. If the customer is high risk, <act>deny loan</act>. Once<act>send request</act>, <act>receive feedback</act>.; <act> receive request for loan amount </act> <act> invoke risk assessment web service </act> <act> evaluate request of customer </act>  <path1><act> accept loan </act></path1><path2><act> deny loan </act></path2> <act> send request </act> <act> receive feedback </act>
The loan approval process starts when<act>obtain customer request for loan amount</act>. Once<act>invoke risk assessment web service</act> , <act>evaluate request of customer</act>. Whenever the loan amount is for 10000 dollar or more, <act>approve loan</act>. If the customer is high risk, <act>deny loan</act>. Before<act>receive feedback</act>, <act>close loan request</act>.; <act> obtain customer request for loan amount</act> <act> invoke risk assessment web service </act> <act> evaluate request of customer </act> <path1><act> approve loan </act></path1><path2><act> deny loan </act></path2> <act> close loan request </act> <act> receive feedback </act> 
A small company manufactures customized bicycles. When<act>receive order</act>, a new process instance is created. In case a member of the sales department accepts the order for a customized bike, <act>inform storehouse and engineering department</act>. Next<act>process part list of order</act>. Next <act>check required quantity</act>. If the part is available, <act>reserve part</act>. If the part is available, <act>back order part</act>. After<act>prepare everything for assembling of ordered bicycle</act>, <act>assemble bicycle</act>. After<act>ship bicycle</act> , the process instance finishes.;  <act> receive order </act> <path1><act> inform storehouse and engineering department </act></path1> <act> process part list of order </act>  <act> check required quantity </act> <path1><act> reserve part </act> </path1><path2><act> back order part </act></path2> <act> prepare everything for assembling of ordered bicycle</act> <act> assemble bicycle </act> <act> ship bicycle </act> 
A small company manufactures customized bicycles. Whenever an order is received at the sales department, a new process instance is created. If a member of the sales department rejects the order for a customized bike, <act>inform customer</act>. If a member of the sales department accepts the order for a customized bike, <act>inform storehouse and engineering department</act>. Afterwards, the storehouse immediately processes the part list of the order. <act>require quantity</act>. If the part is available, <act>reserve part</act>. If the part is available, <act>be part</act>. Next<act>prepare everything for assembling of ordered bicycle</act>. After that,<act>assemble bicycle</act>. Next,<act>ship bicycle</act> . Next, the process instance finishes.;  <act> receive order </act> <path1><act> inform customer </act></path1><path2><act> inform storehouse and engineering department </act></path2> <act> process part list </act>  <act> check required quantity </act> <path1><act> reserve part </act> </path1><path2><act> back order part </act></path2> <act> prepare everything </act> <act> assemble bicycle </act> <act> ship bicycle </act> 
A small company manufactures customized bicycles. When<act>receive order</act>, a new process instance is created. In case a member of the sales department rejects the order for a customized bike, <act>inform customer</act>. If a member of the sales department accepts the order for a customized bike, <act>inform storehouse and engineering department</act>. Later<act>process part list of order</act>. <act>check required quantity</act>. In case each part is available, <act>reserve part</act>. In case each part is not available, <act>back order part</act>. Once<act>prepare everything </act>, <act>assemble bicycle</act>. Once<act>ship bicycle</act> , the process instance finishes.;  <act> receive order </act> <path1><act> inform customer </act></path1><path2><act> inform storehouse and engineering department </act></path2> <act> process part list of order </act>  <act> check required quantity </act> <path1><act> reserve part </act> </path1><path2><act> back order part </act></path2> <act> prepare everything </act> <act> assemble bicycle </act> <act> ship bicycle </act> 
A small company manufactures customized bicycles. When<act>receive order</act>, a new process instance is created. If a member of the sales department rejects the order for a customized bike, <act>inform customer</act>. In case a member of the sales department accepts the order for a customized bike, <act>inform storehouse and engineering department</act>. Subsequently<act>process part list </act>. <act>check required quantity</act>. Whenever each part is available, <act>reserve part</act>. If each part is not available, <act>order part</act>. Before<act>assemble bicycle</act>, <act>prepare everything</act>. Once<act>ship bicycle</act> , the process instance finishes.;  <act> receive order </act> <path1><act> inform customer </act></path1><path2><act> inform storehouse and engineering department </act></path2> <act> process part list </act>  <act> check required quantity </act> <path1><act> reserve part </act> </path1><path2><act> order part </act></path2> <act> prepare everything </act> <act> assemble bicycle </act> <act> ship bicycle </act> 
A small company manufactures customized bicycles. Whenever <act>receive order</act> at the sales department, a new process instance is created. If a member of the sales department rejects the order for a customized bike, <act>inform customer</act>. If a member of the sales department accepts the order for a customized bike, <act>inform storehouse and engineering department</act>. Subsequently<act>process part list of order</act>. <act>check quantity</act>. If the part is available, <act>reserve part</act>. If the part is available, <act>back order part</act>. Before<act>assemble bicycle</act>, <act>prepare everything</act>. Afterwards, the sales department <act>ship bicycle</act> . In the next step, the process instance finishes.;  <act> receive order </act> <path1><act> inform customer </act></path1><path2><act> inform storehouse and engineering department </act></path2> <act> process part list of order </act>  <act> check quantity </act> <path1><act> reserve part </act> </path1><path2><act> back order part </act></path2> <act> prepare everything </act> <act> assemble bicycle </act>  <act> ship bicycle </act> 
First<act>submit vacation request</act>. Before<act>receive request</act>, <act>note request</act>. Then<act>review request</act>. The supervisor can approve or reject the request. Whenever the request is rejected, <act>return application</act>. If the request is approved, <act>generate notification</act>.; <act> submit vacation request </act> <act> note request </act> <act> receive request </act>  <act> review request </act>  <path1><act> return application </act></path1><path2><act> generate notification </act></path2>
Initially<act>submit request</act>. Before<act>receive request</act>, <act>register requirement</act>. After that,<act>review request</act>. The supervisor can approve or reject the request. If the request is rejected, <act>return application</act>. In case the request is approved, <act>generate notification</act>.; <act> submit request </act> <act> register requirement </act> <act> receive request </act>  <act> review request </act>  <path1><act> return application </act></path1><path2><act> generate notification </act></path2>
The process of vacations request starts when<act>submit purchase request</act>. When<act>note request</act>, <act>receive request</act>. In the next step,<act>review request</act>. The supervisor can approve or reject the request. If the request is rejected, <act>return application</act>. In case the request is approved, <act>generate notification</act>.; <act> submit purchase request </act> <act> note request </act> <act> receive request </act> <act> review request </act>  <path1><act> return application </act></path1><path2><act> generate notification </act></path2>
The process of vacations request starts when<act>submit vacation request</act>. After<act>note request</act>, <act>receive request</act>. Thereafter<act>review request</act>. The supervisor can approve or reject the request. Whenever the request is rejected, <act>return application</act>. Whenever the request is approved, <act>generate notification</act>.; <act> submit vacation request </act> <act> note request </act> <act> receive request </act> <act> review request </act>  <path1><act> return application </act></path1><path2><act> generate notification </act></path2>
The process of vacations request starts when<act>submit vacation request</act>. When<act>register requirement</act>, <act>receive request</act>. Next<act>review request</act>. The supervisor can approve or reject the request. If the request is rejected, <act>return application</act>. If the request is approved, <act>generate notification</act>.; <act> submit vacation request </act> <act> register requirement </act> <act> receive request </act> <act> review request </act>  <path1><act> return application </act></path1><path2><act> generate notification </act></path2>
The process of an office supply request starts when<act>submit office supply request</act>. Before<act>receive request</act>, <act>register requirement</act>. Thereafter<act>assess request</act>. If the request is rejected, <act>return request</act>. In case the request is approved, the request will go to the purchase department that will be in charge of <act>select vendor</act>. If the vendor is not valid in the system, the purchase department will have <act>choose different vendor</act>. <act>select vendor</act>. Subsequently<act>send purchase order</act>. Thereafter<act>wait system</act> for the product to be delivered. <act>send notification</act> to let the user know what the result was.; <act> submit office supply request </act> <act> register requirement </act> <act> receive request</act> <act> assess request </act> <path1><act> return request </act></path1><path2><act> select vendor </act></path2> <path1><act> choose different vendor </act></path1> <act> select and confirm vendor </act>  <act> send purchase order </act>  <act> wait </act> <act> send notification </act> 
The process of an office supply request starts when<act>submit office supply request</act>. In the next step,<act>be </act>. Then<act>receive request</act>. Subsequently<act>assess request</act>. Whenever the request is rejected, <act>return request</act>. If the request is approved, the request will go to the purchase department that will be in charge of <act>select vendor</act>. Whenever the vendor is not valid in the system, the purchase department will have <act>choose different vendor</act>. <act>select vendor</act>. Next,<act>send purchase order</act>. Later<act>wait system</act> for the invoice to be received. <act>send notification</act> to let the user know what the result was.; <act> submit office supply request </act> <act> register requirement </act> <act> receive request</act> <act> assess request </act> <path1><act> return request </act></path1><path2><act> select vendor </act></path2> <path1><act> choose different vendor </act></path1> <act> select and confirm vendor </act>  <act> send purchase order </act>  <act> wait </act> <act> send notification </act> 
The process of an office supply request starts when<act>submit office supply request</act>. Before<act>receive request</act>, <act>register requirement</act>. Subsequently<act>assess request</act>. Whenever the request is rejected, <act>return request</act>. If the request is approved, the request will go to the purchase department that will be in charge of <act>select vendor</act>. If the vendor is not valid in the system, the purchase department will have <act>choose different vendor</act>. <act>select vendor</act>. <act>send purchase order</act>. <act>wait system</act> for the product to be delivered. <act>send notification</act> to let the user know what the result was.; <act> submit office supply request </act> <act> receive request</act> <act> register requirement </act> <act> assess request </act> <path1><act> return request </act></path1><path2><act> select vendor </act></path2> <path1><act> choose different vendor </act></path1> <act> select and confirm vendor </act>  <act> send purchase order </act>  <act> wait </act> <act> send notification </act> 
The process of an office supply request starts when<act>submit office supply request</act>. Before<act>receive request</act>, <act>register requirement</act>. Thereafter<act>assess request</act>. In case the request is rejected, <act>be request</act>. In case the request is approved, the request will go to the purchase department that will be in charge of <act>select vendor</act>. If the vendor is not valid in the system, the purchase department will have <act>choose different vendor</act>. <act>select vendor</act>. In the next step,<act>send purchase order</act>. Later<act>wait system</act> for the product to be delivered. <act>send notification</act> to let the user know what the result was.; <act> submit office supply request </act> <act> receive request</act> <act> register requirement </act> <act> assess request </act> <path1><act> close request </act></path1><path2><act> select vendor </act></path2> <path1><act> choose different vendor </act></path1> <act> select and confirm vendor </act>  <act> send purchase order </act>  <act> wait </act> <act> send notification </act> 
The process of an office supply request starts when<act>submit office supply request</act>. After<act>be </act>, <act>receive request</act>. In the next step,<act>assess request</act>. If the request is rejected, <act>return request</act>. In case the request is approved, the request will go to the purchase department that will be in charge of <act>select vendor</act>. If the vendor is not valid in the system, the purchase department will have <act>choose different vendor</act>. <act>select vendor</act>. Afterwards, the system will send a purchase order. Subsequently<act>wait system</act> for the invoice to be received. <act>send notification</act> to let the user know what the result was.; <act> submit office supply request </act> <act> register requirement </act> <act> receive request</act> <act> assess request </act> <path1><act> return request </act></path1><path2><act> select vendor </act></path2> <path1><act> choose different vendor </act></path1> <act> select and confirm vendor </act>  <act> send purchase order </act>  <act> wait </act> <act> send notification </act> 
First<act>purchase product or service</act> that an employee requires. For instance, a sales person on a trip rents a car. Before<act>review expense report</act>, <act>submit expense report with list of items along with receipts for item</act>. Next she approves or rejects the report. This review could be automated, to reduce the workload on the supervisor. If the supervisor rejects the report, <act>receive response with reasons</act> why the report was rejected. Whenever the supervisor approves the report, <act>hand over report</act>. Next,<act>check report</act>. If everything is in order, <act>accept expenses for processing</act>. In case receipts are missing or do not match the report, <act>make corrections</act> . After that,<act>wait process</act>. After<act>confirm payment</act>, the process ends.; <act> purchase product or service </act>  <act> review expense report </act> <act> submit expense report </act>   <path1><act> receive response </act></path1><path2><act> hand over report </act></path2> <act> check report </act> <path1><act> accept expenses for processing </act></path1><path2><act> make corrections </act></path2> <act> wait for payment confirmation </act> <act> confirm payment </act>
First<act>purchase product or service</act> that an employee requires. For instance, a sales person on a trip rents a car. Before<act>review expense report</act>, <act>submit expense report with list of items along with receipts for item</act>. Subsequently she approves or rejects the report. This review could be automated, to reduce the workload on the supervisor. If the supervisor rejects the report, <act>receive response with reasons</act> why the report was rejected. If the supervisor approves the report, <act>hand over report</act>. Subsequently<act>check report</act>. If everything is in order, <act>accept expenses for processing</act>. If receipts are missing or do not match the report, <act>make corrections</act> . Next<act>wait process</act>. After<act>confirm payment</act>, the process ends.; <act> purchase product or service </act>  <act> review expense report </act> <act> submit expense report </act>   <path1><act> receive response </act></path1><path2><act> hand over report </act></path2> <act> check report </act> <path1><act> accept expenses for processing </act></path1><path2><act> make corrections </act></path2> <act> wait for payment confirmation </act> <act> confirm payment </act>
The process starts when<act>purchase product or service</act> that an employee requires. For instance, a sales person on a trip rents a car. Next<act>submit expense report with list of items along with receipts for item</act>. <act>review expense report</act>. Subsequently A supervisor approves or rejects the expense report. This review could be automated, to reduce the workload on the supervisor. If the supervisor rejects the report, <act>receive response with reasons</act> why the report was rejected. Whenever the supervisor approves the report, <act>hand over report</act>. <act>check report</act>. If everything is in order, <act>accept expenses for processing</act>. In case receipts are missing or do not match the report, <act>make corrections</act> . In the next step,<act>wait process</act>. After<act>confirm payment</act>, the process ends.; <act> purchase product or service </act>  <act> submit expense report </act> <act> review expense report </act>   <path1><act> receive response </act></path1><path2><act> hand over report </act></path2> <act> check report </act> <path1><act> accept expenses for processing </act></path1><path2><act> make corrections </act></path2> <act> wait for payment confirmation </act> <act> confirm payment </act>
The process starts when<act>purchase product or service</act> that an employee requires. For instance, a sales person on a trip rents a car. After <act>submit expense report with list of items along with receipts for item</act>, a supervisor reviews the expense report. Next a supervisor approves or rejects the expense report. This review could be automated, to reduce the workload on the supervisor. If the supervisor rejects the report, <act>receive response with reasons</act> why the report was rejected. If the supervisor approves the report, <act>hand over report</act>. Later<act>check report</act>. If everything is in order, <act>accept expenses for processing</act>. If receipts are missing or do not match the report, <act>make corrections</act> . Later<act>wait process</act>. After<act>confirm payment</act>, the process ends.; <act> purchase product or service </act>  <act> submit expense report </act> <act> review expense report </act>   <path1><act> receive response </act></path1><path2><act> hand over report </act></path2> <act> check report </act> <path1><act> accept expenses for processing </act></path1><path2><act> make corrections </act></path2> <act> wait for payment confirmation </act> <act> confirm payment </act>
Initially<act>purchase product or service</act> that an employee requires. For instance, a sales person on a trip rents a car. In the next step,<act>submit expense report with list of items along with receipts for item</act>. Subsequently<act>review expense report</act>. Subsequently she approves or rejects the report. This review could be automated, to reduce the workload on the supervisor. If the supervisor rejects the report, <act>receive response with reasons</act> why the report was rejected. Whenever the supervisor approves the report, <act>hand over report</act>. Thereafter<act>check report</act>. Whenever everything is in order, <act>accept expenses for processing</act>. If receipts are missing or do not match the report, <act>make corrections</act> . <act>wait process</act>. After<act>confirm payment</act>, the process ends.; <act> purchase product or service </act>  <act> submit expense report </act> <act> review expense report </act>   <path1><act> receive response </act></path1><path2><act> hand over report </act></path2> <act> check report </act> <path1><act> accept expenses for processing </act></path1><path2><act> make corrections </act></path2> <act> wait for payment confirmation </act> <act> confirm payment </act>
First<act>send warrant possession request asking warrant</act> to be released. Then<act>retrieve file</act>. If some files are missing, <act>track files</act>. Next<act>attache new document</act>. After that,<act>forward sct warrant possession</act>.; <act> send warrant possession request </act> <act> retrieve file </act> <path1><act> track files physically </act></path1> <act> attach document </act> <act> forward SCT Warrant Possession </act>
The process starts when<act>send warrant possession request asking warrant</act> to be released. Later<act>retrieve file</act>. If some files are missing, <act>initiate search</act>. Then<act>expand physical file</act>. After that,<act>forward sct warrant possession</act>.; <act> send warrant possession request </act> <act> retrieve file </act> <path1><act> initiate search </act></path1> <act> store physical file </act> <act> forward SCT Warrant Possession </act>
The process starts when<act>send warrant possession request asking warrant</act> to be released. Then<act>retrieve file</act>. If some files are missing, <act>track files</act>. Thereafter<act>expand physical file</act>. Thereafter<act>forward sct warrant possession</act>.; <act> send warrant possession request </act> <act> retrieve file </act> <path1><act> track files physically </act></path1> <act> store physical file </act> <act> forward SCT Warrant Possession </act>
Initially<act>send warrant possession request asking warrant</act> to be released. Afterwards, the client service back office as part of the small claims registry operations retrieves the file. If some files are missing, <act>initiate search</act>. <act>expand physical file</act>. In the next step,<act>forward sct warrant possession</act>.; <act> send warrant possession request </act> <act> retrieve file </act> <path1><act> initiate search </act></path1> <act> store physical file </act> <act> forward SCT Warrant Possession </act>
First<act>send warrant possession request asking warrant</act> to be released. In the next step,<act>retrieve file</act>. In case some files are missing, <act>initiate search</act>. In the next step,<act>attache new document</act>. After that,<act>forward sct warrant possession</act>.; <act> send warrant possession request </act> <act> retrieve file </act> <path1><act> initiate search </act></path1> <act> attach document </act> <act> forward SCT Warrant Possession </act>
First<act>register claim</act> . Later<act>examine claim</act>. <act>write settlement recommendation</act> is then checked by a senior claims officer who may mark the claim as ok or not ok. If the claim is marked as not OK, <act>send letter</act>. If the claim is OK, <act>receive confirmation</act>.; <act> register claim </act> <act> examine claim </act> <act> write settlement recommendation </act>  <act> check recommendation </act> <path1><act> send letter back </act></path1><path2><act> receive confirmation </act></path2>
First<act>register claim</act> . Thereafter<act>examine claim</act>. <act>write settlement recommendation</act> is then checked by a senior claims officer who may mark the claim as ok or not ok. If the claim is marked as not OK, <act>send letter</act>. If the claim is OK, <act>receive confirmation</act>.; <act> register claim </act> <act> examine claim </act> <act> write settlement recommendation </act>  <act> check recommendation </act> <path1><act> send letter back </act></path1><path2><act> receive confirmation </act></path2>
Initially<act>register claim</act> . Thereafter<act>examine claim</act>. <act>write settlement recommendation</act> is then checked by a senior claims officer who may mark the claim as ok or not ok. If the claim is marked as not OK, <act>send letter</act>. If the claim is OK, <act>receive confirmation</act>.; <act> register claim </act> <act> examine claim </act> <act> write settlement recommendation </act>  <act> check recommendation </act> <path1><act> send letter back </act></path1><path2><act> receive confirmation </act></path2>
The process starts when<act>register claim</act> . In the next step,<act>examine claim</act>. <act>write settlement recommendation</act> is then checked by a senior claims officer who may mark the claim as ok or not ok. If the claim is marked as not OK, <act>send letter</act>. In case the claim is OK, <act>receive confirmation</act>.; <act> register claim </act> <act> examine claim </act> <act> write settlement recommendation </act>  <act> check recommendation </act> <path1><act> send letter back </act></path1><path2><act> receive confirmation </act></path2>
The process starts when<act>register claim</act> . In the next step,<act>examine claim</act>. <act>write settlement recommendation</act> is then checked by a senior claims officer who may mark the claim as ok or not ok. Whenever the claim is marked as not OK, <act>send letter</act>. Whenever the claim is OK, <act>receive confirmation</act>.; <act> register claim </act> <act> examine claim </act> <act> write settlement recommendation </act>  <act> check recommendation </act> <path1><act> send letter back </act></path1><path2><act> receive confirmation </act></path2>
First<act>collect mail from party</act>. <act>sort unopened mail</act>. In the next step,<act>distribute mail</act>. After that,<act>receive mail</act>. In case the mail is not compliant, <act>compile reason for rejection</act>. If the mail is compliant, <act>capture matter details</act>. Before<act>post documents</act>, <act>put documents</act> . Before<act>print physical court file</act>, <act>capture party details</act>.; <act> collect mail </act> <act> sort mail </act> <act> distribute mail </act> <act> receive mail </act> <path1><act> compile list of requisition </act></path1><path2><act> capture matter details </act> </path2> <act> post documents </act> <act> put documents into envelope </act>  <act> print Physical Court File </act> <act> capture Party Details </act>
Initially<act>collect mail from party</act>. <act>sort unopened mail</act>. Next,<act>distribute mail</act>. Subsequently<act>receive mail</act>. If the mail is not compliant, <act>compile reason for rejection</act>. If the mail is compliant, <act>capture matter details</act>. Before<act>post documents</act>, <act>put documents</act> . Once<act>capture party details</act>, <act>print physical court file</act>.; <act> collect mail </act> <act> sort mail </act> <act> distribute mail </act> <act> receive mail </act> <path1><act> compile list of requisition </act></path1><path2><act> capture matter details </act> </path2> <act> post documents </act> <act> put documents into envelope </act>  <act> capture Party Details </act> <act> print Physical Court File </act>
First<act>collect mail from party</act>. <act>sort unopened mail</act>. <act>distribute mail</act>. Subsequently<act>receive mail</act>. Whenever the mail is not compliant, <act>compile reason for rejection</act>. If the mail is compliant, <act>capture matter details</act>. Before<act>post documents</act>, <act>put documents</act> . After<act>capture party details</act>, <act>print physical court file</act>.; <act> collect mail </act> <act> sort mail </act> <act> distribute mail </act> <act> receive mail </act> <path1><act> compile list of requisition </act></path1><path2><act> capture matter details </act> </path2> <act> post documents </act> <act> put documents into envelope </act>  <act> capture Party Details </act> <act> print Physical Court File </act>
The process starts when<act>collect mail from party</act>. <act>sort unopened mail</act>. Subsequently<act>distribute mail</act>. Next<act>receive mail</act>. If the mail is not compliant, <act>compile reason for rejection</act>. If the mail is compliant, <act>capture matter details</act>. Before<act>post documents</act>, <act>put documents</act> . Before<act>print physical court file</act>, <act>capture party details</act>.; <act> collect mail </act> <act> sort mail </act> <act> distribute mail </act> <act> receive mail </act> <path1><act> compile list of requisition </act></path1><path2><act> capture matter details </act> </path2> <act> post documents </act> <act> put documents into envelope </act>  <act> print Physical Court File </act> <act> capture Party Details </act>
First<act>collect mail from party</act>. <act>sort unopened mail</act>. <act>distribute mail</act>. Later<act>receive mail</act>. Whenever the mail is not compliant, <act>compile reason for rejection</act>. If the mail is compliant, <act>capture matter details</act>. Once<act>put documents</act> , <act>post documents</act>. When<act>capture party details</act>, <act>print physical court file</act>.; <act> collect mail </act> <act> sort mail </act> <act> distribute mail </act> <act> receive mail </act> <path1><act> compile list of requisition </act></path1><path2><act> capture matter details </act> </path2> <act> put documents into envelope </act>  <act> post documents </act> <act> capture Party Details </act> <act> print Physical Court File </act>
In the context of a claim handling process, it is sometimes necessary <act>send questionnaire</act> to gather additional information. The claimant is expected to return the questionnaire within five days. In case no response is received after five days, <act>send reminder</act>. Whenever a response is received within five days , <act>process questionnaire</act> . In the next step,<act>receive feedback on questionnaire</act> .; <act> send questionnaire </act> <act> return questionnaire </act> <path1><act> send reminder </act></path1><path2><act> process questionnaire </act></path2> <act> receive feedback </act>
In the context of a claim handling process, it is sometimes necessary <act>send questionnaire</act> to gather additional information. The claimant is expected to return the questionnaire within five days. If no response is received after five days, <act>send reminder</act>. If a response is received within five days , <act>process questionnaire</act> . Afterwards, the claimant receives feedback on the questionnaire .; <act> send questionnaire </act> <act> return questionnaire </act> <path1><act> send reminder </act></path1><path2><act> process questionnaire </act></path2> <act> receive feedback </act>
In the context of a claim handling process, it is sometimes necessary <act>send questionnaire</act> to gather additional information. The claimant is expected to return the questionnaire within five days. In case no response is received after five days, <act>send reminder</act>. If a response is received within five days , <act>process questionnaire</act> . Next,<act>receive feedback on questionnaire</act> .; <act> send questionnaire </act> <act> return questionnaire </act> <path1><act> send reminder </act></path1><path2><act> process questionnaire </act></path2> <act> receive feedback </act>
In the context of a claim handling process, it is sometimes necessary <act>send questionnaire</act> to gather additional information. The claimant is expected to return the questionnaire within five days. If no response is received after five days, <act>send reminder</act>. If a response is received within five days , <act>process questionnaire</act> . <act>receive feedback on questionnaire</act> .; <act> send questionnaire </act> <act> return questionnaire </act> <path1><act> send reminder </act></path1><path2><act> process questionnaire </act></path2> <act> receive feedback </act>
In the context of a claim handling process, it is sometimes necessary <act>send questionnaire</act> to gather additional information. The claimant is expected to return the questionnaire within five days. In case no response is received after five days, <act>send reminder</act>. If a response is received within five days , <act>process questionnaire</act> . In the next step,<act>receive feedback on questionnaire</act> .; <act> send questionnaire </act> <act> return questionnaire </act> <path1><act> send reminder </act></path1><path2><act> process questionnaire </act></path2> <act> receive feedback </act>
Initially<act>receive claim</act>. Next<act>check insurance of claimant</act>. If not, the claimant is informed that the claim must be rejected. Otherwise, the severity of the claim is evaluated. After<act>send relevant forms</act>, <act>check forms</act>. If the forms provide all relevant details, <act>register claim</act>. Otherwise, the claimant is informed <act>update forms</act>.; <act> receive claim </act> <act> check insurance</act> <path1><act> inform claimant </act></path1><path2><act> evaluate severity of the claim </act></path2> <act> send relevant forms </act> <act> check forms for completeness </act> <path1><act> register claim </act></path1><path2><act> inform claimant </act></path2>
First<act>receive claim</act>. Later<act>check insurance of claimant</act>. Whenever not, <act>inform claimant</act> that the claim must be rejected. Otherwise, the severity of the claim is evaluated. Once<act>send relevant forms</act>, <act>check forms</act>. If the forms provide all relevant details, <act>register claim</act>. Otherwise, <act>inform claimant</act> <act>update forms</act>.; <act> receive claim </act> <act> check insurance</act> <path1><act> inform claimant </act></path1><path2><act> evaluate severity of the claim </act></path2> <act> send relevant forms </act> <act> check forms for completeness </act> <path1><act> register claim </act></path1><path2><act> inform claimant </act></path2>
Initially<act>receive claim</act>. Afterwards, the insurance of the claimant is checked by the organisation. If not, the claimant is informed that the claim must be rejected. Otherwise, the severity of the claim is evaluated. After<act>send relevant forms</act>, <act>check forms</act>. In case the forms provide all relevant details, <act>register claim</act>. Otherwise, the claimant is informed <act>update forms</act>.; <act> receive claim </act> <act> check insurance</act> <path1><act> inform claimant </act></path1><path2><act> evaluate severity of the claim </act></path2> <act> send relevant forms </act> <act> check forms for completeness </act> <path1><act> register claim </act></path1><path2><act> inform claimant </act></path2>
First<act>receive claim</act>. Subsequently<act>check insurance of claimant</act>. If not, the claimant is informed that the claim must be rejected. Otherwise, the severity of the claim is evaluated. After<act>send relevant forms</act>, <act>check forms</act>. Whenever the forms provide all relevant details, <act>register claim</act>. Otherwise, the claimant is informed <act>update forms</act>.; <act> receive claim </act> <act> check insurance</act> <path1><act> inform claimant </act></path1><path2><act> evaluate severity of the claim </act></path2> <act> send relevant forms </act> <act> check forms for completeness </act> <path1><act> register claim </act></path1><path2><act> inform claimant </act></path2>
First<act>receive claim</act>. Afterwards, the insurance of the claimant is checked by the organisation. If not, the claimant is informed that the claim must be rejected. Otherwise, the severity of the claim is evaluated. Before<act>check forms</act>, <act>send relevant forms</act>. If the forms provide all relevant details, <act>register claim</act>. Otherwise, the claimant is informed <act>update forms</act>.; <act> receive claim </act> <act> check insurance</act> <path1><act> inform claimant </act></path1><path2><act> evaluate severity of the claim </act></path2> <act> check forms for completeness </act> <act> send relevant forms </act> <path1><act> register claim </act></path1><path2><act> inform claimant </act></path2>
<act>receive expense report</act>. After<act>put report</act>, this file serves as input to a claims handler <act>calculate initial claim estimate</act>. Next,<act>create action plbased on checklist available in document management system</act>. Based on the action plan, a claims manager tries <act>negotiate settlement on claim estimate</act>. <act>inform claimant</act>.; <act> receive report </act> <act> put report in file</act> <act> calculate initial claim estimate </act> <act> create action plan </act> <act> negotiate settlement </act> <act> inform claimant </act>
<act>receive expense report</act>. When<act>put report</act>, this file serves as input to a claims handler <act>calculate initial claim estimate</act>. Subsequently<act>create action plbased on checklist available in document management system</act>. Based on the action plan, a claims manager tries <act>negotiate settlement on claim estimate</act>. Afterwards, the claimant is informed of the outcome.; <act> receive report </act> <act> put report in file</act> <act> calculate initial claim estimate </act> <act> create action plan </act> <act> negotiate settlement </act> <act> inform claimant </act>
<act>receive expense report</act>. Before this file serves as input to a claims handler <act>calculate initial claim estimate</act>, <act>put report</act>. Subsequently<act>create action plbased on checklist available in document management system</act>. Based on the action plan, a claims manager tries <act>negotiate settlement on claim estimate</act>. Later<act>inform claimant</act>.; <act> receive report </act> <act> calculate initial claim estimate </act> <act> put report in file</act> <act> create action plan </act> <act> negotiate settlement </act> <act> inform claimant </act>
<act>receive expense report</act>. Before this file serves as input to a claims handler <act>calculate initial claim estimate</act>, <act>put report</act>. Afterwards, the claims handler creates an action plan based on a checklist available in the document management system. Based on the action plan, a claims manager tries <act>negotiate settlement on claim estimate</act>. Next<act>inform claimant</act>.; <act> receive report </act> <act> calculate initial claim estimate </act> <act> put report in file</act> <act> create action plan </act> <act> negotiate settlement </act> <act> inform claimant </act>
<act>receive expense report</act>. After<act>put report</act>, this file serves as input to a claims handler <act>calculate initial claim estimate</act>. Thereafter<act>create action plbased on checklist available in document management system</act>. Based on the action plan, a claims manager tries <act>negotiate settlement on claim estimate</act>. After that,<act>inform claimant</act>.; <act> receive report </act> <act> put report in file</act> <act> calculate initial claim estimate </act> <act> create action plan </act> <act> negotiate settlement </act> <act> inform claimant </act>
The process starts when<act>submit claim</act> sending in relevant documentation. <act>check documents</act>. <act>register claim</act>. Then<act>pick up claim</act> . Next,<act>check insurance</act>. Next,<act>perform assessment</act>. If the assessment is positive, <act>phone garage</act> to authorise the repairs. Otherwise, the claim is rejected. <act>send letter</act>.; <act> submit claim </act> <act> check documents </act> <act> register claim </act> <act> pick up claim </act> <act> check insurance </act> <act> perform assessment </act> <path1><act> phone garage </act></path1><path2><act> reject claim </act></path2> <act> send letter </act>
The process starts when<act>submit claim</act> sending in relevant documentation. <act>check documents</act>. Next,<act>register claim</act>. Before<act>check insurance</act>, <act>pick up claim</act> . Then<act>perform assessment</act>. If the assessment is positive, <act>phone garage</act> to authorise the repairs. Otherwise, the claim is rejected. <act>send letter</act>.; <act> submit claim </act> <act> check documents </act> <act> register claim </act> <act> check insurance </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> phone garage </act></path1><path2><act> reject claim </act></path2> <act> send letter </act>
The process starts when<act>submit claim</act> sending in relevant documentation. <act>check documents</act>. Subsequently<act>register claim</act>. <act>pick up claim</act> . <act>check insurance</act>. <act>perform assessment</act>. Whenever the assessment is positive, <act>phone garage</act> to authorise the repairs. Otherwise, the claim is rejected. <act>send letter</act>.; <act> submit claim </act> <act> check documents </act> <act> register claim </act> <act> pick up claim </act> <act> check insurance </act> <act> perform assessment </act> <path1><act> phone garage </act></path1><path2><act> reject claim </act></path2> <act> send letter </act>
First<act>submit claim</act> sending in relevant documentation. <act>check documents</act>. Afterwards, the notification department insurer registers the claim. Before<act>check insurance</act>, <act>pick up claim</act> . <act>perform assessment</act>. If the assessment is positive, <act>phone garage</act> to authorise the repairs. Otherwise, the claim is rejected. <act>send letter</act>.; <act> submit claim </act> <act> check documents </act> <act> register claim </act> <act> check insurance </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> phone garage </act></path1><path2><act> reject claim </act></path2> <act> send letter </act>
The process starts when<act>submit claim</act> sending in relevant documentation. <act>check documents</act>. After that,<act>register claim</act>. Before<act>check insurance</act>, <act>pick up claim</act> . Subsequently<act>perform assessment</act>. If the assessment is positive, <act>phone garage</act> to authorise the repairs. Otherwise, the claim is rejected. <act>send letter</act>.; <act> submit claim </act> <act> check documents </act> <act> register claim </act> <act> check insurance </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> phone garage </act></path1><path2><act> reject claim </act></path2> <act> send letter </act>
When a visitor wants to become a member of the zooclub of barcelona, the following steps must be taken. First of all, the customer must decide whether he wants an individual or family membership. If the customer wants an individual membership, <act>prepare personal information</act>. Whenever he wants a family membership instead, <act>print card</act>. Once<act>send information</act>, <act>wait visitor</act>. Then<act>receive card</act>. Next,<act>go </act>.;  <act> decide whether individual or family ticket </act> <path1><act> prepare personal information </act></path1><path2><act> print and deliver card to visitor </act></path2> <act> send information </act> <act> wait for card </act> <act> receive the card</act> <act> go home </act>
When a visitor wants to become a member of the zooclub of barcelona, the following steps must be taken. First of all, the customer must decide whether he wants an individual or family membership. In case the customer wants an individual membership, <act>prepare personal information</act>. Whenever he wants a family membership instead, <act>print card</act>. Once<act>send information</act>, <act>wait visitor</act>. In the next step,<act>receive card</act>. Next<act>go </act>.;  <act> decide whether individual or family ticket </act> <path1><act> prepare personal information </act></path1><path2><act> print and deliver card to visitor </act></path2> <act> send information </act> <act> wait for card </act> <act> receive the card</act> <act> go home </act>
When a visitor wants to become a member of the zooclub of barcelona, the following steps must be taken. First of all, the customer must decide whether he wants an individual or family membership. In case the customer wants an individual membership, <act>prepare personal information</act>. If he wants a family membership instead, <act>print card</act>. Next<act>send information</act>. Next<act>wait visitor</act>. Before<act>go </act>, <act>receive card</act>.;  <act> decide whether individual or family ticket </act> <path1><act> prepare personal information </act></path1><path2><act> print and deliver card to visitor </act></path2> <act> send information </act> <act> wait for card </act> <act> go home </act> <act> receive the card</act>
When a visitor wants to become a member of the zooclub of barcelona, the following steps must be taken. First of all, the customer must decide whether he wants an individual or family membership. In case the customer wants an individual membership, <act>prepare personal information</act>. Whenever he wants a family membership instead, <act>print card</act>. Before<act>wait visitor</act>, <act>send information</act>. Once<act>receive card</act>, <act>go </act>.;  <act> decide whether individual or family ticket </act> <path1><act> prepare personal information </act></path1><path2><act> print and deliver card to visitor </act></path2> <act> wait for card </act> <act> send information </act> <act> receive the card</act> <act> go home </act>
When a visitor wants to become a member of the zooclub of barcelona, the following steps must be taken. First of all, the customer must decide whether he wants an individual or family membership. If the customer wants an individual membership, <act>prepare personal information</act>. Whenever he wants a family membership instead, <act>print card</act>. Before<act>wait visitor</act>, <act>send information</act>. Before<act>go </act>, <act>receive card</act>.;  <act> decide whether individual or family ticket </act> <path1><act> prepare personal information </act></path1><path2><act> print and deliver card to visitor </act></path2> <act> wait for card </act> <act> send information </act> <act> go home </act> <act> receive the card</act>
First<act>input information of customer</act> . Before<act>forward information</act>, <act>transfer payment request</act>. Before<act>print card</act>, <act>confirm payment</act>. <act>deliver zooclub department</act>.; <act> input information </act>  <act> forward information </act> <act> transfer payment request </act> <act> print card </act> <act> confirm payment </act> <act> deliver card </act>
Initially<act>input information of customer</act> . Once<act>transfer payment request</act>, <act>forward information</act>. Before<act>print card</act>, <act>confirm payment</act>. <act>deliver zooclub department</act>.; <act> input information </act>  <act> transfer payment request </act> <act> forward information </act> <act> print card </act> <act> confirm payment </act> <act> deliver card </act>
The process starts when<act>input information of customer</act> . Before<act>forward information</act>, <act>transfer payment request</act>. Then<act>confirm payment</act>. <act>print card</act>. <act>deliver zooclub department</act>.; <act> input information </act>  <act> forward information </act> <act> transfer payment request </act> <act> confirm payment </act> <act> print card </act> <act> deliver card </act>
Initially<act>input information of customer</act> . After<act>transfer payment request</act>, <act>forward information</act>. Before<act>print card</act>, <act>confirm payment</act>. <act>deliver zooclub department</act>.; <act> input information </act>  <act> transfer payment request </act> <act> forward information </act> <act> print card </act> <act> confirm payment </act> <act> deliver card </act>
First<act>input information of customer</act> . After<act>transfer payment request</act>, <act>forward information</act>. When<act>confirm payment</act>, <act>print card</act>. <act>deliver zooclub department</act>.; <act> input information </act>  <act> transfer payment request </act> <act> forward information </act> <act> confirm payment </act> <act> print card </act> <act> deliver card </act>
Whenever a company makes the decision to go public, its first task is <act>select underwriters</act>. Underwriters act as financial midwives to a new issue. After<act>prepare registration statement for approval of securities and exchange commission</act> , <act>receive clearance</act>. Before they enter into a firm commitment <act>buy stock</act> , <act>fix issue price</act>. Next,<act>offer it</act>, when underwriters have not still found any reason not to do it.; <act> select underwriters </act>  <act> prepare registration statement for approval of Securities and Exchange Commission  </act> <act> receive clearance </act> <act> buy stock </act>  <act> fix issue price </act> <act> offer to public </act>
Whenever a company makes the decision to go public, its first task is <act>select underwriters</act>. Underwriters act as financial midwives to a new issue. Before<act>receive clearance</act>, <act>prepare registration statement for approval of securities and exchange commission</act> . Before they enter into a firm commitment <act>buy stock</act> , <act>fix issue price</act>. Next<act>offer issue price</act>, when underwriters have not still found any reason not to do the issue price.; <act> select underwriters </act>  <act> receive clearance </act> <act> prepare registration statement for approval of Securities and Exchange Commission  </act> <act> buy stock </act>  <act> fix issue price </act> <act> offer to public </act>
Whenever a company makes the decision to go public, its first task is <act>select underwriters</act>. Underwriters act as financial midwives to a new issue. When<act>prepare registration statement for approval of securities and exchange commission</act> , <act>receive clearance</act>. Afterwards, underwriters fix the issue price. They enter into a firm commitment <act>buy stock</act> . Then<act>offer stock</act>, when They have not still found any reason not to do the stock.; <act> select underwriters </act>  <act> prepare registration statement for approval of Securities and Exchange Commission  </act> <act> receive clearance </act> <act> fix issue price </act> <act> buy stock </act>  <act> offer to public </act>
Whenever a company makes the decision to go public, its first task is <act>select underwriters</act>. Underwriters act as financial midwives to a new issue. After<act>prepare registration statement for approval of securities and exchange commission</act> , <act>receive clearance</act>. Before they enter into a firm commitment <act>buy stock</act> , <act>fix issue price</act>. Later<act>offer issue price</act>, when underwriters have not still found any reason not to do the issue price.; <act> select underwriters </act>  <act> prepare registration statement for approval of Securities and Exchange Commission  </act> <act> receive clearance </act> <act> buy stock </act>  <act> fix issue price </act> <act> offer to public </act>
Whenever a company makes the decision to go public, its first task is <act>select underwriters</act>. Underwriters act as financial midwives to a new issue. Before<act>receive clearance</act>, <act>prepare registration statement for approval of securities and exchange commission</act> . Before they enter into a firm commitment <act>buy stock</act> , <act>fix issue price</act>. <act>offer issue price</act>, when underwriters have not still found any reason not to do the issue price.; <act> select underwriters </act>  <act> receive clearance </act> <act> prepare registration statement for approval of Securities and Exchange Commission  </act> <act> buy stock </act>  <act> fix issue price </act> <act> offer to public </act>
<act>enter restaurant</act> when feeling hungry. <act>choose dish</act>. Next,<act>next</act> until it is his turn. After<act>place order</act>, <act>pick up meal</act>. Subsequently<act>eat meal</act>.; <act> enter restaurant </act> <act> choose dish </act> <act> wait </act> <act> place order </act> <act> pick up meal </act> <act> eat meal </act>
<act>enter restaurant</act> when feeling hungry. Next<act>choose dish from changing meal range</act>. Next,<act>next</act> until it is his turn. Before<act>pick up meal</act>, <act>place order</act>. Thereafter<act>eat meal</act>.; <act> enter restaurant </act> <act> choose dish </act> <act> wait </act> <act> pick up meal </act> <act> place order </act> <act> eat meal </act>
<act>enter restaurant</act> when feeling hungry. Afterwards, A guest chooses a dish from the changing meal range. Next,<act>next</act> until it is his turn. Once<act>place order</act>, <act>pick up meal</act>. Subsequently<act>eat meal</act>.; <act> enter restaurant </act> <act> choose dish </act> <act> wait </act> <act> place order </act> <act> pick up meal </act> <act> eat meal </act>
<act>enter restaurant</act> when feeling hungry. <act>choose dish</act>. Next,<act>next</act> until it is his turn. Before<act>pick up meal</act>, <act>place order</act>. Next,<act>eat meal</act>.; <act> enter restaurant </act> <act> choose dish </act> <act> wait </act> <act> pick up meal </act> <act> place order </act> <act> eat meal </act>
<act>enter restaurant</act> when feeling hungry. <act>choose dish</act>. Next,<act>next</act> until it is his turn. Once<act>place order</act>, <act>pick up meal</act>. <act>eat meal</act>.; <act> enter restaurant </act> <act> choose dish </act> <act> wait </act> <act> place order </act> <act> pick up meal </act> <act> eat meal </act>
Initially<act>enter order</act> . Thereafter<act>collect money</act>. After<act>set up buzzer</act>. <act>pass buzzer</act>. In the next step,<act>inform chef</act>. Once <act>call him</act>.; <act> enter order in POS system </act> <act> collect money </act> <act> set up buzzer </act> <act> pass buzzer </act> <act> inform chef </act> <act> set off buzzer </act>  <act> hand over meal </act> <path1><act> call customer </act></path1>
First<act>enter order</act> . Thereafter<act>collect money</act>. After<act>set up buzzer</act>. <act>pass buzzer</act>. Next,<act>inform chef</act>. Once <act>call him</act>.; <act> enter order in POS system </act> <act> collect money </act> <act> set up buzzer </act> <act> pass buzzer </act> <act> inform chef </act> <act> set off buzzer </act>  <act> hand over meal </act> <path1><act> call customer </act></path1>
Initially<act>enter order</act> . Later<act>collect money</act>. After<act>set up buzzer</act>. <act>pass buzzer</act>. In the next step,<act>inform chef</act>. Once <act>call him</act>.; <act> enter order in POS system </act> <act> collect money </act> <act> set up buzzer </act> <act> pass buzzer </act> <act> inform chef </act> <act> set off buzzer </act>  <act> hand over meal </act> <path1><act> call customer </act></path1>
First<act>enter order</act> . In the next step,<act>collect money</act>. After<act>set up buzzer</act>. <act>pass buzzer</act>. Then<act>inform chef</act>. Once <act>call him</act>.; <act> enter order in POS system </act> <act> collect money </act> <act> set up buzzer </act> <act> pass buzzer </act> <act> inform chef </act> <act> set off buzzer </act>  <act> hand over meal </act> <path1><act> call customer </act></path1>
Initially<act>enter order</act> . Next<act>collect money</act>. After<act>set up buzzer</act>. <act>pass buzzer</act>. Afterwards, <act>call him</act>.; <act> enter order in POS system </act> <act> collect money </act> <act> set up buzzer </act> <act> pass buzzer </act> <act> inform chef </act> <act> set off buzzer </act>  <act> hand over meal </act> <path1><act> call customer </act></path1>
Initially<act>prepare meal</act>. In the next step,<act>place meal</act>. the chef then informs the employee that the chef has placed the finished meal in the service hatch.; <act> prepare meal </act> <act> place meal in service hatch </act> <act> inform employee </act>
First<act>prepare meal</act>. Later<act>place meal</act>. the chef then informs the employee that the chef has placed the finished meal in the service hatch.; <act> prepare meal </act> <act> place meal in service hatch </act> <act> inform employee </act>
First<act>prepare meal</act>. Afterwards, the chef places the meal in the service hatch. the chef then informs the employee that the chef has placed the finished meal in the service hatch.; <act> prepare meal </act> <act> place meal in service hatch </act> <act> inform employee </act>
The process starts when<act>prepare meal</act>. Thereafter<act>place meal</act>. the chef then informs the employee that the chef has placed the finished meal in the service hatch.; <act> prepare meal </act> <act> place meal in service hatch </act> <act> inform employee </act>
Initially<act>prepare meal</act>. Next<act>place meal</act>. the chef then informs the employee that the chef has placed the finished meal in the service hatch.; <act> prepare meal </act> <act> place meal in service hatch </act> <act> inform employee </act>
First<act>send bill for temporary continuation of metering point operations to go</act>. Subsequently<act>examine bill</act>. If the MSPO sends the bill for additional readings to the GO,<act>examine bill</act>. If the MPOO posts the bill for the equipment acquisition to the MPON or the GOT, <act>send bill</act>. <act>reject invoice of mpoo or mspo</act>.; <act> send bill </act> <act> examine bill </act> <path1><act> examine bill </act></path1><path2><act> send bill </act></path2> <act> reject invoice </act>
First<act>send bill for temporary continuation of metering point operations to go</act>. Thereafter<act>examine bill</act>. If the MSPO sends the bill for additional readings to the GO,<act>examine bill</act>. If the MPOO posts the bill for the equipment acquisition to the MPON or the GOT, <act>send bill</act>. After that,<act>reject invoice of mpoo or mspo</act>.; <act> send bill </act> <act> examine bill </act> <path1><act> examine bill </act></path1><path2><act> send bill </act></path2> <act> reject invoice </act>
Initially<act>send bill for temporary continuation of metering point operations to go</act>. In the next step,<act>examine bill</act>. If the MSPO sends the bill for additional readings to the GO,<act>examine bill</act>. Whenever the MPOO posts the bill for the equipment acquisition to the MPON or the GOT, <act>send bill</act>. <act>reject invoice of mpoo or mspo</act>.; <act> send bill </act> <act> examine bill </act> <path1><act> examine bill </act></path1><path2><act> send bill </act></path2> <act> reject invoice </act>
First<act>send bill for temporary continuation of metering point operations to go</act>. After that,<act>examine bill</act>. If the MSPO sends the bill for additional readings to the GO,<act>examine bill</act>. If the MPOO posts the bill for the equipment acquisition to the MPON or the GOT, <act>send bill</act>. Next,<act>reject invoice of mpoo or mspo</act>.; <act> send bill </act> <act> examine bill </act> <path1><act> examine bill </act></path1><path2><act> send bill </act></path2> <act> reject invoice </act>
The process starts when<act>send bill for temporary continuation of metering point operations to go</act>. Later<act>examine bill</act>. If the MSPO sends the bill for additional readings to the GO,<act>examine bill</act>. In case the MPOO posts the bill for the equipment acquisition to the MPON or the GOT, <act>send bill</act>. Later<act>confirm invoice with payment advice</act>.; <act> send bill </act> <act> examine bill </act> <path1><act> examine bill </act></path1><path2><act> send bill </act></path2> <act> confirm invoice </act>
First<act>transmit data request</act>. After that,<act>check request of inq</act>. Next<act>depend on outcome of examination</act>.; <act> transmit request </act> <act> check request </act> <act> answer question </act>
Initially<act>transmit data request</act>. Before<act>answer question of inq</act>, <act>check request of inq</act>.; <act> transmit request </act> <act> answer question </act> <act> check request </act>
First<act>transmit data request</act>. Once<act>check request of inq</act>, <act>answer question of inq</act>.; <act> transmit request </act> <act> check request </act> <act> answer question </act>
First<act>transmit data request</act>. Once<act>check request of inq</act>, <act>answer question of inq</act>.; <act> transmit request </act> <act> check request </act> <act> answer question </act>
The process starts when<act>transmit data request</act>. Before<act>answer question of inq</act>, <act>check request of inq</act>.; <act> transmit request </act> <act> answer question </act> <act> check request </act>
First<act>inform inq</act>. Before<act>desire time</act>, <act>notify</act>. After that,<act>confirm changes of inq</act>.; <act> inform INQ </act> <act> check master data </act> <act> notify IP </act> <act> confirm changes </act>
First<act>inform inq</act>. Before<act>desire time</act>, <act>notify</act>. Thereafter<act>reject changes of inq</act>.; <act> inform INQ </act> <act> check master data </act> <act> notify IP </act> <act> reject changes </act>
Initially<act>inform inq</act>. After<act>after</act>, <act>desire time</act>. Later<act>reject changes of inq</act>.; <act> inform INQ </act> <act> notify IP </act> <act> check master data </act> <act> reject changes </act>
The process starts when<act>inform inq</act>. Before<act>desire time</act>, <act>notify</act>. After that,<act>confirm changes of inq</act>.; <act> inform INQ </act> <act> check master data </act> <act> notify IP </act> <act> confirm changes </act>
First<act>inform inq</act>. Before<act>desire time</act>, <act>notify</act>. <act>reject changes of inq</act>.; <act> inform INQ </act> <act> check master data </act> <act> notify IP </act> <act> reject changes </act>
First<act>request measurements of msp</act>. Later<act>check received request</act>. Whenever The MSP denies the request of the GO, <act>inform go</act>. If The MSP accepts the request of the GO, <act>perform measurement</act>. Once<act>measure values</act>, <act>process measured values</act>. Afterwards, the go sends the changed values to the msp. <act>transmit readings</act>.; <act> request measurements </act> <act> check request </act> <path1><act> inform GO </act></path1><path2><act> perform measurement </act></path2> <act> transmit measured values </act> <act> process measured values </act> <act> send changed values </act> <act> transmit readings </act>
First<act>request measurements of msp</act>. Next,<act>receive request</act>. Whenever The MSP denies the request of the GO, <act>inform go</act>. If The MSP accepts the request of the GO, <act>perform measurement</act>. Before<act>process measured values</act>, <act>measure values</act>. After<act>send changed values</act>, <act>transmit readings</act>.; <act> request measurements </act> <act> check request </act> <path1><act> inform GO </act></path1><path2><act> perform measurement </act></path2> <act> process measured values </act> <act> transmit measured values </act> <act> send changed values </act> <act> transmit readings </act>
Initially<act>request measurements of msp</act>. Next<act>receive request</act>. If The MSP denies the request of the GO, <act>inform go</act>. Whenever The MSP accepts the request of the GO, <act>perform measurement</act>. When<act>transmit measured values</act>, <act>process measured values</act>. <act>send changed values</act>. Thereafter<act>transmit readings</act>.; <act> request measurements </act> <act> check request </act> <path1><act> inform GO </act></path1><path2><act> perform measurement </act></path2> <act> transmit measured values </act> <act> process measured values </act> <act> send changed values </act> <act> transmit readings </act>
Initially<act>request measurements of msp</act>. Next<act>receive request</act>. If The MSP denies the request of the GO, <act>inform go</act>. If The MSP accepts the request of the GO, <act>perform measurement</act>. When<act>transmit measured values</act>, <act>process measured values</act>. When<act>send changed values</act>, <act>transmit readings</act>.; <act> request measurements </act> <act> check request </act> <path1><act> inform GO </act></path1><path2><act> perform measurement </act></path2> <act> transmit measured values </act> <act> process measured values </act> <act> send changed values </act> <act> transmit readings </act>
The process starts when<act>request measurements of msp</act>. Thereafter<act>check received request</act>. If The MSP denies the request of the GO, <act>inform go</act>. If The MSP accepts the request of the GO, <act>perform measurement</act>. When<act>transmit measured values</act>, <act>process measured values</act>. Next<act>send changed values</act>. Afterwards, the go transmit the readings to the sp.; <act> request measurements </act> <act> check request </act> <path1><act> inform GO </act></path1><path2><act> perform measurement </act></path2> <act> transmit measured values </act> <act> process measured values </act> <act> send changed values </act> <act> transmit readings </act>
First<act>report failure to user</act>. <act>examine failure</act>. The user rejects or confirms the failure of the fault detector. If the user confirms the failure of the fault detector, <act>inform customer and manager</act>. When<act>fix fault</act>, <act>share results of repairs carried out with fault detector</act>. Before<act>inform manager</act>, <act>inform customer</act>.; <act> report failure </act> <act> examine failure </act>  <path1><act> inform customer and manager </act></path1> <act> fix fault </act> <act> share results </act> <act> inform manager </act> <act> inform customer </act>
The process starts when<act>report failure to user</act>. Next,<act>examine failure</act>. The user rejects or confirms the failure of the fault detector. Whenever the user confirms the failure of the fault detector, <act>inform customer and manager</act>. When<act>fix fault</act>, <act>share results of repairs carried out with fault detector</act>. Before<act>inform manager</act>, <act>inform customer</act>.; <act> report failure </act> <act> examine failure </act>  <path1><act> inform customer and manager </act></path1> <act> fix fault </act> <act> share results </act> <act> inform manager </act> <act> inform customer </act>
Initially<act>report failure to user</act>. Later<act>examine failure</act>. The user rejects or confirms the failure of the fault detector. Whenever the user confirms the failure of the fault detector, <act>inform customer and manager</act>. After<act>fix fault</act>, <act>share results of repairs carried out with fault detector</act>. After<act>inform customer</act>, <act>inform manager</act>.; <act> report failure </act> <act> examine failure </act>  <path1><act> inform customer and manager </act></path1> <act> fix fault </act> <act> share results </act> <act> inform customer </act> <act> inform manager </act>
Initially<act>report failure to user</act>. Subsequently<act>examine failure</act>. The user rejects or confirms the failure of the fault detector. In case the user confirms the failure of the fault detector, <act>inform customer and manager</act>. Once<act>fix fault</act>, <act>share results of repairs carried out with fault detector</act>. Next<act>inform customer</act>. Thereafter<act>inform manager</act>.; <act> report failure </act> <act> examine failure </act>  <path1><act> inform customer and manager </act></path1> <act> fix fault </act> <act> share results </act> <act> inform customer </act> <act> inform manager </act>
Initially<act>report failure to user</act>. After that,<act>examine failure</act>. The user rejects or confirms the failure of the fault detector. Whenever the user confirms the failure of the fault detector, <act>inform customer and manager</act>. After<act>fix fault</act>, <act>share results of repairs carried out with fault detector</act>. After<act>inform customer</act>, <act>inform manager</act>.; <act> report failure </act> <act> examine failure </act>  <path1><act> inform customer and manager </act></path1> <act> fix fault </act> <act> share results </act> <act> inform customer </act> <act> inform manager </act>
Initially<act>initiate change</act>. Before<act>confirm change of measuring point by organisation</act>, <act>review change request</act>. Later<act>perform measuring point change</act>. <act>report implementation to organisation</act>.; <act> initiate change </act> <act> confirm change </act> <act> review change request </act> <act> perform measuring point change </act> <act> report implementation </act>
Initially<act>request changes of mpo</act> . Before<act>confirm change of measuring point by organisation</act>, <act>review change request</act>. Before<act>report implementation to organisation</act>, <act>perform measuring point change</act>.; <act> request changes </act> <act> confirm change </act> <act> review change request </act> <act> report implementation </act> <act> perform measuring point change </act>
Initially<act>request changes of mpo</act> . Once<act>review change request</act>, <act>confirm change of measuring point by organisation</act>. When<act>perform measuring point change</act>, <act>report implementation to organisation</act>.; <act> request changes </act> <act> review change request </act> <act> confirm change </act> <act> perform measuring point change </act> <act> report implementation </act>
Initially<act>initiate change</act>. Then<act>review change request</act>. Later<act>confirm change of measuring point by organisation</act>. Later<act>perform measuring point change</act>. After that,<act>report implementation to organisation</act>.; <act> initiate change </act> <act> review change request </act> <act> confirm change </act> <act> perform measuring point change </act> <act> report implementation </act>
Initially<act>initiate change</act>. <act>review change request</act>. Afterwards, the mpo confirms the change of the measuring point by the organisation. After<act>perform measuring point change</act>, <act>report implementation to organisation</act>.; <act> initiate change </act> <act> review change request </act> <act> confirm change </act> <act> perform measuring point change </act> <act> report implementation </act>
The process starts when<act>deregisters</act>. In the next step,<act>verify deregistration</act>. The company rejects the deregistration of the mspo or preliminarily confirms the deregistration of the mspo. Before<act>inform mspo</act>, <act>assign himself</act>. Before<act>inform about assignment of company</act>, <act>inform about assignment of company</act>.; <act> deregister </act> <act> verify deregistration </act>  <act> inform MSPO </act> <act> assign as MSP </act> <act> inform SP </act> <act> inform MPO </act>
First<act>deregisters</act>. Afterwards, the company verifies the deregistration. The company rejects the deregistration of the mspo or preliminarily confirms the deregistration of the mspo. After<act>assign himself</act>, <act>inform mspo</act>. Before<act>inform about assignment of company</act>, <act>inform about assignment of company</act>.; <act> deregister </act> <act> verify deregistration </act>  <act> assign as MSP </act> <act> inform MSPO </act> <act> inform SP </act> <act> inform MPO </act>
The process starts when<act>deregisters</act>. Next<act>verify deregistration</act>. The company rejects the deregistration of the mspo or preliminarily confirms the deregistration of the mspo. After<act>assign himself</act>, <act>inform mspo</act>. Once<act>inform mpo</act>, <act>inform sp</act>.; <act> deregister </act> <act> verify deregistration </act>  <act> assign as MSP </act> <act> inform MSPO </act> <act> inform MPO </act> <act> inform SP </act>
The process starts when<act>deregisters</act>. Thereafter<act>verify deregistration</act>. The company rejects the deregistration of the mspo or preliminarily confirms the deregistration of the mspo. Next,<act>assign himself</act>. In the next step,<act>inform mspo</act>. After<act>inform about assignment of company</act>, <act>inform sp</act>.; <act> deregister </act> <act> verify deregistration </act>  <act> assign as MSP </act> <act> inform MSPO </act> <act> inform MPO </act> <act> inform SP </act>
First<act>deregisters</act>. Next,<act>verify deregistration</act>. The company rejects the deregistration of the mspo or preliminarily confirms the deregistration of the mspo. Before<act>inform mspo</act>, <act>assign himself</act>. After<act>inform about assignment of company</act>, <act>inform sp</act>.; <act> deregister </act> <act> verify deregistration </act>  <act> inform MSPO </act> <act> assign as MSP </act> <act> inform MPO </act> <act> inform SP </act>
Initially<act>register measurement</act>. Next<act>examine application of mspn</act>. The go rejects the application of the mspn or the go confirms the application of the mspn. After<act>assign mspn</act>, <act>inform mspo</act>. Before<act>inform sp</act>, <act>inform mpo</act>.; <act> register measurement </act> <act> examine application </act>  <act> assign MSPN </act> <act> inform MSPO </act> <act> inform SP </act> <act> inform MPO </act>
The process starts when<act>register measurement</act>. <act>examine application of mspn</act>. The go rejects the application of the mspn or the go confirms the application of the mspn. Before<act>inform mspo</act>, <act>assign mspn</act>. Thereafter<act>inform mpo</act>. Next<act>inform sp</act>.; <act> register measurement </act> <act> examine application </act>  <act> inform MSPO </act> <act> assign MSPN </act> <act> inform MPO </act> <act> inform SP </act>
Initially<act>register measurement</act>. <act>examine application of mspn</act>. The go rejects the application of the mspn or the go confirms the application of the mspn. In the next step,<act>assign mspn</act>. <act>inform mspo</act>. When<act>inform mpo</act>, <act>inform sp</act>.; <act> register measurement </act> <act> examine application </act>  <act> assign MSPN </act> <act> inform MSPO </act> <act> inform MPO </act> <act> inform SP </act>
Initially<act>register measurement</act>. Afterwards, the go examines the application of the mspn. The go rejects the application of the mspn or the go confirms the application of the mspn. Before<act>inform mspo</act>, <act>assign mspn</act>. Before<act>inform sp</act>, <act>inform mpo</act>.; <act> register measurement </act> <act> examine application </act>  <act> inform MSPO </act> <act> assign MSPN </act> <act> inform SP </act> <act> inform MPO </act>
First<act>register measurement</act>. Subsequently<act>examine application of mspn</act>. The go rejects the application of the mspn or the go confirms the application of the mspn. Once<act>assign mspn</act>, <act>inform mspo</act>. Thereafter<act>inform mpo</act>. In the next step,<act>inform sp</act>.; <act> register measurement </act> <act> examine application </act>  <act> assign MSPN </act> <act> inform MSPO </act> <act> inform MPO </act> <act> inform SP </act>
The process starts when<act>send dismissal</act>. Once<act>review dismissal</act>, <act>confirm dismissal of mspn</act>.; <act> send dismissal </act> <act> review dismissal </act> <act> confirm dismissal </act>
First<act>send dismissal</act>. Before<act>confirm dismissal of mspn</act>, <act>review dismissal</act>.; <act> send dismissal </act> <act> confirm dismissal </act> <act> review dismissal </act>
First<act>send dismissal</act>. Subsequently<act>review dismissal</act>. Later<act>confirm dismissal of mspn</act>.; <act> send dismissal </act> <act> review dismissal </act> <act> confirm dismissal </act>
The process starts when<act>send dismissal</act>. After<act>review dismissal</act>, <act>confirm dismissal of mspn</act>.; <act> send dismissal </act> <act> review dismissal </act> <act> confirm dismissal </act>
The process starts when<act>send dismissal</act>. Once<act>review dismissal</act>, <act>confirm dismissal of mspn</act>.; <act> send dismissal </act> <act> review dismissal </act> <act> confirm dismissal </act>
Initially<act>request device takeover bid of mpoo</act>. Then<act>send tender for equipment takeover</act>. Thereafter<act>place order</act>. Subsequently<act>confirm order of mpon</act> . Later<act>send master data</act>.; <act> request device takeover bid </act> <act> send tender </act> <act> place order </act> <act> confirm order </act> <act> send master data </act>
First<act>request device takeover bid of mpoo</act>. After<act>send tender for equipment takeover</act>, <act>place order</act>. Next<act>confirm order of mpon</act> . After that,<act>send master data</act>.; <act> request device takeover bid </act> <act> send tender </act> <act> place order </act> <act> confirm order </act> <act> send master data </act>
First<act>request device takeover bid of mpoo</act>. Before<act>place order</act>, <act>send tender for equipment takeover</act>. Before<act>send master data</act>, <act>confirm order of mpon</act> .; <act> request device takeover bid </act> <act> place order </act> <act> send tender </act> <act> send master data </act> <act> confirm order </act>
First<act>request device takeover bid of mpoo</act>. Once<act>send tender for equipment takeover</act>, <act>place order</act>. When<act>confirm order of mpon</act> , <act>send master data</act>.; <act> request device takeover bid </act> <act> send tender </act> <act> place order </act> <act> confirm order </act> <act> send master data </act>
Initially<act>request device takeover bid of mpoo</act>. Before<act>place order</act>, <act>send tender for equipment takeover</act>. Before<act>send master data</act>, <act>confirm order of mpon</act> .; <act> request device takeover bid </act> <act> place order </act> <act> send tender </act> <act> send master data </act> <act> confirm order </act>
First<act>notify mpoo</act>. Once<act>notify mpon about self dismounting of mpoo</act>, <act>perform final reading</act>. Later<act>dismount old equipment</act>. Subsequently<act>mount new device</act>. After<act>read meter count</act>, <act>send values of final reading</act>. Before<act>change master data</act>.; <act> notify MPOO about equipment change intentions</act> <act> notify about no self dismounting </act> <act> perform final reading </act> <act> dismount old equipment </act> <act> mount new device </act> <act> read meter count </act> <act> send values </act> <act> notify MSP </act> <act> inform GO </act>
Initially<act>notify mpoo</act>. Later<act>announce self dismounting to mpon</act> . After that,<act>perform final reading</act>. Before<act>mount new device</act>, <act>dismount old equipment</act>. After<act>read meter count</act>, <act>send values of final reading</act>. Before<act>change master data</act>.; <act> notify MPOO about equipment change intentions</act> <act> announce self dismounting </act> <act> perform final reading </act> <act> mount new device </act> <act> dismount old equipment </act> <act> read meter count </act> <act> send values </act> <act> notify MSP </act> <act> inform GO </act>
The process starts when<act>notify mpoo</act>. When<act>notify mpon about self dismounting of mpoo</act>, <act>perform final reading</act>. Later<act>dismount old equipment</act>. Then<act>mount new device</act>. Before<act>send values of final reading</act>, <act>read meter count</act>. Before<act>change master data</act>.; <act> notify MPOO about equipment change intentions</act> <act> notify about no self dismounting </act> <act> perform final reading </act> <act> dismount old equipment </act> <act> mount new device </act> <act> send values </act> <act> read meter count </act> <act> notify MSP </act> <act> inform GO </act>
The process starts when<act>notify mpoo</act>. After that,<act>announce self dismounting to mpon</act> . Next,<act>perform final reading</act>. Before<act>mount new device</act>, <act>dismount old equipment</act>. Before<act>send values of final reading</act>, <act>read meter count</act>. After the mpon informs the go about the device changes, the master data and the meter count at installation, <act>notify msp about device changes</act>, the master data, the meter count at dismounting, and the meter count at installation.; <act> notify MPOO about equipment change intentions</act> <act> announce self dismounting </act> <act> perform final reading </act> <act> mount new device </act> <act> dismount old equipment </act> <act> send values </act> <act> read meter count </act> <act> inform GO </act> <act> notify MSP </act>
First<act>notify mpoo</act>. Before<act>perform final reading</act>, <act>notify mpon about self dismounting of mpoo</act>. Once<act>dismount old equipment</act>, <act>mount new device</act>. Before<act>send values of final reading</act>, <act>read meter count</act>. Once the mpon informs the go about the device changes, the master data and the meter count at installation, <act>notify msp about device changes</act>, the master data, the meter count at dismounting, and the meter count at installation.; <act> notify MPOO about equipment change intentions</act> <act> perform final reading </act> <act> notify about no self dismounting </act> <act> dismount old equipment </act> <act> mount new device </act> <act> send values </act> <act> read meter count </act> <act> inform GO </act> <act> notify MSP </act>
<act>back up database</act> . After<act>after</act> to see whether the account defaulters table has new records, <act>find new records</act>. If new returns exist, <act>default accounts</act>. If the defaulting client codes have not been previously advised, <act>produce table of defaulting accounts</act>. All of this must be completed by 2:30 pm. If it is not, <act>send alert</act>. Once<act>complete new defaulting account report</act>, <act>check crm system</act> to see whether new returns have been filed. If new returns have been filed, <act>exist account defaulters table</act>. This must be completed by 4:00 pm . <act>send message</act>.; <act> back up database </act> <act> check Account Defaulters table </act>  <path1><act> register all defaulting accounts and customers </act></path1><path2><act> produce another table of defaulting accounts </act></path2>  <path1><act> send alert </act></path1> <act> check CRM system </act> <path1><act> reconcile with existing account defaulters table </act></path1>  <path1><act> send message </act></path1>
After the process starts, <act>perform task</act> to locate and distribute any relevant existing designs, both electrical and physical. Before new records are found, <act>check</act> to see whether the account defaulters table has new records. If new returns exist, <act>default accounts</act>. Whenever the defaulting client codes have not been previously advised, <act>produce table of defaulting accounts</act>. All of this must be completed by 2:30 pm. If it is not, <act>send alert</act>. Once<act>complete new defaulting account report</act>, <act>check crm system</act> to see whether new returns have been filed. If new returns have been filed, <act>exist account defaulters table</act>. This must be completed by 4:00 pm . <act>send message</act>.; <act> locate and distribute any relevant existing designs </act>  <act> check Account Defaulters table </act> <path1><act> register all defaulting accounts and customers </act></path1><path2><act> produce another table of defaulting accounts </act></path2>  <path1><act> send alert </act></path1> <act> check CRM system </act> <path1><act> reconcile with existing account defaulters table </act></path1>  <path1><act> send message </act></path1>
After the process starts, <act>perform task</act> to locate and distribute any relevant existing designs, both electrical and physical. Once the design of the electrical and physical systems starts in parallel, <act>find new records</act>. Whenever new returns exist, <act>default accounts</act>. In case the defaulting client codes have not been previously advised, <act>produce table of defaulting accounts</act>. All of this must be completed by 2:30 pm. If it is not, <act>send alert</act>. Once<act>complete new defaulting account report</act>, <act>check crm system</act> to see whether new returns have been filed. If new returns have been filed, <act>exist account defaulters table</act>. This must be completed by 4:00 pm . <act>send message</act>.; <act> locate and distribute any relevant existing designs </act>   <path1><act> register all defaulting accounts and customers </act></path1><path2><act> produce another table of defaulting accounts </act></path2>  <path1><act> send alert </act></path1> <act> check CRM system </act> <path1><act> reconcile with existing account defaulters table </act></path1>  <path1><act> send message </act></path1>
After the process starts, <act>perform task</act> to locate and distribute any relevant existing designs, both electrical and physical. Before new records are found, <act>check</act> to see whether the account defaulters table has new records. If new returns exist, <act>default accounts</act>. In case the defaulting client codes have not been previously advised, <act>produce table of defaulting accounts</act>. All of this must be completed by 2:30 pm. In case this is not, <act>send alert</act>. Once<act>complete new defaulting account report</act>, <act>check crm system</act> to see whether new returns have been filed. If new returns have been filed, <act>exist account defaulters table</act>. This must be completed by 4:00 pm . <act>send message</act>.; <act> locate and distribute any relevant existing designs </act>  <act> check Account Defaulters table </act> <path1><act> register all defaulting accounts and customers </act></path1><path2><act> produce another table of defaulting accounts </act></path2>  <path1><act> send alert </act></path1> <act> check CRM system </act> <path1><act> reconcile with existing account defaulters table </act></path1>  <path1><act> send message </act></path1>
After the process starts, <act>perform task</act> to locate and distribute any relevant existing designs, both electrical and physical. After that,<act>after</act> to see whether the account defaulters table has new records. Afterwards, new records are found. Whenever new returns exist, <act>default accounts</act>. Whenever the defaulting client codes have not been previously advised, <act>produce table of defaulting accounts</act>. All of this must be completed by 2:30 pm. If it is not, <act>send alert</act>. Once<act>complete new defaulting account report</act>, <act>check crm system</act> to see whether new returns have been filed. If new returns have been filed, <act>exist account defaulters table</act>. This must be completed by 4:00 pm . <act>send message</act>.; <act> locate and distribute any relevant existing designs </act> <act> check Account Defaulters table </act>  <path1><act> register all defaulting accounts and customers </act></path1><path2><act> produce another table of defaulting accounts </act></path2>  <path1><act> send alert </act></path1> <act> check CRM system </act> <path1><act> reconcile with existing account defaulters table </act></path1>  <path1><act> send message </act></path1>
Initially<act>receive expense report</act>. Then<act>create new account</act>. <act>review report</act>. <act>send email</act> must receive a confirmation mail.; <act> receive expense report </act>  <act> create new account </act> <act> review report for approval </act> <path1><act> send email </act></path1><path2><act> receive reimbursement </act></path2> <act> receive confirmation mail </act>
Initially<act>receive expense report</act>. After that,<act>create new account</act>. <act>review report</act>. <act>send email</act> must receive a confirmation mail.; <act> receive expense report </act>  <act> create new account </act> <act> review report for approval </act> <path1><act> send email </act></path1><path2><act> receive reimbursement </act></path2> <act> receive confirmation mail </act>
First<act>receive expense report</act>. In the next step,<act>create new account</act>. <act>review report</act>. <act>send email</act> must receive a confirmation mail.; <act> receive expense report </act>  <act> create new account </act> <act> review report for approval </act> <path1><act> send email </act></path1><path2><act> receive reimbursement </act></path2> <act> receive confirmation mail </act>
The process starts when<act>receive expense report</act>. Later<act>create new account</act>. <act>review report</act>. <act>send email</act> must receive a confirmation mail.; <act> receive expense report </act>  <act> create new account </act> <act> review report for approval </act> <path1><act> send email </act></path1><path2><act> receive reimbursement </act></path2> <act> receive confirmation mail </act>
First<act>receive expense report</act>. In the next step,<act>create new account</act>. <act>review report</act>. <act>send email</act> must receive a confirmation mail.; <act> receive expense report </act>  <act> create new account </act> <act> review report for approval </act> <path1><act> send email </act></path1><path2><act> receive reimbursement </act></path2> <act> receive confirmation mail </act>
Once the dates are finalized (by the coordination unit), <act>update group calendars</act>. After<act>create meeting folders for meeting</act> , <act>produce minutes including action points for committee member</act>s. <act>update departmental records</act>.; <act> finalize dates </act> <act> update all group calendars </act> <act> create meeting folders </act>  <act> upload all appropriate documents to the system </act> <act> hold meeting </act> <act> read all related documents </act> <act> produce minutes </act> <act> conduct QA check </act> <act> send QA check to all Committee Members </act> <act> update all departmental records </act>
Once the dates are finalized (by the coordination unit), <act>update group calendars</act>. Before <act>produce minutes including action points for committee member</act>s. <act>update departmental records</act>.; <act> finalize dates </act> <act> update all group calendars </act> <act> upload all appropriate documents to the system </act> <act> create meeting folders </act>  <act> hold meeting </act> <act> read all related documents </act> <act> produce minutes </act> <act> conduct QA check </act> <act> send QA check to all Committee Members </act> <act> update all departmental records </act>
Once the dates are finalized (by the coordination unit), <act>update group calendars</act>. Once<act>create meeting folders for meeting</act> , <act>produce minutes including action points for committee member</act>s. <act>update departmental records</act>.; <act> finalize dates </act> <act> update all group calendars </act> <act> create meeting folders </act>  <act> upload all appropriate documents to the system </act> <act> hold meeting </act> <act> read all related documents </act> <act> produce minutes </act> <act> conduct QA check </act> <act> send QA check to all Committee Members </act> <act> update all departmental records </act>
Once the dates are finalized (by the coordination unit), <act>update group calendars</act>. Before <act>produce minutes including action points for committee member</act>s. <act>update departmental records</act>.; <act> finalize dates </act> <act> update all group calendars </act> <act> upload all appropriate documents to the system </act> <act> create meeting folders </act>  <act> hold meeting </act> <act> read all related documents </act> <act> produce minutes </act> <act> conduct QA check </act> <act> send QA check to all Committee Members </act> <act> update all departmental records </act>
Once the dates are finalized (by the coordination unit), <act>update group calendars</act>. Before <act>produce minutes including action points for committee member</act>s. <act>update departmental records</act>.; <act> finalize dates </act> <act> update all group calendars </act> <act> upload all appropriate documents to the system </act> <act> create meeting folders </act>  <act> read all related documents </act> <act> hold meeting </act> <act> produce minutes </act> <act> conduct QA check </act> <act> send QA check to all Committee Members </act> <act> update all departmental records </act>
First,<act>draft schedule of meetings for next calendar year</act>. Thereafter<act>add draft dates</act>. <act>check dates</act> . Next the support officer suggests modifications. Later<act>recheck dates</act> . When<act>look for potential conflicts</act>, <act>send final schedule of meeting dates</act>. Once<act>check diaries of independent members</act> , <act>advise coordination unit of conflicts</act>.; <act> draft schedule of meetings </act> <act> add draft dates </act> <act> check dates </act>  <act> suggest modifications </act> <act> recheck all dates </act> <act> look for potential conflicts </act> <act> send final schedule of meeting dates </act> <act> check diaries </act> <act> advise Coordination Unit </act>
The process starts when<act>draft schedule of meetings</act>. After that,<act>add draft dates</act>. <act>check dates</act> . When the support officer suggests modifications, <act>recheck dates</act> . Before<act>send final schedule of meeting dates</act>, <act>look for potential conflicts</act>. <act>check diaries</act> . <act>advise coordination unit of conflicts</act>.; <act> draft schedule of meetings </act> <act> add draft dates </act> <act> check dates </act>  <act> suggest modifications </act> <act> recheck all dates </act> <act> send final schedule of meeting dates </act> <act> look for potential conflicts </act> <act> check diaries </act> <act> advise Coordination Unit </act>
The process starts when<act>draft schedule of meetings</act>. Afterwards, the coordination unit adds draft dates to all calendars. <act>check dates</act> . Before<act>recheck dates</act> , the support officer suggests modifications. After<act>look for potential conflicts</act>, <act>send final schedule of meeting dates</act>. <act>check diaries</act> . Afterwards, all independent members advise the coordination unit of any conflicts.; <act> draft schedule of meetings </act> <act> add draft dates </act> <act> check dates </act>  <act> recheck all dates </act> <act> suggest modifications </act> <act> look for potential conflicts </act> <act> send final schedule of meeting dates </act> <act> check diaries </act> <act> advise Coordination Unit </act>
The process starts when<act>draft schedule of meetings</act>. Next,<act>add draft dates</act>. <act>check dates</act> . When the support officer suggests modifications, <act>recheck dates</act> . <act>look for potential conflicts</act>. Later<act>send final schedule of meeting dates</act>. <act>check diaries</act> . Next,<act>advise coordination unit of conflicts</act>.; <act> draft schedule of meetings </act> <act> add draft dates </act> <act> check dates </act>  <act> suggest modifications </act> <act> recheck all dates </act> <act> look for potential conflicts </act> <act> send final schedule of meeting dates </act> <act> check diaries </act> <act> advise Coordination Unit </act>
First,<act>draft schedule of meetings for next calendar year</act>. Next,<act>add next draft dates</act>. <act>check dates</act> . <act>suggest modifications</act>. Then<act>recheck dates</act> . Before<act>send final schedule of meeting dates</act>, <act>look for potential conflicts</act>. <act>check diaries</act> . Thereafter<act>advise coordination unit of conflicts</act>.; <act> draft schedule of meetings </act> <act> add draft dates </act> <act> check dates </act>  <act> suggest modifications </act> <act> recheck all dates </act> <act> send final schedule of meeting dates </act> <act> look for potential conflicts </act> <act> check diaries </act> <act> advise Coordination Unit </act>
Initially<act>detect number of personnel requirements</act>. Before<act>wait i</act>, <act>report vacancy</act>. <act>ask for corrections</act>. <act>approve job description</act>. Subsequently<act>advertize job description</act>. Then<act>be i</act>.; <act> detect a number of personnel requirements </act> <act> wait for approval </act> <act> report vacancy </act> <act> ask for corrections </act> <act> approve job description </act> <act> advertize job description </act> <act> be available for clarifications </act>
First<act>detect number of personnel requirements</act>. Before<act>wait i</act>, <act>report vacancy</act>. <act>ask for corrections</act>. <act>approve job description</act>. Afterwards, the job description is advertized. Then<act>be i</act>.; <act> detect a number of personnel requirements </act> <act> wait for approval </act> <act> report vacancy </act> <act> ask for corrections </act> <act> approve job description </act> <act> advertize job description </act> <act> be available for clarifications </act>
The process starts when<act>detect number of personnel requirements</act>. After that,<act>report vacancy</act>. <act>wait i</act>. <act>ask for corrections</act>. <act>approve job description</act>. In the next step,<act>advertize job description</act>. Then<act>be i</act>.; <act> detect a number of personnel requirements </act> <act> report vacancy </act> <act> wait for approval </act> <act> ask for corrections </act> <act> approve job description </act> <act> advertize job description </act> <act> be available for clarifications </act>
First<act>detect number of personnel requirements</act>. After that,<act>report vacancy</act>. After that,<act>wait i</act>. <act>ask for corrections</act>. <act>approve job description</act>. Then<act>advertize job description</act>. Then<act>be i</act>.; <act> detect a number of personnel requirements </act> <act> report vacancy </act> <act> wait for approval </act> <act> ask for corrections </act> <act> approve job description </act> <act> advertize job description </act> <act> be available for clarifications </act>
Initially<act>detect number of personnel requirements</act>. Before<act>wait i</act>, <act>report vacancy</act>. <act>ask for corrections</act>. <act>approve job description</act>. Next<act>advertize job description</act>. Then<act>be i</act>.; <act> detect a number of personnel requirements </act> <act> wait for approval </act> <act> report vacancy </act> <act> ask for corrections </act> <act> approve job description </act> <act> advertize job description </act> <act> be available for clarifications </act>
First<act>report vacancy</act> . Thereafter<act>create job description</act>. In case there is still confusion in the message, <act>ask for further information</act>. Subsequently<act>submit job description</act> . <act>wait i</act>. Then<act>approve job description</act> . If the department requests a correction, Then<act>correct description</act>. Whenever the description is finally approved, <act>post job</act>.; <act> report vacancy </act> <act> create job description </act> <path1><act> ask department </act></path1> <act> submit job description </act> <act> wait for approval </act> <act> approve job description </act> <path1><act> correct description </act> </path1><path2><act> post job </act></path2>
Initially<act>receive vacancy</act>. Next<act>create job description</act>. In case there is still confusion in the message, <act>ask for further information</act>. After<act>submit job description</act>, <act>wait i</act>. In the next step,<act>approve job description</act>. But, the department can also happen that the department does not approve the department, Then <act>correct job description</act>. If the department approves the description, <act>post job</act>.; <act> receive vacancy </act> <act> create job description </act> <path1><act> ask department </act></path1> <act> submit job description </act> <act> wait for approval </act> <act> approve job description </act> <path1><act> correct description </act> </path1><path2><act> post job </act></path2>
First<act>receive vacancy</act>. Then<act>create job description</act>. If there is still confusion in the message, <act>ask for further information</act>. Before<act>wait i</act>, <act>submit job description</act>. Then<act>approve job description</act> . If the department rejects it, Then<act>correct description</act>. If the description is finally approved, <act>post job</act>.; <act> receive vacancy </act> <act> create job description </act> <path1><act> ask department </act></path1> <act> wait for approval </act> <act> submit job description </act> <act> approve job description </act> <path1><act> correct description </act> </path1><path2><act> post job </act></path2>
First<act>report vacancy</act> . Thereafter<act>create job description</act>. If there is still confusion in the message, <act>ask for further information</act>. After<act>submit job description</act>, <act>wait i</act>. Later<act>approve job description</act>. But, it can also happen that the department does not approve the department, Then <act>correct job description</act>. If the description is finally approved, the job is shared by me on social media.; <act> report vacancy </act> <act> create job description </act> <path1><act> ask department </act></path1> <act> submit job description </act> <act> wait for approval </act> <act> approve job description </act> <path1><act> correct description </act> </path1><path2><act> share job </act></path2>
Initially<act>report vacancy</act> . Subsequently<act>create job description</act>. Whenever there is still confusion in the message, <act>ask for further information</act>. <act>submit job description for consideration</act>. Subsequently<act>wait i</act>. <act>approve job description</act> . In case the department requests a correction, Then<act>correct description</act>. In case the description is finally approved, <act>publish job</act>.; <act> report vacancy </act> <act> create job description </act> <path1><act> ask department </act></path1> <act> submit job description </act> <act> wait for approval </act> <act> approve job description </act> <path1><act> correct description </act> </path1><path2><act> publish job </act></path2>
First<act>report vacancy</act>. When<act>publish post</act>, <act>apply </act>. After that,<act>check applications</act> . Next<act>fill post</act>.; <act> report vacancy </act> <act> publish post </act> <act> apply </act> <act> check applications </act> <act> fill post </act>
The process is triggered by the creation of a vacancy by a functional department . Once<act>publish post</act>, <act>apply </act>. After<act>check applications</act> , <act>fill post</act>.; <act> create vacancy </act> <act> publish post </act> <act> apply </act> <act> check applications </act> <act> fill post </act>
First<act>report vacancy</act>. After<act>publish post</act>, <act>apply </act>. Next,<act>assess applications</act>. Thereafter<act>fill post</act>.; <act> report vacancy </act> <act> publish post </act> <act> apply </act> <act> assess applications </act> <act> fill post </act>
The process starts when<act>create vacancy</act>. After<act>publish post</act>, <act>apply </act>. Before<act>fill post</act>, <act>evaluate applications</act>.; <act> create vacancy </act> <act> publish post </act> <act> apply </act> <act> fill post </act> <act> evaluate applications </act>
The process is triggered by the creation of a vacancy by a functional department . Then<act>advertise post</act>. Next,<act>apply </act>. Once<act>assess applications</act>, <act>fill post</act>.; <act> create vacancy </act> <act> advertise post </act> <act> apply </act> <act> assess applications </act> <act> fill post </act>
The process starts when<act>check open leads</act>. Subsequently<act>select top five ones</act>. He then tells his sales assistant <act>call contact person of leads</act>. If someone is interested, <act>send note</act>. <act>process lead</act>.; <act> check open leads </act> <act> select top five ones </act> <act> call contact person </act> <path1><act> send note </act></path1> <act> process lead </act>
First<act>check open leads</act>. <act>select top five ones</act>. He then tells his sales assistant <act>call contact person of leads</act>. Whenever someone is interested, <act>send note</act>. <act>process lead</act>.; <act> check open leads </act> <act> select top five ones </act> <act> call contact person </act> <path1><act> send note </act></path1> <act> process lead </act>
First<act>check open leads</act>. Later<act>select top five ones</act>. He then tells his sales assistant <act>call contact person of leads</act>. If someone is interested, <act>send note</act>. <act>process lead</act>.; <act> check open leads </act> <act> select top five ones </act> <act> call contact person </act> <path1><act> send note </act></path1> <act> process lead </act>
Initially<act>check open leads</act>. Subsequently<act>select top five ones</act>. He then tells his sales assistant <act>call contact person of leads</act>. In case someone is interested, <act>send note</act>. Subsequently<act>process lead</act>.; <act> check open leads </act> <act> select top five ones </act> <act> call contact person </act> <path1><act> send note </act></path1> <act> process lead </act>
First<act>check open leads</act>. Afterwards, the top five ones are selected by him. He then tells his sales assistant <act>call contact person of leads</act>. If someone is interested, <act>send note</act>. <act>process lead</act>.; <act> check open leads </act> <act> select top five ones </act> <act> call contact person </act> <path1><act> send note </act></path1> <act> process lead </act>
The first step is <act>determine contact details of potential customers</act>. Then we start <act>contact customer</act>. Subsequently<act>ask customer</act> if he is interested. In case this is not the case, <act>leave customer</act>. If the customer is interested in the end, <act>perform detailed online presentation</act>. the customer is given either by a sales representative or by a pre-sales employee in case of a more technical presentation. Later<act>wait we</act> for the customer to come back to us. If the customer does not contact us within 2 weeks, <act>call customer</act>. <act>be last phase</act>.; <act> determine contact details of potential customers </act> <act> contact customer </act> <act> ask customer if he is interested </act> <path1><act> leave customer alone </act></path1><path2><act> perform detailed online presentation </act></path2>  <act> wait for customer </act> <path1><act> call customer </act></path1> <act> create quotation </act>
First<act>be </act>. Once<act>call customer</act> , <act>ask customer</act> if he is interested. If this is not the case, <act>leave customer</act>. Whenever the customer is interested in the end, <act>give online presentation</act>. the customer is given either by a sales representative or by a pre-sales employee in case of a more technical presentation. <act>wait we</act> for the customer to come back to us. In case we are not contacted within 2 weeks, <act>call customer</act>. <act>be last phase</act>.; <act> determine contact details of potential customers </act> <act> call customer </act> <act> ask customer if he is interested </act> <path1><act> leave customer alone </act></path1><path2><act> give online presentation </act></path2>  <act> wait for customer </act> <path1><act> call customer </act></path1> <act> create quotation </act>
The first step is <act>determine contact details of potential customers</act>. After<act>call customer</act> , <act>ask customer</act> if he is interested. Whenever this is not the case, <act>leave customer</act>. Whenever the customer is interested in the end, <act>give online presentation</act>. the customer is given either by a sales representative or by a pre-sales employee in case of a more technical presentation. After that,<act>wait we</act> for the customer to come back to us. Whenever we are not contacted within 2 weeks, <act>call customer</act>. Next,<act>create quotation</act>.; <act> determine contact details of potential customers </act> <act> call customer </act> <act> ask customer if he is interested </act> <path1><act> leave customer alone </act></path1><path2><act> give online presentation </act></path2>  <act> wait for customer </act> <path1><act> call customer </act></path1> <act> create quotation </act>
The process starts when<act>determine contact details of potential customers</act>. Before<act>ask customer</act> if he is interested, we start <act>contact customer</act>. In case this is not the case, <act>leave customer</act>. If the customer is interested in the end, the next step is <act>perform detailed online presentation</act>. the next step is given either by a sales representative or by a pre-sales employee in case of a more technical presentation. Thereafter<act>wait we</act> for the customer to come back to us. Whenever we are not contacted within 2 weeks, <act>call customer</act>. Next,<act>create quotation</act>.; <act> determine contact details of potential customers </act> <act> ask customer if he is interested </act> <act> contact customer </act> <path1><act> leave customer alone </act></path1><path2><act> perform detailed online presentation </act></path2>  <act> wait for customer </act> <path1><act> call customer </act></path1> <act> create quotation </act>
The process starts when<act>determine contact details of potential customers</act>. Later we start <act>call customer</act>. Afterwards, we ask the customer if he is interested. In case this is not the case, <act>leave customer</act>. If the customer is interested in the end, <act>give online presentation</act>. an online presentation is given either by a sales representative or by a pre-sales employee in case of a more technical presentation. Next,<act>wait we</act> for the customer to come back to us. In case we are not contacted within 2 weeks, <act>call customer</act>. <act>create quotation</act>.; <act> determine contact details of potential customers </act> <act> call customer </act> <act> ask customer if he is interested </act> <path1><act> leave customer alone </act></path1><path2><act> give online presentation </act></path2>  <act> wait for customer </act> <path1><act> call customer </act></path1> <act> create quotation </act>
<act>receive new order</act>. <act>enter information</act>. The production planning system optimizes our production processes . Besides, The production planning system creates a list of parts to be procured. Unfortunately The production planning system is not coupled correctly to our enterprise resource planning system . By the way, that is the second step. Once all the data is present, we need <act>decide whether parts are missing</act> . After that,<act>schedule production</act> to start. Once<act>receive notice</act> , <act>take care</act>. Next<act>check order</act>.; <act> receive new order </act> <act> enter information into production planning system </act>     <act> decide </act> <act> schedule production to start </act> <act> receive notice </act> <act> take care of implementation </act> <act> check order </act>
<act>receive new order</act>. In the next step,<act>enter into production planning system</act>. The production planning system optimizes our production processes . Besides, The production planning system creates a list of parts to be procured. Unfortunately The production planning system is not coupled correctly to our enterprise resource planning system . By the way, that is the second step. Once all the data is present, we need <act>decide whether parts must be procured</act> . <act>schedule production</act> to start. Thereafter<act>receive notice</act> . After that,<act>take care</act>. After that,<act>check order</act>.; <act> receive new order </act> <act> enter information into production planning system </act>     <act> decide </act> <act> schedule production to start </act> <act> receive notice </act> <act> take care of implementation </act> <act> check order </act>
<act>receive new order</act>. Then<act>be information</act>. The production planning system optimizes our production processes . Besides, The production planning system creates a list of parts to be procured. Unfortunately The production planning system is not coupled correctly to our enterprise resource planning system . By the way, that is the second step. Once all the data is present, we need <act>decide whether parts are missing</act> . Next<act>schedule next production</act> to start. Before<act>take care</act>, <act>receive notice</act> . <act>check order</act>.; <act> receive new order </act> <act> input information into production planning system </act>     <act> decide </act> <act> schedule production to start </act> <act> take care of implementation </act> <act> receive notice </act> <act> check order </act>
<act>receive new order</act>. Once that information is present, that information has to be entered into our production planning system . The production planning system optimizes our production processes . Besides, The production planning system creates a list of parts to be procured. Unfortunately The production planning system is not coupled correctly to our enterprise resource planning system . By the way, that is the second step. Once all the data is present, we need <act>decide whether parts are missing</act> . <act>schedule production</act> to start. Before<act>take care</act>, <act>receive notice</act> . Next,<act>check order</act>.; <act> receive new order </act> <act> enter information into production planning system </act>     <act> decide </act> <act> schedule production to start </act> <act> take care of implementation </act> <act> receive notice </act> <act> check order </act>
<act>receive new order</act>. Then<act>enter into production planning system</act>. The production planning system optimizes our production processes . Besides, The production planning system creates a list of parts to be procured. Unfortunately The production planning system is not coupled correctly to our enterprise resource planning system . By the way, that is the second step. Once all the data is present, we need <act>decide whether parts must be procured</act> . Later<act>schedule production</act> to start. Once<act>receive notice</act> , <act>take care</act>. Thereafter<act>check order</act>.; <act> receive new order </act> <act> enter information into production planning system </act>     <act> decide </act> <act> schedule production to start </act> <act> receive notice </act> <act> take care of implementation </act> <act> check order </act>
Initially<act>register request</act>. In the next step,<act>examine request</act> . If we reject request, the process ends. If we accept the request, <act>decide what to do with request</act>. Afterwards, the customer is informed about the outcome.; <act> register request </act> <act> examine request </act> <path1></path1><path2><act> decide what to do with the request </act></path2> <act> inform customer </act>
First<act>receive request</act>. After that,<act>check request</act> . If the request is rejected, the process ends. In case we accept the request, <act>decide what to do with request</act>. Then<act>inform customer</act>.; <act> receive request </act> <act> check request </act> <path1></path1><path2><act> decide what to do with the request </act></path2> <act> inform customer </act>
Initially<act>register request</act>. Subsequently<act>examine request</act>. If the request is rejected, the process ends. If we accept the request, <act>decide what to do with request</act>. Next<act>inform customer</act>.; <act> register request </act> <act> examine request </act> <path1></path1><path2><act> decide what to do with the request </act></path2> <act> inform customer </act>
Initially<act>receive request</act>. <act>examine request</act>. Whenever the request is rejected, the process ends. Whenever we accept the request, <act>decide what to do with request</act>. Next,<act>inform customer</act>.; <act> receive request </act> <act> examine request </act> <path1></path1><path2><act> decide what to do with the request </act></path2> <act> inform customer </act>
First<act>receive request</act>. Next,<act>examine request</act>. If we reject request, the process ends. If we accept the request, <act>decide what to do with request</act>. Next,<act>inform customer</act>.; <act> receive request </act> <act> examine request </act> <path1></path1><path2><act> decide what to do with the request </act></path2> <act> inform customer </act>
First<act>place order</act>. After<act>send order</act>, <act>process order</act>. Then<act>send invoice</act> . Then<act>receive invoice</act>.; <act> place order </act> <act> send order </act> <act> process order </act> <act> send invoice </act> <act> receive invoice </act>
Initially<act>place order</act>. Before<act>process order</act>, <act>send order</act>. After<act>send invoice</act>, <act>receive invoice</act>.; <act> place order </act> <act> process order </act> <act> send order </act> <act> send invoice </act> <act> receive invoice </act>
Initially<act>place order</act>. When<act>send order</act>, <act>process order</act>. After<act>send invoice</act> , <act>receive invoice</act>.; <act> place order </act> <act> send order </act> <act> process order </act> <act> send invoice </act> <act> receive invoice </act>
Initially<act>place order</act>. Once<act>send order</act>, <act>process order</act>. When<act>send invoice</act>, <act>receive invoice</act>.; <act> place order </act> <act> send order </act> <act> process order </act> <act> send invoice </act> <act> receive invoice </act>
Initially<act>place order</act>. Thereafter<act>send order</act>. <act>process order</act>. Before<act>receive invoice</act>, <act>send invoice</act> .; <act> place order </act> <act> send order </act> <act> process order </act> <act> receive invoice </act> <act> send invoice </act>
The intake workflow starts when<act>receive telephone call</act>. Before<act>determine nursing officer of patient</act> , <act>inquire</act> file. Patient files are kept <act>produce two registration cards</act>. The registration card contains a set of basic patient data.; <act> receive telephone call </act> <act> determine nursing officer </act> <act> inquire after name and residence </act> <act> record information </act> <act> hand in form </act> <act> print information </act> <act> save information </act> <path1><act> add patient </act></path1> <act> store registration form </act>  <act> produce two registration cards </act> 
<act>receive telephone call</act> . When<act>inquire</act> file. Patient files are kept <act>produce two registration cards</act>. The registration card contains a set of basic patient data.; <act> receive telephone call </act> <act> inquire after name and residence </act> <act> determine nursing officer </act> <act> make full inquiry </act> <act> hand in form </act> <act> store information </act> <act> print information </act> <path1><act> add patient </act></path1> <act> store registration form </act>  <act> produce two registration cards </act> 
<act>receive telephone call</act> . Before<act>determine nursing officer of patient</act> , <act>inquire</act> file. Patient files are kept <act>produce two registration cards</act>. The registration card contains a set of basic patient data.; <act> receive telephone call </act> <act> determine nursing officer </act> <act> inquire after name and residence </act> <act> make full inquiry </act> <act> hand in form </act> <act> store information </act> <act> print information </act> <path1><act> add patient </act></path1> <act> store registration form </act>  <act> produce two registration cards </act> 
<act>receive telephone call</act> . After<act>inquire</act> file. Patient files are kept <act>produce two registration cards</act>. The registration card contains a set of basic patient data.; <act> receive telephone call </act> <act> inquire after name and residence </act> <act> determine nursing officer </act> <act> make full inquiry </act> <act> hand in form </act> <act> save information </act> <act> print information </act> <path1><act> create patient file </act></path1> <act> store registration form </act>  <act> produce two registration cards </act> 
The intake workflow starts when<act>receive telephone call</act>. When<act>inquire</act> file. Patient files are kept <act>produce two registration cards</act>. The registration card contains a set of basic patient data.; <act> receive telephone call </act> <act> inquire after name and residence </act> <act> determine nursing officer </act> <act> make full inquiry </act> <act> hand in form </act> <act> store information </act> <act> print information </act> <path1><act> add patient </act></path1> <act> store registration form </act>  <act> produce two registration cards </act> 
Initially<act>schedule staff meeting of entire medical team</act>. The medical team consists of medical workers, physicians, and a psychiatrist. Next<act>assign new patients on list</act>. Each patient will be assigned to a social worker, who will act as the first intaker of the patient. One of the physicians will act as the second intaker. In assigning intakers, the teamleader takes into account their expertise as well as the region they are responsible for. When<act>record assignments</act> , <act>hand recording</act>. <act>determine whether medical file of patient is required</act>, the secretarial office prepares a letter. <act>send letter</act>. As soon <act>receive copy</act>. <act>inform second intaker</act> . <act>add copy</act> . The first intaker plans a meeting with the patient as soon as this is possible. <act>examine patient</act> using a standard checklist which is filled out. Thereafter<act>register additional observations</act>. After a visit, the first intaker puts a copy of these notes in the file of a patient. <act>add standard checklist</act>. After that, the second intaker plans the first meeting . Physicians use dictaphones during meetings with patients. Next,<act>next</act>. Next,<act>add information</act>. <act>put patient</act>. <act>provide with list of patients</act>. <act>formulate treatment plan</act> formally ends the intake procedure.; <act> schedule staff meeting </act>  <act> assign new patients </act>    <act> record assignments </act> <act> hand recording </act> <path1><act> determine whether the medical file is required </act></path1> <act> add information </act> <act> store assignment </act>   <act> prepare letter </act> <act> send letter </act> <act> receive copy </act> <act> inform second intaker </act> <act> add copy </act> <act> plan meeting </act> <act> examine patient </act> <act> register additional observations </act> <act> put copy in file </act> <act> add standard checklist </act> <act> plan first meeting </act>  <act> type out tapes </act> <act> add information to patient file </act> <act> put patient on list </act> <act> provide teamleader with list </act> <act> formulate treatment plan </act> 
<act>be </act>. The medical team is made up of three people. <act>assign new patients on list</act>. Each patient will be assigned to a social worker, who will act as the first intaker of the patient. One of the physicians will act as the second intaker. In assigning intakers, the teamleader takes into account their expertise as well as the region they are responsible for. <act>record assignments</act> . Next,<act>hand recording</act>. <act>determine recording</act>, the secretarial office prepares a letter. Subsequently<act>send letter</act>. As soon <act>receive copy</act>. <act>inform second intaker</act> . Then<act>add copy</act> . The first intaker plans a meeting with the patient as soon as this is possible. <act>examine patient</act> using a standard checklist which is filled out. Subsequently<act>register additional observations</act>. After a visit, the first intaker puts a copy of these notes in the file of a patient. <act>add standard checklist</act>. After that, the second intaker plans the first meeting . Physicians use dictaphones during meetings with patients. Before<act>add information</act>, <act>type</act>. Once<act>put patient</act>, <act>provide with list of patients</act>. <act>formulate treatment plan</act> formally ends the intake procedure.; <act> organise staff meeting </act>  <act> assign new patients </act>    <act> record assignments </act> <act> hand recording </act> <path1><act> determine whether the medical file is required </act></path1> <act> add information </act> <act> store assignment </act>   <act> prepare letter </act> <act> send letter </act> <act> receive copy </act> <act> inform second intaker </act> <act> add copy </act> <act> plan meeting </act> <act> examine patient </act> <act> register additional observations </act> <act> put copy in file </act> <act> add standard checklist </act> <act> plan first meeting </act>  <act> add information to patient file </act> <act> type out tapes </act> <act> put patient on list </act> <act> provide teamleader with list </act> <act> formulate treatment plan </act> 
Initially<act>schedule staff meeting of entire medical team</act>. The medical team is made up of three people. <act>assign new patients on list</act>. Each patient will be assigned to a social worker, who will act as the first intaker of the patient. One of the physicians will act as the second intaker. In assigning intakers, the teamleader takes into account their expertise as well as the region they are responsible for. Before<act>hand recording</act>, <act>record assignments</act> . <act>determine whether medical file of patient is required</act>, the secretarial office prepares a letter. Next,<act>send letter</act>. As soon <act>receive copy</act>. <act>inform second intaker</act> . Then<act>add copy</act> . The first intaker plans a meeting with the patient as soon as this is possible. <act>examine patient</act> using a standard checklist which is filled out. Thereafter<act>register additional observations</act>. After a visit, the first intaker puts a copy of these notes in the file of a patient. <act>add standard checklist</act>. Later the second intaker plans the first meeting . Physicians use dictaphones during meetings with patients. After<act>after</act>, <act>add information</act>. Before<act>provide with list of patients</act>, <act>put patient</act>. <act>formulate treatment plan</act> formally ends the intake procedure.; <act> schedule staff meeting </act>  <act> assign new patients </act>    <act> hand recording </act> <act> record assignments </act> <path1><act> determine whether the medical file is required </act></path1> <act> store assignment </act> <act> add information </act>   <act> prepare letter </act> <act> send letter </act> <act> receive copy </act> <act> inform second intaker </act> <act> add copy </act> <act> plan meeting </act> <act> examine patient </act> <act> register additional observations </act> <act> put copy in file </act> <act> add standard checklist </act> <act> plan first meeting </act>  <act> type out tapes </act> <act> add information to patient file </act> <act> provide teamleader with list </act> <act> put patient on list </act> <act> formulate treatment plan </act> 
First<act>schedule staff meeting of entire medical team</act>. The medical team is made up of three people. Later<act>assign new patients on list</act>. Each patient will be assigned to a social worker, who will act as the first intaker of the patient. One of the physicians will act as the second intaker. In assigning intakers, the teamleader takes into account their expertise as well as the region they are responsible for. Before<act>hand recording</act>, <act>record assignments</act> . <act>determine whether medical file of patient is required</act>, the secretarial office prepares a letter. Subsequently<act>send letter</act>. As soon <act>receive copy</act>. <act>inform second intaker</act> . Next<act>add copy</act> . The first intaker plans a meeting with the patient as soon as this is possible. <act>examine patient</act> using a standard checklist which is filled out. Subsequently<act>register additional observations</act>. After a visit, the first intaker puts a copy of these notes in the file of a patient. <act>add standard checklist</act>. Thereafter the second intaker plans the first meeting . Physicians use dictaphones during meetings with patients. Before<act>add information</act>, <act>type</act>. Before<act>provide with list of patients</act>, <act>put patient</act>. <act>formulate treatment plan</act> formally ends the intake procedure.; <act> schedule staff meeting </act>  <act> assign new patients </act>    <act> hand recording </act> <act> record assignments </act> <path1><act> determine whether the medical file is required </act></path1> <act> add information </act> <act> store assignment </act>   <act> prepare letter </act> <act> send letter </act> <act> receive copy </act> <act> inform second intaker </act> <act> add copy </act> <act> plan meeting </act> <act> examine patient </act> <act> register additional observations </act> <act> put copy in file </act> <act> add standard checklist </act> <act> plan first meeting </act>  <act> add information to patient file </act> <act> type out tapes </act> <act> provide teamleader with list </act> <act> put patient on list </act> <act> formulate treatment plan </act> 
First<act>schedule staff meeting of entire medical team</act>. The medical team consists of medical workers, physicians, and a psychiatrist. Thereafter<act>assign new patients on list</act>. Each patient will be assigned to a social worker, who will act as the first intaker of the patient. One of the physicians will act as the second intaker. In assigning intakers, the teamleader takes into account their expertise as well as the region they are responsible for. Before<act>hand recording</act>, <act>record assignments</act> . <act>determine whether medical file of patient is required</act>, the secretarial office prepares a letter. Subsequently<act>send letter</act>. As soon <act>receive copy</act>. <act>inform second intaker</act> . In the next step,<act>add copy</act> . The first intaker plans a meeting with the patient as soon as this is possible. <act>examine patient</act> using a standard checklist which is filled out. Later<act>register additional observations</act>. After a visit, the first intaker puts a copy of these notes in the file of a patient. <act>add standard checklist</act>. Afterwards, the second intaker plans the first meeting . Physicians use dictaphones during meetings with patients. Before<act>add information</act>, <act>type</act>. Before<act>provide with list of patients</act>, <act>put patient</act>. <act>formulate treatment plan</act> formally ends the intake procedure.; <act> schedule staff meeting </act>  <act> assign new patients </act>    <act> hand recording </act> <act> record assignments </act> <path1><act> determine whether the medical file is required </act></path1> <act> add information </act> <act> store assignment </act>   <act> prepare letter </act> <act> send letter </act> <act> receive copy </act> <act> inform second intaker </act> <act> add copy </act> <act> plan meeting </act> <act> examine patient </act> <act> register additional observations </act> <act> put copy in file </act> <act> add standard checklist </act> <act> plan first meeting </act>  <act> add information to patient file </act> <act> type out tapes </act> <act> provide teamleader with list </act> <act> put patient on list </act> <act> formulate treatment plan </act> 
Each morning, the files which have yet to be processed need <act>check </act>. If some files are missing, <act>initiate search</act>. otherwise, the files can be physically tracked to the intended location. Once<act>be all files</act>, <act>hand these</act>. Afterwards, the lawlist is distributed to the relevant people. <act>conduct hearings</act>.; <act> check files yet to be processed </act> <path1><act> initiate search </act></path1><path2><act> track files physically </act></path2> <act> hand files to Associate </act> <act> distribute lawlist </act> <act> conduct hearings </act>
Each morning, the files which have yet to be processed need <act>check </act>. If some files are missing, <act>initiate search</act>. otherwise, the files can be physically tracked to the intended location. Once<act>be all files</act>, <act>hand these</act>. <act>distribute lawlist</act>. Then<act>conduct hearings</act>.; <act> check files yet to be processed </act> <path1><act> initiate search </act></path1><path2><act> track files physically </act></path2> <act> hand files to Associate </act> <act> distribute lawlist </act> <act> conduct hearings </act>
Each morning, the files which have yet to be processed need <act>check </act>. If some files are missing, <act>initiate search</act>. otherwise, the files can be physically tracked to the intended location. Once<act>be all files</act>, <act>hand these</act>. Then<act>distribute lawlist</act>. Later<act>conduct hearings</act>.; <act> check files yet to be processed </act> <path1><act> initiate search </act></path1><path2><act> track files physically </act></path2> <act> hand files to Associate </act> <act> distribute lawlist </act> <act> conduct hearings </act>
Each morning, the files which have yet to be processed need <act>check </act>. If some files are missing, <act>initiate search</act>. otherwise, the files can be physically tracked to the intended location. Once<act>be all files</act>, <act>hand these</act>. <act>distribute lawlist</act>. Thereafter<act>conduct hearings</act>.; <act> check files yet to be processed </act> <path1><act> initiate search </act></path1><path2><act> track files physically </act></path2> <act> hand files to Associate </act> <act> distribute lawlist </act> <act> conduct hearings </act>
Each morning, the files which have yet to be processed need <act>check </act>. If some files are missing, <act>initiate search</act>. otherwise, the files can be physically tracked to the intended location. Once<act>be all files</act>, <act>hand these</act>. Thereafter<act>distribute lawlist</act>. In the next step,<act>conduct hearings</act>.; <act> check files yet to be processed </act> <path1><act> initiate search </act></path1><path2><act> track files physically </act></path2> <act> hand files to Associate </act> <act> distribute lawlist </act> <act> conduct hearings </act>
First<act>receive request</act> . Later<act>transmit data</act>. The customer service is a shared service center between the sales and distribution departments. Before<act>enter customer datobject</act>, <act>receive customer data</act>. Before<act>check customer data</act>, <act>compare customer datobject</act>. In case of any errors , these should be corrected on the basis of a simple error list. The comparison of data is done to prevent individual customer data being stored multiple times. If the customer does not exist in the customer data base, <act>create new customer object</act>. This object will remain the data object of interest during the rest of the process flow. The generated customer object is then used in combination with other data <act>prepare contract documents</act> . This includes data such as bank connections, information on the selected rate, requested date of switch-over. Subsequently an automated check of the contract documents is carried out within the cis (customer information system) . If the response is negative, <act>resolve causing issues</act>. Next, the contract documents are generated once again. If a positive response is received , <act>send out confirmation document</act> . Thereafter<act>send out request to grid operator</act>. a request to the grid operator puts the question whether the customer may be supplied by the selected supplier in the future. Thereafter<act>check request</act>. Then<act>transmit response comment</act>. <act>inform involved suppliers</act> . When<act>communicate</act>, <act>carry out termination of sales agreement between customer and old supplier</act>. If there are not any objections by the grid operator (i.e. no supplier concurrence), <act>create cis contract</act>. The customer then has the chance <act>check contract details</act>. <act>decide </act> to either withdraw from the switch contract or confirm the switch contract. . The process flow at customer service either ends (in case of withdrawal) or continues (in case of a confirmation). An additional constraint is that the customer can only withdraw from the offered contract within 7 days. The confirmation message by the customer is therefore not absolutely necessary . The confirmation message will count as accepted after 7 days in any way . The confirmation message can speed up the switch process. Before<act>compute final billing</act>, <act>transmit meter data</act>. <act>send final billing</act>. <act>create final billing</act>. For the customer as well as the grid operator the process ends then. After <act>receive meter data</act> . <act>import meter data</act> that require the information. The process of winning a new customer ends here.; <act> receive request </act> <act> transmit data </act>  <act> enter customer data object </act> <act> receive customer data </act> <act> check data object for completeness and plausibility </act> <act> compare data object with internal customer database </act> <path1><act> correct errors </act></path1>  <path1><act> create new customer object </act></path1>  <act> prepare contract documents </act>  <act> carry out automated check </act> <path1><act> resolve causing issues </act></path1> <act> generate contract documents </act> <path1><act> send out confirmation document </act></path1> <act> send out request </act>  <act> check request </act> <act> transmit response comment </act> <path1><act> inform all involved suppliers </act></path1> <act> communicate with old supplier </act>  <path1><act> create CIS contract </act></path1> <act> check contract details </act> <act> decide to withdraw or confirm </act>       <act> compute final billing </act> <act> transmit power meter data </act> <act> send final billing </act> <act> create and send final billing </act>  <act> receive meter data </act> <act> import meter data </act> 
Initially<act>receive request</act> . In the next step,<act>transmit data</act>. <act>import meter data</act> that require the information. The process of winning a new customer ends here.; <act> receive request </act> <act> transmit data </act>  <act> receive customer data </act> <act> enter customer data object </act> <act> compare with internal customer database </act> <act> check data object for completeness and plausibility </act> <path1><act> correct errors </act></path1>  <path1><act> create new customer object </act></path1>  <act> prepare contract documents </act>  <act> carry out automated check </act> <path1><act> identify causing issues </act></path1> <act> generate contract documents </act> <path1><act> send out confirmation document </act></path1> <act> send out request </act>  <act> check request </act> <act> transmit response comment </act> <path1><act> inform all involved suppliers </act></path1>  <act> communicate with old supplier </act> <path1><act> create CIS contract </act></path1> <act> check contract details </act> <act> decide to withdraw or confirm </act>       <act> compute final billing </act> <act> transmit power meter data </act> <act> send final billing </act> <act> create and send final billing </act>  <act> receive meter data </act> <act> import meter data </act> 
Initially<act>receive request</act> . Thereafter<act>transmit data</act>. The customer service is a shared service center between the sales and distribution departments. Next<act>receive customer data</act>. Next,<act>enter customer datobject</act>. <act>compare customer datobject</act>. Next,<act>check customer datobject</act>. In case of any errors , these should be corrected on the basis of a simple error list. The comparison of data is done to prevent individual customer data being stored multiple times. In case the customer does not exist in the customer data base, <act>create new customer object</act>. This object will remain the data object of interest during the rest of the process flow. The generated customer object is then used in combination with other data <act>prepare contract documents</act> . This includes data such as bank connections, information on the selected rate, requested date of switch-over. Then an automated check of the contract documents is carried out within the cis (customer information system) . If the response is negative, <act>analyze causing issues</act>. Thereafter the contract documents are generated once again. In case the response is positive, <act>send out confirmation document</act> . <act>send out request to grid operator</act>. A request to the grid operator puts the question whether the customer may be supplied by the selected supplier in the future. Before<act>before</act>, <act>check request</act>. <act>demand resolution of conflict</act>. Before<act>carry out termination of sales agreement between customer and old supplier</act>, <act>communicate</act>. If there are not any objections by the grid operator (i.e. no supplier concurrence), <act>create cis contract</act>. Afterwards, the customer has the chance <act>check contract details</act>. <act>decide </act> to either withdraw from the switch contract or confirm the switch contract. . The process flow at customer service either ends (in case of withdrawal) or continues (in case of a confirmation). An additional constraint is that the customer can only withdraw from the offered contract within 7 days. The confirmation message by the customer is therefore not absolutely necessary . The confirmation message will count as accepted after 7 days in any way . The confirmation message can speed up the switch process. Before<act>compute final billing</act>, <act>transmit meter data</act>. Then<act>send final billing</act>. <act>create final billing</act>. For the customer as well as the grid operator the process ends then. After <act>receive meter data</act> . <act>import meter data</act> that require the information. The process of winning a new customer ends here.; <act> receive request </act> <act> transmit data </act>  <act> receive customer data </act> <act> enter customer data object </act> <act> compare with internal customer database </act> <act> check data object for completeness and plausibility </act> <path1><act> correct errors </act></path1>  <path1><act> create new customer object </act></path1>  <act> prepare contract documents </act>  <act> carry out automated check </act> <path1><act> analyze causing issues </act></path1> <act> generate contract documents </act> <path1><act> send out confirmation document </act></path1> <act> send out request </act>  <act> transmit response comment </act> <act> check request </act> <path1><act> demand resolution of conflict </act></path1>  <act> communicate with old supplier </act> <path1><act> create CIS contract </act></path1> <act> check contract details </act> <act> decide to withdraw or confirm </act>       <act> compute final billing </act> <act> transmit power meter data </act> <act> send final billing </act> <act> create and send final billing </act>  <act> receive meter data </act> <act> import meter data </act> 
First<act>receive request</act> . Then<act>transmit data</act>. The customer service is a shared service center between the sales and distribution departments. When<act>receive customer data</act>, <act>enter customer datobject</act>. After<act>compare customer datobject</act>, <act>check customer datobject</act>. In case there are any errors, these should be corrected on the basis of a simple error list. The comparison of data is done to prevent individual customer data being stored multiple times. If the customer does not exist in the customer data base, <act>create new customer object</act>. This object will remain the data object of interest during the rest of the process flow. The generated customer object is then used in combination with other data <act>prepare contract documents</act> . This includes data such as bank connections, information on the selected rate, requested date of switch-over. An automated check of the contract documents is carried out within the cis (customer information system) . If the response is negative, <act>resolve causing issues</act>. Next the contract documents are generated once again. <act>receive positive response</act> , <act>send out confirmation document</act> . <act>send out request to grid operator</act>. A request to the grid operator puts the question whether the customer may be supplied by the selected supplier in the future. Before<act>before</act>, <act>check request</act>. <act>inform involved suppliers</act> . In the next step,<act>in</act>. Then<act>carry out termination of sales agreement between customer and old supplier</act>. If there are not any objections by the grid operator (i.e. no supplier concurrence), <act>create cis contract</act>. The customer then has the chance <act>check contract details</act>. <act>decide </act> to either withdraw from the switch contract or confirm the switch contract. . The process flow at customer service either ends (in case of withdrawal) or continues (in case of a confirmation). An additional constraint is that the customer can only withdraw from the offered contract within 7 days. The confirmation message by the customer is therefore not absolutely necessary . The confirmation message will count as accepted after 7 days in any way . The confirmation message can speed up the switch process. Before<act>compute final billing</act>, <act>transmit meter data</act>. Then<act>send final billing</act>. <act>create final billing</act>. For the customer as well as the grid operator the process ends then. After <act>receive meter data</act> . <act>import meter data</act> that require the information. The process of winning a new customer ends here.; <act> receive request </act> <act> transmit data </act>  <act> receive customer data </act> <act> enter customer data object </act> <act> compare data object with internal customer database </act> <act> check data object for completeness and plausibility </act> <path1><act> correct errors </act></path1>  <path1><act> create new customer object </act></path1>  <act> prepare contract documents </act>  <act> carry out automated check </act> <path1><act> resolve causing issues </act></path1> <act> generate contract documents </act> <path1><act> send out confirmation document </act></path1> <act> send out request </act>  <act> transmit response comment </act> <act> check request </act> <path1><act> inform all involved suppliers </act></path1> <act> communicate with old supplier </act>  <path1><act> create CIS contract </act></path1> <act> check contract details </act> <act> decide to withdraw or confirm </act>       <act> compute final billing </act> <act> transmit power meter data </act> <act> send final billing </act> <act> create and send final billing </act>  <act> receive meter data </act> <act> import meter data </act> 
First<act>receive request</act> . <act>transmit data</act>. The customer service is a shared service center between the sales and distribution departments. Once<act>receive customer data</act>, <act>enter customer datobject</act>. Before<act>check it</act>, the data object should be compared with the internal customer database. In case of any errors , these should be corrected on the basis of a simple error list. The comparison of data is done to prevent individual customer data being stored multiple times. Whenever the customer does not exist in the customer data base, <act>create new customer object</act>. This object consists of data elements such as the customers name and address and the assigned power gauge. The generated customer object is then used in combination with other data <act>prepare contract documents</act> . This includes data such as bank connections, information on the selected rate, requested date of switch-over. Next an automated check of the contract documents is carried out within the cis (customer information system) . <act>receive negative response</act> , <act>resolve causing issues</act>. Then the contract documents are generated once again. If the response is positive, <act>send out confirmation document</act> . <act>send out request to grid operator</act>. A request to the grid operator puts the question whether the customer may be supplied by the selected supplier in the future. Before<act>before</act>, <act>check request</act>. <act>demand resolution of conflict</act>. Before<act>carry out termination of sales agreement between customer and old supplier</act>, <act>communicate</act>. In case there are not any objections by the grid operator (i.e. no supplier concurrence), <act>create cis contract</act>. The customer has the chance <act>check contract details</act>. <act>decide check</act> to either withdraw from the switch contract or confirm the switch contract. . The process flow at customer service either ends (in case of withdrawal) or continues (in case of a confirmation). An additional constraint is that the customer can only withdraw from the offered contract within 7 days. The confirmation message by the customer is therefore not absolutely necessary . The confirmation message will count as accepted after 7 days in any way . The confirmation message can speed up the switch process. Before<act>compute final billing</act>, <act>transmit meter data</act>. In the next step,<act>send final billing</act>. <act>create final billing</act>. For the customer as well as the grid operator the process ends then. After <act>receive meter data</act> . <act>import meter data</act> that require the information. The process of winning a new customer ends here.; <act> receive request </act> <act> transmit data </act>  <act> receive customer data </act> <act> enter customer data object </act> <act> check data object for completeness and plausibility </act> <act> compare data object with internal customer database </act> <path1><act> correct errors </act></path1>  <path1><act> create new customer object </act></path1>  <act> prepare contract documents </act>  <act> carry out automated check </act> <path1><act> resolve causing issues </act></path1> <act> generate contract documents </act> <path1><act> send out confirmation document </act></path1> <act> send out request </act>  <act> transmit response comment </act> <act> check request </act> <path1><act> demand resolution of conflict </act></path1>  <act> communicate with old supplier </act> <path1><act> create CIS contract </act></path1> <act> check contract details </act> <act> decide to withdraw or confirm </act>       <act> compute final billing </act> <act> transmit power meter data </act> <act> send final billing </act> <act> create and send final billing </act>  <act> receive meter data </act> <act> import meter data </act> 
<act>perceive</act> that her subscribed service has degraded. <act>send list with all problem parameters</act>. <act>enter problem report into system</act>. Later<act>compare problem report</act> to identify what the extent and<act>send detailed problem report</act> will undertake corrective actions by themselves. Once<act>create problem resolution report</act>, <act>send out problem resolution report</act>. Next the process path ends.;  <act> send list with all problem parameters </act> <act> enter problem report </act> <act> compare problem report to customer SLA </act> <act> determine necessary counter measures </act> <act> determine significance of the customer </act> <path1></path1><path2></path2> <act> create detailed problem report </act> <act> send detailed problem report </act>  <act> investigate whether problem is analyzable at level of their department </act> <path1><act> send out detailed report to resource provisioning </act></path1><path2><act> perform analysis </act></path2> <act> create trouble report </act> <act> receive detailed problem report </act> <act> check whether there are any possible problems </act> <path1><act> create notification </act></path1><path2><act> analyze problem </act></path2> <act> create status report </act> <act> send status report </act> <act> prepare final status report </act> <act> determine what counter measures should be taken </act>  <path1><act> send back actual service performance </act></path1><path2><act> undertake corrective actions </act></path2> <act> create problem resolution report </act> <act> send out problem resolution report </act> 
<act>perceive</act> that her subscribed service has degraded. <act>send list with all problem parameters</act>. <act>enter problem report into system</act>. Then<act>compare problem report</act> to identify what the extent and the details of the service degradation are. <act>determine necessary counter measures</act>. <act>determine significance of customer</act> in the final status report. Subsequently two alternative process paths may be taken. Whenever no problems were detected at all , <act>send actual service performance</act>. If there is a requirement for minor corrective actions, <act>undertake corrective actions</act>. Once<act>create problem resolution report</act>, <act>send out problem resolution report</act>. Later the process path ends.;  <act> send list with all problem parameters </act> <act> enter problem report </act> <act> compare problem report to customer SLA </act> <act> determine necessary counter measures </act> <act> determine significance of the customer </act> <path1></path1><path2></path2> <act> create detailed problem report </act> <act> send detailed problem report </act>  <act> investigate whether problem is analyzable at level of their department </act> <path1><act> send out detailed report to resource provisioning </act></path1><path2><act> perform analysis </act></path2> <act> create trouble report </act> <act> receive detailed problem report </act> <act> check whether there are any possible problems </act> <path1><act> create notification </act></path1><path2><act> analyze problem </act></path2> <act> create status report </act> <act> send status report </act> <act> prepare final status report </act> <act> determine what counter measures should be taken </act>  <path1><act> send back actual service performance </act></path1><path2><act> undertake corrective actions </act></path2> <act> create problem resolution report </act> <act> send out problem resolution report </act> 
<act>perceive</act> that her subscribed service has degraded. <act>send list with all problem parameters</act>. <act>enter problem report into system</act>. Thereafter<act>compare problem report</act> to identify what the extent and <act>send detailed problem report</act> will undertake corrective actions by themselves. Before<act>send out problem resolution report</act>, <act>create problem resolution report</act>. Next the process path ends.;  <act> send list with all problem parameters </act> <act> enter problem report </act> <act> compare problem report to customer SLA </act> <act> determine necessary counter measures </act> <act> determine significance of the customer </act> <path1></path1><path2></path2> <act> create detailed problem report </act> <act> send detailed problem report </act>  <act> investigate whether problem is analyzable at level of their department </act> <path1><act> send out detailed report to resource provisioning </act></path1><path2><act> perform analysis </act></path2> <act> create trouble report </act> <act> receive detailed problem report </act> <act> check whether there are any possible problems </act> <path1><act> create notification </act></path1><path2><act> analyze problem </act></path2> <act> create status report </act> <act> send status report </act> <act> prepare final status report </act> <act> determine what counter measures should be taken </act>  <path1><act> send back actual service performance </act></path1><path2><act> undertake corrective actions </act></path2> <act> send out problem resolution report </act> <act> create problem resolution report </act> 
<act>perceive</act> that her subscribed service has degraded. <act>send list with all problem parameters</act>. <act>enter problem report into system</act>. <act>compare problem report</act> to identify what the extent and<act>send detailed problem report</act> ends.;  <act> send list with all problem parameters </act> <act> enter problem report </act> <act> compare problem report to customer SLA </act> <act> determine necessary counter measures </act> <act> determine significance of the customer </act> <path1></path1><path2></path2> <act> create detailed problem report </act> <act> send detailed problem report </act>  <act> investigate whether problem is analyzable at level of their department </act> <path1><act> send out detailed report to resource provisioning </act></path1><path2><act> perform analysis </act></path2> <act> create trouble report </act> <act> receive detailed problem report </act> <act> check whether there are any possible problems </act> <path1><act> create notification </act></path1><path2><act> analyze problem </act></path2> <act> create status report </act> <act> send status report </act> <act> prepare final status report </act> <act> determine what counter measures should be taken </act>  <path1><act> send back actual service performance </act></path1><path2><act> undertake corrective actions </act></path2> <act> create problem resolution report </act> <act> send out problem resolution report </act> 
<act>perceive</act> that her subscribed service has degraded. <act>send list with all problem parameters</act>. <act>enter problem report into system</act>. <act>compare problem report</act> to identify what the extent and<act>send detailed problem report</act> ends.;  <act> send list with all problem parameters </act> <act> enter problem report </act> <act> compare problem report to customer SLA </act> <act> determine necessary counter measures </act> <act> determine significance of the customer </act> <path1></path1><path2></path2> <act> create detailed problem report </act> <act> send detailed problem report </act>  <act> investigate whether problem is analyzable at level of their department </act> <path1><act> send out detailed report to resource provisioning </act></path1><path2><act> perform analysis </act></path2> <act> create trouble report </act> <act> receive detailed problem report </act> <act> check whether there are any possible problems </act> <path1><act> create notification </act></path1><path2><act> analyze problem </act></path2> <act> create status report </act> <act> send status report </act> <act> prepare final status report </act> <act> determine what counter measures should be taken </act>  <path1><act> send back actual service performance </act></path1><path2><act> undertake corrective actions </act></path2> <act> send out problem resolution report </act> <act> create problem resolution report </act> 
<act>create request for automatic resource restoration</act> request is received, <act>track possible errors</act>. <act>base on tracked errors</act>. Next, a trouble-<act>create shooting report</act>. <act>send out report</act>. Thereafter the process ends.; <act> create request for automatic resource restoration </act> <act> send message </act>  <act> track all possible errors </act> <act> undertake all necessary corrective actions </act> <act> create trouble-shooting report </act> <act> send out report </act> 
<act>create request for automatic resource restoration</act> request is received, <act>track possible errors</act>. <act>base on tracked errors</act>. Subsequently a trouble-<act>create shooting report</act>. <act>send out report</act>. Next, the process is ended.; <act> create request for automatic resource restoration </act> <act> send message </act>  <act> track all possible errors </act> <act> undertake all necessary corrective actions </act> <act> create trouble-shooting report </act> <act> send out report </act> 
<act>create request for automatic resource restoration</act> request is received, <act>track possible errors</act>. <act>base on tracked errors</act>. A trouble-<act>create shooting report</act>. <act>send out report</act>. Afterwards, the process ends.; <act> create request for automatic resource restoration </act> <act> send message </act>  <act> track all possible errors </act> <act> undertake all necessary corrective actions </act> <act> create trouble-shooting report </act> <act> send out report </act> 
<act>create request for automatic resource restoration</act> request is received, <act>track possible errors</act>. <act>base on tracked errors</act>. In the next step,<act>create trouble shooting report</act>. <act>send out report</act>. Afterwards, the process ends.; <act> create request for automatic resource restoration </act> <act> send message </act>  <act> track all possible errors </act> <act> undertake all necessary corrective actions </act> <act> create trouble-shooting report </act> <act> send out report </act> 
<act>create request for automatic resource restoration</act> request is received, <act>track possible errors</act>. <act>base on tracked errors</act>. After that,<act>create trouble shooting report</act>. <act>send out report</act>. Afterwards, the process is ended.; <act> create request for automatic resource restoration </act> <act> send message </act>  <act> track all possible errors </act> <act> undertake all necessary corrective actions </act> <act> create trouble-shooting report </act> <act> send out report </act> 
First the trouble-<act>receive shooting report</act>. <act>go information</act>. Subsequently<act>receive actual service performance</act> . Next two subsequent activities are triggered. <act>create report</act> which details the current service performance and the resolution of the problem. Secondly, an sla violation rebate is reported to billing & collections who will adjust the billing. Then<act>send out report for customer</act>. After all activities are completed the process ends within customer service. After<act>receive report about service performance and problem resolution from customer service</act>, the process flow at the customer also ends.; <act> receive trouble-shooting report </act> <act> create problem resolution report </act> <act> receive actual service performance </act>  <act> create report </act> <act> report SLA violation rebate </act> <act> send out report </act>  <act> receive report </act>
The process starts when<act>trouble</act>-<act>receive shooting report</act>. <act>go information</act>. Later<act>receive actual service performance</act> . Next two subsequent activities are triggered. <act>create report</act> which details the current service performance and the resolution of the problem. Secondly, an sla violation rebate is reported to billing & collections who will adjust the billing. Later<act>send out report for customer</act>. After all activities are completed the process ends within customer service. After<act>receive report about service performance and problem resolution from customer service</act>, the process flow at the customer also ends.; <act> receive trouble-shooting report </act> <act> create problem resolution report </act> <act> receive actual service performance </act>  <act> create report </act> <act> report SLA violation rebate </act> <act> send out report </act>  <act> receive report </act>
The process starts when<act>trouble</act>-<act>receive shooting report</act>. <act>go information</act>. Afterwards, customer service receives the actual service performance . Next two subsequent activities are triggered. <act>create report</act> which details the current service performance and the resolution of the problem. Secondly, an sla violation rebate is reported to billing & collections who will adjust the billing. Next,<act>send out report for customer</act>. After all activities are completed the process ends within customer service. After<act>receive report about service performance and problem resolution from customer service</act>, the process flow at the customer also ends.; <act> receive trouble-shooting report </act> <act> create problem resolution report </act> <act> receive actual service performance </act>  <act> create report </act> <act> report SLA violation rebate </act> <act> send out report </act>  <act> receive report </act>
Initially<act>receive trouble shooting report</act>. <act>go information</act>. <act>receive actual service performance</act> . Subsequently two subsequent activities are triggered. <act>create report</act> which details the current service performance and the resolution of the problem. Secondly, an sla violation rebate is reported to billing & collections who will adjust the billing. Subsequently<act>send out report for customer</act>. After all activities are completed the process ends within customer service. After<act>receive report about service performance and problem resolution from customer service</act>, the process flow at the customer also ends.; <act> receive trouble-shooting report </act> <act> create problem resolution report </act> <act> receive actual service performance </act>  <act> create report </act> <act> report SLA violation rebate </act> <act> send out report </act>  <act> receive report </act>
Initially<act>receive trouble shooting report</act>. <act>go information</act>. Subsequently<act>receive actual service performance</act> . Subsequently two subsequent activities are triggered. <act>create report</act> which details the current service performance and the resolution of the problem. Secondly, an sla violation rebate is reported to billing & collections who will adjust the billing. After that,<act>send out report for customer</act>. After all activities are completed the process ends within customer service. After<act>receive report about service performance and problem resolution from customer service</act>, the process flow at the customer also ends.; <act> receive trouble-shooting report </act> <act> create problem resolution report </act> <act> receive actual service performance </act>  <act> create report </act> <act> report SLA violation rebate </act> <act> send out report </act>  <act> receive report </act>
First<act>bring in defective computer</act>. Next,<act>check defect</act> . After that,<act>hand out repair cost calculation</act>. If the customer decides that the costs are acceptable, <act>pay bill</act>. <act>take computer</act>.; <act> bring in defective computer </act> <act> check defect </act> <act> hand out repair cost calculation </act> <path1></path1><path2><act> take computer home unrepaired </act></path2>
Initially<act>bring in defective computer</act>. Before<act>hand out repair cost calculation</act>, <act>check defect</act> . If the customer decides that the costs are acceptable, <act>pay bill</act>. <act>take computer</act>.; <act> bring in defective computer </act> <act> hand out repair cost calculation </act> <act> check defect </act> <path1></path1><path2><act> take computer home unrepaired </act></path2>
The process starts when<act>bring in defective computer</act>. Before<act>hand out repair cost calculation</act>, <act>check defect</act> . If the customer decides that the costs are acceptable, <act>pay bill</act>. <act>take computer</act>.; <act> bring in defective computer </act> <act> hand out repair cost calculation </act> <act> check defect </act> <path1></path1><path2><act> take computer home unrepaired </act></path2>
The process starts when<act>bring in defective computer</act>. When<act>check defect</act> , <act>hand out repair cost calculation</act>. If the customer decides that the costs are acceptable, <act>pay bill</act>. <act>take computer</act>.; <act> bring in defective computer </act> <act> check defect </act> <act> hand out repair cost calculation </act> <path1></path1><path2><act> take computer home unrepaired </act></path2>
First<act>bring in defective computer</act>. When<act>check defect</act> , <act>hand out repair cost calculation</act>. If the customer decides that the costs are acceptable, <act>pay bill</act>. <act>take computer</act>.; <act> bring in defective computer </act> <act> check defect </act> <act> hand out repair cost calculation </act> <path1></path1><path2><act> take computer home unrepaired </act></path2>
There may be either a financial reward or an other benefit. Regarding the latter, <act>choose appropriate benefit</act>. If the reward is financial, <act>calculate reward</act>.;  <path1><act> choose appropriate benefit </act></path1><path2><act> calculate and pay reward </act></path2>
There may be either a financial reward or an other benefit. If the reward is non financial, <act>choose appropriate benefit</act>. If the reward is financial, <act>calculate reward</act>.;  <path1><act> choose appropriate benefit </act></path1><path2><act> calculate and pay reward </act></path2>
There may be either a financial reward or an other benefit. In case the reward is non financial, <act>choose appropriate benefit</act>. If the reward is financial, <act>calculate reward</act>.;  <path1><act> choose appropriate benefit </act></path1><path2><act> calculate and pay reward </act></path2>
There may be either a financial reward or an other benefit. Regarding the latter, <act>choose appropriate benefit</act>. If the reward is financial, <act>calculate reward</act>.;  <path1><act> choose appropriate benefit </act></path1><path2><act> calculate and pay reward </act></path2>
There may be either a financial reward or an other benefit. If the reward is non financial, <act>choose appropriate benefit</act>. In case the reward is financial, <act>calculate reward</act>.;  <path1><act> choose appropriate benefit </act></path1><path2><act> calculate and pay reward </act></path2>
Initially<act>provide training in turn</act>. Afterwards, the hr dismisses the employee.; <act> provide training </act> <act> dismiss employee </act>
First<act>provide first training in turn</act>. <act>dismiss employee</act>.; <act> provide training </act> <act> dismiss employee </act>
First<act>provide first training in turn</act>. <act>dismiss employee</act>.; <act> provide training </act> <act> dismiss employee </act>
Initially<act>provide training in turn</act>. Next<act>dismiss employee</act>.; <act> provide training </act> <act> dismiss employee </act>
The process starts when<act>provide </act>. <act>dismiss employee</act>.; <act> provide training </act> <act> dismiss employee </act>
A paypal client wants <act>pay </act> and has selected this as payment option. For bank account addition, first, <act>compare values</act>. If the values match, <act>consider bank account</act> as confirmed. Whenever the values do not match, <act>remove bank account</act>, i.e. the bank account could not be confirmed.;  <act> enter all relevant bank details </act> <act> click continue </act>  <act> make two random deposits </act> <act> send message </act>  <act> notify PayPal client </act> <act> check for deposits </act> <act> log into PayPal account </act> <act> enter amounts </act> <act> click verify </act> <act> compare values </act> <path1><act> consider bank account as confirmed </act></path1><path2><act> remove bank account </act></path2>
A paypal client wants <act>pay </act> and has selected this as payment option. For bank account addition, first, <act>compare values</act>. Whenever the values match, <act>consider bank account</act> as confirmed. If the values do not match, <act>remove bank account</act>, i.e. the bank account could not be confirmed.;  <act> enter all relevant bank details </act> <act> click continue </act>  <act> make two random deposits </act> <act> send message </act>  <act> notify PayPal client </act> <act> check for deposits </act> <act> log into PayPal account </act> <act> enter amounts </act> <act> click verify </act> <act> compare values </act> <path1><act> consider bank account as confirmed </act></path1><path2><act> remove bank account </act></path2>
A paypal client wants <act>pay </act> and has selected this as payment option. For bank account addition, first, <act>compare values</act>s PayPal account. If the values do not match, <act>remove bank account</act>, i.e. the bank account could not be confirmed.;  <act> enter all relevant bank details </act> <act> click continue </act>  <act> make two random deposits </act> <act> send message </act>  <act> notify PayPal client </act> <act> check for deposits </act> <act> log into PayPal account </act> <act> enter amounts </act> <act> click verify </act> <act> compare values </act> <path1><act> link bank account to account </act></path1><path2><act> remove bank account </act></path2>
A paypal client wants <act>pay </act> and has selected this as payment option. For bank account addition, first, <act>compare values</act>s PayPal account. If the values do not match, <act>remove bank account</act>, i.e. the bank account could not be confirmed.;  <act> enter all relevant bank details </act> <act> click continue </act>  <act> make two random deposits </act> <act> send message </act>  <act> notify PayPal client </act> <act> check for deposits </act> <act> log into PayPal account </act> <act> enter amounts </act> <act> click verify </act> <act> compare values </act> <path1><act> link bank account to account </act></path1><path2><act> remove bank account </act></path2>
A paypal client wants <act>pay </act> and has selected this as payment option. For bank account addition, first, <act>compare values</act>s PayPal account. Whenever the values do not match, <act>remove bank account</act>, i.e. the bank account could not be confirmed.;  <act> enter all relevant bank details </act> <act> click continue </act>  <act> make two random deposits </act> <act> send message </act>  <act> notify PayPal client </act> <act> check for deposits </act> <act> log into PayPal account </act> <act> enter amounts </act> <act> click verify </act> <act> compare values </act> <path1><act> link bank account to account </act></path1><path2><act> remove bank account </act></path2>
<act>start process</act>. The availability of products and <act>check credit rating</act>first. If the credit rating is higher than 9000 (according to Schufa) , <act>call registration</act> unsuccessful. If not , the interim customer dataset record is created. After this, one of two options is executed:  . either, a device provision is performed. either, a customer account is registered at ISP nodes. Once one of these tasks is finished <act>create welcome package</act>. This welcome package alerts them that the registration process was completed successfully.; <act> fill out registration form </act> <act> check availability and credit rating </act> <path1><act> call registration unsuccessful </act></path1><path2><act> create interim customer dataset record </act></path2>  <path1><act> perform device provision </act></path1><path2><act> register customer account </act></path2> <act> create and send welcome package </act> 
<act>start process</act>. The availability of products and <act>check credit rating</act>first. If the credit rating is higher than 9000 (according to Schufa) , <act>call registration</act> unsuccessful. Whenever not , <act>create interim customer dataset record</act>. After this, one of two options is executed:  . either, a device provision is performed. either, a customer account is registered at ISP nodes. Once one of these tasks is finished <act>create welcome package</act>. This welcome package alerts them that the registration process was completed successfully.; <act> fill out registration form </act> <act> check availability and credit rating </act> <path1><act> call registration unsuccessful </act></path1><path2><act> create interim customer dataset record </act></path2>  <path1><act> perform device provision </act></path1><path2><act> register customer account </act></path2> <act> create and send welcome package </act> 
<act>start process</act>. The availability of products and <act>check credit rating</act>first. Whenever the credit rating is higher than 9000 (according to Schufa) , <act>call registration</act> unsuccessful. Whenever not , <act>create interim customer dataset record</act>. After this, one of two options is executed:  . either, a device provision is performed. either, a customer account is registered at ISP nodes. Once one of these tasks is finished <act>create welcome package</act>. This welcome package alerts them that the registration process was completed successfully.; <act> fill out registration form </act> <act> check availability and credit rating </act> <path1><act> call registration unsuccessful </act></path1><path2><act> create interim customer dataset record </act></path2>  <path1><act> perform device provision </act></path1><path2><act> register customer account </act></path2> <act> create and send welcome package </act> 
<act>start process</act>. The availability of products and <act>check credit rating</act>first. Whenever the credit rating is higher than 9000 (according to Schufa) , <act>call registration</act> unsuccessful. <act>create interim customer dataset record</act> and sent to the customer. This welcome package alerts them that the registration process was completed successfully.; <act> fill out registration form </act> <act> check availability and credit rating </act> <path1><act> call registration unsuccessful </act></path1><path2><act> create interim customer dataset record </act></path2>  <path1><act> perform device provision </act></path1><path2><act> register customer account </act></path2> <act> create and send welcome package </act> 
<act>start process</act>. The availability of products and <act>check credit rating</act>first. If the credit rating is higher than 9000 (according to Schufa) , <act>call registration</act> unsuccessful. <act>create interim customer dataset record</act> and sent to the customer. This welcome package alerts them that the registration process was completed successfully.; <act> fill out registration form </act> <act> check availability and credit rating </act> <path1><act> call registration unsuccessful </act></path1><path2><act> create interim customer dataset record </act></path2>  <path1><act> perform device provision </act></path1><path2><act> register customer account </act></path2> <act> create and send welcome package </act> 
In the process of <act>add credit card</act> the user has <act>input credit card details</act>. Next,<act>check billing address</act>. Whenever it is incorrect , <act>update address</act>. If it is correct, the process continues. Next, the user needs <act>click continue button</act> to move forward. <act>verify credit card</act>. The result is then checked. Whenever The result is validated , <act>add credit card</act>. Whenever the result is not validated , <act>cancel addition</act>.; <act> input credit card details </act> <act> check billing address </act> <path1><act> update address </act></path1>  <act> click continue button </act> <act> verify credit card </act> <act> check result </act> <path1><act> add credit card </act></path1><path2><act> cancel addition </act></path2>
In the process of <act>add credit card</act> the user has <act>input credit card details</act>. After that,<act>check billing address</act>. If it is incorrect , <act>update address</act>. If it is correct, the process continues. The user needs <act>click continue button</act> to move forward. <act>verify credit card</act>. The result is then checked. In case The result is validated , <act>add credit card</act>. If the result is not validated , <act>cancel addition</act>.; <act> input credit card details </act> <act> check billing address </act> <path1><act> update address </act></path1>  <act> click continue button </act> <act> verify credit card </act> <act> check result </act> <path1><act> add credit card </act></path1><path2><act> cancel addition </act></path2>
In the process of <act>add credit card</act> the user has <act>input credit card details</act>. <act>check billing address</act>. If it is incorrect , <act>update address</act>. If it is correct, the process continues. Next the user needs <act>click continue button</act> to move forward. <act>verify credit card</act>. The result is then checked. If The result is validated , <act>add credit card</act>. If not, the addition is cancelled.; <act> input credit card details </act> <act> check billing address </act> <path1><act> update address </act></path1>  <act> click continue button </act> <act> verify credit card </act> <act> check result </act> <path1><act> add credit card </act></path1><path2><act> cancel addition </act></path2>
In the process of <act>add credit card</act> the user has <act>input credit card details</act>. <act>check billing address</act>. Whenever it is incorrect , <act>update address</act>. If it is correct, the process continues. After that, the user needs <act>click continue button</act> to move forward. <act>verify credit card</act>. The result is then checked. If The result is validated , <act>add credit card</act>. If the result is not validated , <act>cancel addition</act>.; <act> input credit card details </act> <act> check billing address </act> <path1><act> update address </act></path1>  <act> click continue button </act> <act> verify credit card </act> <act> check result </act> <path1><act> add credit card </act></path1><path2><act> cancel addition </act></path2>
In the process of <act>add credit card</act> the user has <act>input credit card details</act>. Next,<act>check billing address</act>. If it is incorrect , <act>update address</act>. If it is correct, the process continues. Afterwards, the user needs <act>click continue button</act> to move forward. <act>verify credit card</act>. The result is then checked. In case The result is validated , <act>add credit card</act>. If not, the addition is cancelled.; <act> input credit card details </act> <act> check billing address </act> <path1><act> update address </act></path1>  <act> click continue button </act> <act> verify credit card </act> <act> check result </act> <path1><act> add credit card </act></path1><path2><act> cancel addition </act></path2>
The process starts with <act>collect data</act>. Before<act>wait business analyst</act> until the design is complete, <act>integrate design</act>. Later<act>check design</act>. If the design needs adjustment , the web designer has <act>change design</act> . In case the design is OK, <act>integrate html specialist</act>. Afterwards, the tester tests the final website to make sure everything is going well. Whenever the test is OK, the process ends. <act>provide test results</act> .; <act> collect data and conduct business analysis </act> <act> wait until design is complete </act> <act> integrate design and decide where the customer feedback module should be placed </act> <act> check design and provide feedback </act> <path1><act> change and integrate design </act></path1><path2><act> integrate with overall implementation </act></path2> <act> test final website </act> <path1></path1><path2><act> provide test results </act></path2>
The process starts with <act>collect data</act>. Before<act>wait business analyst</act> until the design is complete, <act>integrate design</act>. After that,<act>check design</act>. Whenever the design needs adjustment , the web designer has <act>change design</act> . If the design is found to be OK, <act>integrate html specialist</act>. Later<act>test final website</act> to make sure everything is going well. Whenever the test is OK, the process ends. <act>provide test results</act> .; <act> collect data and conduct business analysis </act> <act> wait until design is complete </act> <act> integrate design and decide where the customer feedback module should be placed </act> <act> check design and provide feedback </act> <path1><act> change and integrate design </act></path1><path2><act> integrate with overall implementation </act></path2> <act> test final website </act> <path1></path1><path2><act> provide test results </act></path2>
The process starts with <act>collect data</act>. Before<act>wait business analyst</act> until the design is complete, <act>integrate design</act>. <act>check design</act>. If the design needs adjustment , the web designer has <act>change design</act> . In case the design is OK, <act>integrate html specialist</act>. Afterwards, the tester tests the final website to make sure everything is going well. If the test is OK, the process ends. <act>provide test results</act> .; <act> collect data and conduct business analysis </act> <act> wait until design is complete </act> <act> integrate design and decide where the customer feedback module should be placed </act> <act> check design and provide feedback </act> <path1><act> change and integrate design </act></path1><path2><act> integrate with overall implementation </act></path2> <act> test final website </act> <path1></path1><path2><act> provide test results </act></path2>
The process starts with <act>collect data</act>. Before<act>wait business analyst</act> until the design is complete, <act>integrate design</act>. Afterwards, she checks the design and provides feedback. If the design needs adjustment , the web designer has <act>change design</act> . Whenever the design is found to be OK, <act>integrate html specialist</act>. <act>test final website</act> to make sure everything is going well. If the test is OK, the process ends. <act>provide test results</act> .; <act> collect data and conduct business analysis </act> <act> wait until design is complete </act> <act> integrate design and decide where the customer feedback module should be placed </act> <act> check design and provide feedback </act> <path1><act> change and integrate design </act></path1><path2><act> integrate with overall implementation </act></path2> <act> test final website </act> <path1></path1><path2><act> provide test results </act></path2>
The process starts with <act>collect data</act>. When<act>integrate design</act>, <act>wait business analyst</act>. <act>check design</act>. Whenever an adjustment of the design is required, the web designer has <act>change design</act> . If the design is OK, <act>integrate html specialist</act>. After that,<act>test final website</act> to make sure everything is going well. In case the test is OK, the process ends. <act>provide test results</act> .; <act> collect data and conduct business analysis </act> <act> integrate design and decide where the customer feedback module should be placed </act> <act> wait until design is complete </act> <act> check design and provide feedback </act> <path1><act> change and integrate design </act></path1><path2><act> integrate with overall implementation </act></path2> <act> test final website </act> <path1></path1><path2><act> provide test results </act></path2>
<act>receive invoice</act>. <act>sort invoice per client</act>. Next<act>sort invoice per vendor</act>. Once<act>attache invoice entry form</act>, <act>enter required info on invoice entry form</act>. Next, when<act>obtain missing information</act> the admin office can allocate invoice to deo. If the invoice is not completed , <act>apply red stamp on entry invoice</act>. If the invoice is considered to be complete, <act>enter info for sla</act>. Afterwards, the admin office checks the invoice compliance. If the invoice is complete , <act>allocate invoice</act> . Otherwise, if the invoice is complete, the admin office sends the invoice to experience staff .; <act> receive invoice </act> <act> sort invoice per client </act> <act> sort invoice per vendor </act> <act> attach invoice entry form to invoice </act> <act> enter required info on the invoice entry form </act> <act> allocate invoice to DEO </act> <path1><act> apply red stamp on entry invoice </act></path1><path2><act> enter info for SLA and check priority </act></path2> <act> check invoice compliance </act> <path1><act> allocate invoice to DEO </act></path1><path2><act> send invoice to experience staff </act></path2>
<act>receive invoice</act>. <act>sort invoice per client</act>. <act>sort invoice per vendor</act>. Before<act>enter required info on invoice entry form</act>, <act>attache invoice entry form</act>. Next when<act>obtain missing information</act> the admin office can allocate invoice to deo. Whenever the invoice is not completed , <act>apply red stamp on entry invoice</act>. Otherwise, the admin office enters the info for the SLA and checks the priority. Next<act>check invoice compliance</act>. If the invoice is complete , <act>allocate invoice</act> . Otherwise, if the invoice is not complete, the experience staff should process the non-compliant invoice.; <act> receive invoice </act> <act> sort invoice per client </act> <act> sort invoice per vendor </act> <act> enter required info on the invoice entry form </act> <act> attach invoice entry form to invoice </act> <act> allocate invoice to DEO </act> <path1><act> apply red stamp on entry invoice </act></path1><path2><act> enter info for SLA and check priority </act></path2> <act> check invoice compliance </act> <path1><act> allocate invoice to DEO </act></path1><path2><act> process non-compliant invoice </act></path2>
<act>receive invoice</act>. <act>sort invoice per client</act>. Next<act>sort invoice per vendor</act>. Before<act>enter required info on invoice entry form</act>, <act>attache invoice entry form</act>. When<act>obtain missing information</act> <act>allocate invoice</act>. If the invoice has high priority, <act>send message</act> . Otherwise, the admin office enters the info for the SLA and checks the priority. In the next step,<act>check invoice compliance</act>. If the invoice is complete , <act>allocate invoice</act> . Otherwise, if the invoice is not complete, the admin office calls the client and requests for information.; <act> receive invoice </act> <act> sort invoice per client </act> <act> sort invoice per vendor </act> <act> enter required info on the invoice entry form </act> <act> attach invoice entry form to invoice </act> <act> allocate invoice to DEO </act> <path1><act> send message </act></path1><path2><act> enter info for SLA and check priority </act></path2> <act> check invoice compliance </act> <path1><act> allocate invoice to DEO </act></path1><path2><act> call client and request for information </act></path2>
<act>receive invoice</act>. <act>sort invoice per client</act>. In the next step,<act>sort invoice per vendor</act>. After<act>attache invoice entry form</act>, <act>enter required info on invoice entry form</act>. In the next step,<act>check completeness of invoice</act> after<act>complete invoice</act>. Whenever the invoice is not completed , <act>apply red stamp on entry invoice</act>. If the invoice is considered to be complete, <act>enter info for sla</act>. Next<act>check invoice compliance</act>. If the invoice is complete , <act>allocate invoice</act> . If the invoice is considered to be imcomplete, <act>send postal mail requesting</act> the information to be complete.; <act> receive invoice </act> <act> sort invoice per client </act> <act> sort invoice per vendor </act> <act> attach invoice entry form to invoice </act> <act> enter required info on the invoice entry form </act> <act> check completeness of the invoice </act> <path1><act> apply red stamp on entry invoice </act></path1><path2><act> enter info for SLA and check priority </act></path2> <act> check invoice compliance </act> <path1><act> allocate invoice to DEO </act></path1><path2><act> send postal mail </act></path2>
<act>receive invoice</act>. <act>sort invoice per client</act>. After that,<act>sort invoice per vendor</act>. After<act>attache invoice entry form</act>, <act>enter required info on invoice entry form</act>. Afterwards, the office checks the completeness of the invoice after<act>complete invoice</act>. If the invoice has high priority, <act>send message</act> . If the invoice is complete, <act>enter info for sla</act>. After that,<act>check invoice compliance</act>. In case the invoice is complete , <act>allocate invoice</act> . If the invoice is considered to be imcomplete, <act>call client</act>.; <act> receive invoice </act> <act> sort invoice per client </act> <act> sort invoice per vendor </act> <act> attach invoice entry form to invoice </act> <act> enter required info on the invoice entry form </act> <act> check completeness of the invoice </act> <path1><act> send message </act></path1><path2><act> enter info for SLA and check priority </act></path2> <act> check invoice compliance </act> <path1><act> allocate invoice to DEO </act></path1><path2><act> call client and request for information </act></path2>
In a certain company an invoice process is started. Initially<act>try vendor</act> <act>locate into sap system of company</act>. If the vendor cannot be found, <act>fill new vendor master record</act> . Then if the vendor is already in the system , <act>add sap number</act>s are then entered in the sap system and the process is finished.;  <act> try to locate vendor into SAP system </act> <path1><act> fill in new Vendor Master Record </act></path1> <act> add SAP number to invoice </act>  <path1><act> sort invoices by amount </act></path1><path2><act> sort invoices by vendor </act></path2> <act> enter invoices in SAP system </act>
In a certain company an invoice process is started. Initially<act>try vendor</act> <act>locate into sap system of company</act>. In case the vendor cannot be found, <act>fill new vendor master record</act> . If the vendor is already in the system , <act>add sap number</act>s are then entered in the sap system and the process is finished.;  <act> try to locate vendor into SAP system </act> <path1><act> fill in new Vendor Master Record </act></path1> <act> add SAP number to invoice </act>  <path1><act> sort invoices by amount </act></path1><path2><act> sort invoices by vendor </act></path2> <act> enter invoices in SAP system </act>
In a certain company an invoice process is started. First<act>try vendor</act> <act>locate into sap system of company</act>. If the company is unable to find him, <act>fill new vendor master record</act> . Thereafter if the vendor is already in the system , <act>add sap number</act>s are then entered in the sap system and the process is finished.;  <act> try to locate vendor into SAP system </act> <path1><act> fill in new Vendor Master Record </act></path1> <act> add SAP number to invoice </act>  <path1><act> sort invoices by amount </act></path1><path2><act> sort invoices by vendor </act></path2> <act> enter invoices in SAP system </act>
In a certain company an invoice process is started. The process starts when<act>try vendor</act> <act>locate into sap system of company</act>. If the company is unable to find him, <act>fill new vendor master record</act> . Then if the vendor is already in the system , <act>add sap number</act>s are then entered in the sap system and the process is finished.;  <act> try to locate vendor into SAP system </act> <path1><act> fill in new Vendor Master Record </act></path1> <act> add SAP number to invoice </act>  <path1><act> sort invoices by amount </act></path1><path2><act> sort invoices by vendor </act></path2> <act> enter invoices in SAP system </act>
In a certain company an invoice process is started. First<act>try vendor</act> <act>locate into sap system of company</act>. If the company is unable to find him, <act>fill new vendor master record</act> . Next, if the vendor is already in the system , <act>add sap number</act>s are then entered in the sap system and the process is finished.;  <act> try to locate vendor into SAP system </act> <path1><act> fill in new Vendor Master Record </act></path1> <act> add SAP number to invoice </act>  <path1><act> sort invoices by amount </act></path1><path2><act> sort invoices by vendor </act></path2> <act> enter invoices in SAP system </act>
After this, <act>classify request</act>. If the invoice is considered to be urgent, the invoice has a 1-5 working days time to be done. while if the invoice is non-urgent, this Request has a maximum 24 hr window to be finished.; <act> attach request to invoice </act> <act> put request in internal outbox for new vendors </act> <act> classify request in urgent and non-urgent invoices </act> <path1></path1><path2></path2>
After this, <act>classify request</act>. If the invoice is considered to be urgent, the invoice has a 1-5 working days time to be done. If the invoice is considered to be non-urgent, this Request has a maximum 24 hr window to be finished.; <act> attach request to invoice </act> <act> put request in internal outbox for new vendors </act> <act> classify request in urgent and non-urgent invoices </act> <path1></path1><path2></path2>
After this, <act>classify request</act>. In case the invoice is considered to be urgent, the invoice has a 1-5 working days time to be done. while if the invoice is non-urgent, this Request has a maximum 24 hr window to be finished.; <act> attach request to invoice </act> <act> put request in internal outbox for new vendors </act> <act> classify request in urgent and non-urgent invoices </act> <path1></path1><path2></path2>
After this, <act>classify request</act>. Whenever the invoice is urgent, the invoice has a 1-5 working days time to be done. while if the invoice is non-urgent, this Request has a maximum 24 hr window to be finished.; <act> attach request to invoice </act> <act> put request in internal outbox for new vendors </act> <act> classify request in urgent and non-urgent invoices </act> <path1></path1><path2></path2>
After this, <act>classify request</act>. Whenever the invoice is urgent, the invoice has a 1-5 working days time to be done. while if the invoice is non-urgent, this Request has a maximum 24 hr window to be finished.; <act> attach request to invoice </act> <act> put request in internal outbox for new vendors </act> <act> classify request in urgent and non-urgent invoices </act> <path1></path1><path2></path2>
The process starts when<act>receive subsidiary order</act>. <act>prepare goods</act>. <act>prepare invoicing</act>. In case the customer is subsidiary and the subsidiary relationship is not yet modeled, so: address- management adds parent company as invoicing address. <act>create invoice</act>. Later<act>send invoice</act>.; <act> receive subsidiary order </act> <act> prepare and ship goods </act> <act> prepare invoicing </act> <path1><act> add parenting company as invoicing address </act></path1> <act> create invoice </act> <act> send invoice </act>
The process starts when<act>receive subsidiary order</act>. When<act>prepare goods for shipment</act>, <act>prepare invoicing</act>. In case the customer is subsidiary and the subsidiary relationship is not yet modeled, so: address- management adds parent company as invoicing address. <act>create invoice</act>. <act>send invoice</act>.; <act> receive subsidiary order </act> <act> prepare and ship goods </act> <act> prepare invoicing </act> <path1><act> add parenting company as invoicing address </act></path1> <act> create invoice </act> <act> send invoice </act>
The process starts when<act>receive subsidiary order</act>. When<act>prepare goods for shipment</act>, <act>prepare invoicing</act>. If the customer is subsidiary and the subsidiary relationship is not yet modeled, so: address- <act>add parent company</act>. <act>create invoice</act>. Next,<act>send invoice</act>.; <act> receive subsidiary order </act> <act> prepare and ship goods </act> <act> prepare invoicing </act> <path1><act> add parenting company as invoicing address </act></path1> <act> create invoice </act> <act> send invoice </act>
Initially<act>receive subsidiary order</act>. Before<act>prepare invoicing</act>, <act>prepare goods</act>. If the customer is subsidiary and the subsidiary relationship is not yet modeled, so: address- <act>add parent company</act>. <act>create invoice</act>. Next<act>send invoice</act>.; <act> receive subsidiary order </act> <act> prepare invoicing </act> <act> prepare and ship goods </act> <path1><act> add parenting company as invoicing address </act></path1> <act> create invoice </act> <act> send invoice </act>
First<act>receive subsidiary order</act>. When<act>prepare goods for shipment</act>, <act>prepare invoicing</act>. If the customer is subsidiary and the subsidiary relationship is not yet modeled, so: address- <act>add parent company</act>. <act>create invoice</act>. <act>send invoice</act>.; <act> receive subsidiary order </act> <act> prepare and ship goods </act> <act> prepare invoicing </act> <path1><act> add parenting company as invoicing address </act></path1> <act> create invoice </act> <act> send invoice </act>
Once<act>receive invoice</act>.<act>receive invoice</act> categorizes the invoice by staff member. After that,<act>forward invoice</act>. Before<act>put all invoices</act>, this department processes the invoice (a complex process). <act>enter data in sap system</act>. <act>review system</act> . When<act>invoice</act>, the validation office executes the big process of <act>validate invoices</act>. At the beginning of every week, <act>execute payment of validate invoice</act>, this is another big process. After<act>archive invoices</act>.; <act> receive invoice from client </act> <act> categorize invoice by staff member </act> <act> forward invoice to administration department </act>   <act> take invoices and enter all data in SAP </act> <act> review system </act> <act> forward all new invoices for validation </act> <act> validate invoices </act> <act> execute payment of every validate invoice </act> <act> archive invoices </act>
Once<act>receive invoice</act>.<act>receive invoice</act> categorizes the invoice by staff member. Next,<act>forward invoice</act>. Before<act>put all invoices</act>, this department processes the invoice (a complex process). <act>enter data in sap system</act>. <act>review system</act> . When<act>invoice</act>, the validation office executes the big process of <act>validate invoices</act>. At the beginning of every week, <act>execute payment of validate invoice</act>, this is another big process. After<act>archive invoices</act>.; <act> receive invoice from client </act> <act> categorize invoice by staff member </act> <act> forward invoice to administration department </act>   <act> take invoices and enter all data in SAP </act> <act> review system </act> <act> forward all new invoices for validation </act> <act> validate invoices </act> <act> execute payment of every validate invoice </act> <act> archive invoices </act>
Once<act>receive invoice</act>.<act>receive invoice</act> categorizes the invoice by staff member. Next,<act>forward invoice</act>. Before<act>put all invoices</act>, this department processes the invoice (a complex process). <act>enter data in sap system</act>. <act>review system</act> . Before the validation office executes the big process of <act>validate invoices</act>, <act>invoice</act>. At the beginning of every week, <act>execute payment of validate invoice</act>, this is another big process. After<act>archive invoices</act>.; <act> receive invoice from client </act> <act> categorize invoice by staff member </act> <act> forward invoice to administration department </act>   <act> take invoices and enter all data in SAP </act> <act> review system </act> <act> validate invoices </act> <act> forward all new invoices for validation </act> <act> execute payment of every validate invoice </act> <act> archive invoices </act>
Once<act>receive invoice</act>.<act>receive invoice</act> categorizes the invoice by staff member. After that,<act>forward invoice</act>. After that, this department processes the invoice (a complex process). Next<act>put all invoices</act>. <act>enter data in sap system</act>. <act>review system</act> . After that,<act>invoice</act>. Thereafter<act>execute big process of</act> <act>validate invoices</act>. At the beginning of every week, <act>execute payment of validate invoice</act>, this is another big process. After<act>archive invoices</act>.; <act> receive invoice from client </act> <act> categorize invoice by staff member </act> <act> forward invoice to administration department </act>   <act> take invoices and enter all data in SAP </act> <act> review system </act> <act> forward all new invoices for validation </act> <act> validate invoices </act> <act> execute payment of every validate invoice </act> <act> archive invoices </act>
Once<act>receive invoice</act>.<act>receive invoice</act> categorizes the invoice by staff member. After that,<act>forward invoice</act>. Before<act>put all invoices</act>, this department processes the invoice (a complex process). <act>enter data in sap system</act>. <act>review system</act> . Before the validation office executes the big process of <act>validate invoices</act>, <act>invoice</act>. At the beginning of every week, <act>execute payment of validate invoice</act>, this is another big process. After<act>archive invoices</act>.; <act> receive invoice from client </act> <act> categorize invoice by staff member </act> <act> forward invoice to administration department </act>   <act> take invoices and enter all data in SAP </act> <act> review system </act> <act> validate invoices </act> <act> forward all new invoices for validation </act> <act> execute payment of every validate invoice </act> <act> archive invoices </act>
The process starts when<act>notify the</act>. The drop-off tech checks for typos. If no typos can be found, <act>correct mistake</act>. If typos are found, <act>scour for solutions</act>. As soon as any check was passed, the issue is considered resolved.; <act> notify IS about data validation error </act> <act> check for typos </act> <path1><act> check if customer can correct the mistake </act></path1><path2><act> scour public sources for solutions </act></path2> 
First<act>notify the</act>. After that, the drop-off tech checks for typos. If this is not the case, <act>correct mistake</act>. If typos are found, <act>scour for solutions</act>. As soon as any check was passed, the issue is considered resolved.; <act> notify IS about data validation error </act> <act> check for typos </act> <path1><act> check if customer can correct the mistake </act></path1><path2><act> scour public sources for solutions </act></path2> 
The process starts when<act>notify the</act>. Later the drop-off tech checks for typos. Whenever no typos can be found, <act>correct mistake</act>. In case typos are found, <act>scour for solutions</act>. As soon as any check was passed, the issue is considered resolved.; <act> notify IS about data validation error </act> <act> check for typos </act> <path1><act> check if customer can correct the mistake </act></path1><path2><act> scour public sources for solutions </act></path2> 
First<act>notify the</act>. After that, the drop-off tech checks for typos. If no typos can be found, <act>correct mistake</act>. Otherwise, public sources are scoured for solutions. As soon as any check was passed, the issue is considered resolved.; <act> notify IS about data validation error </act> <act> check for typos </act> <path1><act> check if customer can correct the mistake </act></path1><path2><act> scour public sources for solutions </act></path2> 
The process starts when<act>notify the</act>. The drop-off tech checks for typos. If no typos can be found, <act>correct mistake</act>. <act>scour for solutions</act>. As soon as any check was passed, the issue is considered resolved.; <act> notify IS about data validation error </act> <act> check for typos </act> <path1><act> check if customer can correct the mistake </act></path1><path2><act> scour public sources for solutions </act></path2> 
A client who wants <act>create paypal account</act> first needs <act>determine desired account type</act>. A client who wants <act>create paypal account</act> should either select a personal account or a premium account. Then<act>enter login details such as email address and desired password personal details such as name and date of birth as well as telephone number and address</act>. the client needs <act>declare </act> if the client has been affiliated with any politically exposed person. <act>click create account button</act>. <act>send details</act>. Later<act>validate input fields</act>. If any fields are invalid, <act>notify client</act> . In case no fields are found to be invalid, <act>generate welcome email</act> to indicate that an account has been created.; <act> determine desired account type </act>  <act> enter login details </act> <act> declare if been affiliated with any politically exposed person </act> <act> click create button </act> <act> send details to Paypal system </act> <act> validate input details </act> <path1><act> notify client </act></path1><path2><act> generate and send welcome mail </act></path2>
A client who wants <act>create paypal account</act> first needs <act>determine desired account type</act>. A client who wants <act>create paypal account</act> should either select a personal account or a premium account. In the next step,<act>enter login details such as email address and desired password personal details such as name and date of birth as well as telephone number and address</act>. Later the client needs <act>declare </act> if the client has been affiliated with any politically exposed person. <act>click create account button</act>. <act>send details</act>. <act>validate input fields</act>. Whenever any fields are invalid, <act>notify client</act> . Whenever no fields are found to be invalid, <act>generate welcome email</act> to indicate that an account has been created.; <act> determine desired account type </act>  <act> enter login details </act> <act> declare if been affiliated with any politically exposed person </act> <act> click create button </act> <act> send details to Paypal system </act> <act> validate input details </act> <path1><act> notify client </act></path1><path2><act> generate and send welcome mail </act></path2>
A client who wants <act>create paypal account</act> first needs <act>determine desired account type</act>. A client who wants <act>create paypal account</act> should either select a personal account or a premium account. After that,<act>enter login details such as email address and desired password personal details such as name and date of birth as well as telephone number and address</act>. Then the client needs <act>declare </act> if the client has been affiliated with any politically exposed person. <act>click create account button</act>. <act>send details</act>. Thereafter<act>validate input fields</act>. Whenever there are any invalid fields, <act>notify client</act> . If no fields are found to be invalid, <act>generate welcome email</act> to indicate that an account has been created.; <act> determine desired account type </act>  <act> enter login details </act> <act> declare if been affiliated with any politically exposed person </act> <act> click create button </act> <act> send details to Paypal system </act> <act> validate input details </act> <path1><act> notify client </act></path1><path2><act> generate and send welcome mail </act></path2>
A client who wants <act>create paypal account</act> first needs <act>determine desired account type</act>. A client who wants <act>create paypal account</act> should either select a personal account or a premium account. After that,<act>enter login details such as email address and desired password personal details such as name and date of birth as well as telephone number and address</act>. Thereafter the client needs <act>declare </act> if the client has been affiliated with any politically exposed person. <act>click create account button</act>. <act>send details</act>. Afterwards, the system will validate the input fields. If any fields are invalid, <act>notify client</act> . In case no fields are found to be invalid, <act>generate welcome email</act> to indicate that an account has been created.; <act> determine desired account type </act>  <act> enter login details </act> <act> declare if been affiliated with any politically exposed person </act> <act> click create button </act> <act> send details to Paypal system </act> <act> validate input details </act> <path1><act> notify client </act></path1><path2><act> generate and send welcome mail </act></path2>
A client who wants <act>create paypal account</act> first needs <act>determine desired account type</act>. A client who wants <act>create paypal account</act> should either select a personal account or a premium account. Then<act>enter login details such as email address and desired password personal details such as name and date of birth as well as telephone number and address</act>. the client needs <act>declare </act> if the client has been affiliated with any politically exposed person. <act>click create account button</act>. <act>send details</act>. After that,<act>validate input fields</act>. If there are any invalid fields, <act>notify client</act> . <act>generate welcome email</act> to indicate that an account has been created.; <act> determine desired account type </act>  <act> enter login details </act> <act> declare if been affiliated with any politically exposed person </act> <act> click create button </act> <act> send details to Paypal system </act> <act> validate input details </act> <path1><act> notify client </act></path1><path2><act> generate and send welcome mail </act></path2>
An order to cash process starts when<act>receive customer order</act>. When<act>process order</act>, An order to cash process is send to the warehouse. After that,<act>determine parts required</act> <act>produce requested items</act>. If no parts are available in the warehouse , <act>order these</act>. Once all necessary parts are available, <act>start<act>perform production quality checks</act>. Before<act>return products</act>, <act>package products</act>. After<act>inform sales</act>, <act>sell product</act>.; <act> receive customer order </act> <act> process order </act> <act> send order to warehouse </act> <act> determine required parts </act> <path1><act> order parts </act></path1> <act> start production </act> <act> perform quality checks </act> <act> return products to warehouse </act> <act> package and label products </act> <act> inform sales </act> <act> sell product to customer </act>
An order to cash process starts when<act>receive customer order</act>. Once<act>process order</act>, An order to cash process is send to the warehouse. <act>determine parts required</act> <act>produce requested items</act>. In case any parts are not available in the warehouse, <act>order these</act>. Once all necessary parts are available, <act>start<act>perform production quality checks</act>. Before<act>return products</act>, <act>package products</act>. Before<act>sell product</act>, <act>inform sales</act>.; <act> receive customer order </act> <act> process order </act> <act> send order to warehouse </act> <act> determine required parts </act> <path1><act> order parts </act></path1> <act> start production </act> <act> perform quality checks </act> <act> return products to warehouse </act> <act> package and label products </act> <act> sell product to customer </act> <act> inform sales </act>
An order to cash process starts when<act>receive customer order</act>. Before<act>send it</act>, <act>process order</act>. Afterwards, the warehouse employees determine the parts required <act>produce requested items</act>. If any parts are not available in the warehouse, <act>order these</act>. Once all necessary parts are available, <act>start<act>perform production quality checks</act>. When<act>package products</act>, <act>return products</act>. Before<act>sell product</act>, <act>inform sales</act>.; <act> receive customer order </act> <act> send order to warehouse </act> <act> process order </act> <act> determine required parts </act> <path1><act> order parts </act></path1> <act> start production </act> <act> perform quality checks </act> <act> package and label products </act> <act> return products to warehouse </act> <act> sell product to customer </act> <act> inform sales </act>
An order to cash process starts when<act>receive customer order</act>. Next<act>process order</act>. Then<act>send order</act>. <act>determine parts required</act> <act>produce requested items</act>. If any parts are not available in the warehouse, <act>order these</act>. Once all necessary parts are available, <act>start<act>perform production quality checks</act>. Before<act>return products</act>, <act>package products</act>. Before<act>sell product</act>, <act>inform sales</act>.; <act> receive customer order </act> <act> process order </act> <act> send order to warehouse </act> <act> determine required parts </act> <path1><act> order parts </act></path1> <act> start production </act> <act> perform quality checks </act> <act> return products to warehouse </act> <act> package and label products </act> <act> sell product to customer </act> <act> inform sales </act>
An order to cash process starts when<act>receive customer order</act>. Once<act>process order</act>, An order to cash process is send to the warehouse. Thereafter<act>determine parts required</act> <act>produce requested items</act>. If any parts are not available in the warehouse, <act>order these</act>. Once all necessary parts are available, <act>start<act>perform production quality checks</act>. After<act>package products</act>, <act>return products</act>. Once<act>inform sales</act>, <act>sell product</act>.; <act> receive customer order </act> <act> process order </act> <act> send order to warehouse </act> <act> determine required parts </act> <path1><act> order parts </act></path1> <act> start production </act> <act> perform quality checks </act> <act> package and label products </act> <act> return products to warehouse </act> <act> inform sales </act> <act> sell product to customer </act>
Initially<act>indicate </act> that new clients are needed. Once<act>perform market analysis</act> , <act>prepare portfolio presentation</act>. After<act>send out offers</act> , <act>inform <act>start negotiations</act> <act>send out detailed offer</act>. If the client accepts the offer, <act>prepare contract</act> that will be signed. Otherwise, management analyzes the reason why their offer failed in order to improve in the future.; <act> indicate that new clients are needed </act> <act> perform market analysis </act> <act> prepare portfolio presentation </act> <act> send out offers </act> <act> inform management about responses </act> <act> start negotiations </act> <path1><act> prepare contract </act></path1><path2><act> analyze reason why their offer failed </act></path2>
First<act>indicate </act> that new clients are needed. Before<act>prepare portfolio presentation</act>, <act>perform market analysis</act> . Once<act>send out offers to potential clients</act> , <act>inform <act>start negotiations</act> <act>send out detailed offer</act>. If the client accepts the offer, <act>prepare contract</act> that will be signed. Otherwise, management analyzes the reason why their offer failed in order to improve in the future.; <act> indicate that new clients are needed </act> <act> prepare portfolio presentation </act> <act> perform market analysis </act> <act> send out offers </act> <act> inform management about responses </act> <act> start negotiations </act> <path1><act> prepare contract </act></path1><path2><act> analyze reason why their offer failed </act></path2>
The process starts when<act>indicate </act> that new clients are needed. Before<act>prepare portfolio presentation</act>, <act>perform market analysis</act> . Before<act>inform <act>start negotiations</act> <act>send out detailed offer</act>. If the client accepts the offer, <act>prepare contract</act> that will be signed. Otherwise, management analyzes the reason why their offer failed in order to improve in the future.; <act> indicate that new clients are needed </act> <act> prepare portfolio presentation </act> <act> perform market analysis </act> <act> inform management about responses </act> <act> send out offers </act> <act> start negotiations </act> <path1><act> prepare contract </act></path1><path2><act> analyze reason why their offer failed </act></path2>
Initially<act>indicate </act> that new clients are needed. When<act>perform market analysis</act> , <act>prepare portfolio presentation</act>. Before<act>inform <act>start negotiations</act> <act>send out detailed offer</act>. In case the client accepts the offer, <act>prepare contract</act> that will be signed. Otherwise, management analyzes the reason why their offer failed in order to improve in the future.; <act> indicate that new clients are needed </act> <act> perform market analysis </act> <act> prepare portfolio presentation </act> <act> inform management about responses </act> <act> send out offers </act> <act> start negotiations </act> <path1><act> prepare contract </act></path1><path2><act> analyze reason why their offer failed </act></path2>
First<act>indicate </act> that new clients are needed. After that,<act>perform market analysis</act> . <act>prepare portfolio presentation</act>. Next,<act>send out offers to potential clients</act> . <act>inform <act>start negotiations</act> <act>send out detailed offer</act>. If the client accepts the offer, <act>prepare contract</act> that will be signed. Otherwise, management analyzes the reason why their offer failed in order to improve in the future.; <act> indicate that new clients are needed </act> <act> perform market analysis </act> <act> prepare portfolio presentation </act> <act> send out offers </act> <act> inform management about responses </act> <act> start negotiations </act> <path1><act> prepare contract </act></path1><path2><act> analyze reason why their offer failed </act></path2>
The process starts with <act>organize informational meeting among web design team</act>. If this meeting is not successful, the process ends here. When<act>be agreement on storyboard</act>, part of the team starts <act>work on design and development of website</act>. Next the team will start <act>prepare initial draft of content</act>. If a review of the draft is needed, <act>conduct this</act>. Thereafter<act>create final version of content</act>. When the development and content have been completed. In case the site is approved, the process is completed.; <act> organize informational meeting </act> <path1></path1> <act> close agreement </act> <act> start working on design and development of website </act> <act> prepare initial draft of content </act> <path1><act> conduct review of the draft </act></path1> <act> create final version of content </act>  <path1></path1>
The process starts with <act>organize informational meeting among web design team</act>. Whenever this meeting is not successful, the process ends here. In the next step,<act>be closed</act>. In the next step, part of the team starts <act>work on design and development of website</act>. In the next step,<act>start </act> <act>prepare initial draft of content</act>. If a review of the draft is needed, <act>conduct this</act>. <act>create final version of content</act>. Next<act>build website</act>. If the site is approved, the process is completed.; <act> organize informational meeting </act> <path1></path1> <act> close agreement </act> <act> start working on design and development of website </act> <act> prepare initial draft of content </act> <path1><act> conduct review of the draft </act></path1> <act> create final version of content </act> <act> build and review website </act> <path1></path1>
The process starts with <act>organize informational meeting among web design team</act>. Whenever this meeting is not successful, the process ends here. Afterwards, an agreement on the storyboard is closed. In the next step, part of the team starts <act>work on design and development of website</act>. In the next step,<act>start </act> <act>prepare initial draft of content</act>. In case a review of the draft is needed, <act>conduct this</act>. Later<act>create final version of content</act>. When the development and content have been completed. Whenever the site is approved, the process is completed.; <act> organize informational meeting </act> <path1></path1> <act> close agreement </act> <act> start working on design and development of website </act> <act> prepare initial draft of content </act> <path1><act> conduct review of the draft </act></path1> <act> create final version of content </act>  <path1></path1>
The process starts with <act>organize informational meeting among web design team</act>. If this meeting is not successful, the process ends here. When<act>be agreement on storyboard</act>, part of the team starts <act>work on design and development of website</act>. After that,<act>start </act> <act>prepare initial draft of content</act>. In case a review of the draft is needed, <act>conduct this</act>. Then<act>create final version of content</act>. Then<act>build website</act>. Whenever the site is approved, the process is completed.; <act> organize informational meeting </act> <path1></path1> <act> close agreement </act> <act> start working on design and development of website </act> <act> prepare initial draft of content </act> <path1><act> conduct review of the draft </act></path1> <act> create final version of content </act> <act> build and review website </act> <path1></path1>
The process starts with <act>organize informational meeting among web design team</act>. Otherwise, the team starts by creating a storyboard. Later<act>be agreement on storyboard</act>. Once part of the team starts <act>work on design and development of website</act>, the team will start <act>prepare initial draft of content</act>. If a review of the draft is needed, <act>conduct this</act>. Then<act>create final version of content</act>. When the development and content have been completed. If the site is approved, the process is completed.; <act> organize informational meeting </act> <act> create storyboard </act> <act> close agreement </act> <act> start working on design and development of website </act> <act> prepare initial draft of content </act> <path1><act> conduct review of the draft </act></path1> <act> create final version of content </act>  <path1></path1>
The process starts by <act>review order</act>. Next,<act>check if all requested items are available</act>. If not all requested items are available , the staff has <act>order missing products</act>. Everything is ok, then<act>recollect products</act>. Then<act>prepare package</act>. <act>inform courier</act>. <act>inform client</act> until there are enough human resources <act>process delivery</act>. Then<act>pick up package</act>. Before<act>deliver package</act>, <act>decide best route</act> <act>deliver packages of driver</act>. This is done by the driver. Later<act>update system</act> <act>notify stakeholders</act>.; <act> review order </act> <act> check if all requested items are available </act> <path1><act> order missing products </act></path1> <path1></path1> <act> prepare package </act> <act> inform courier </act> <act> inform client about potential delay </act> <act> pick up package </act> <act> deliver package </act> <act> decide best route </act>  <act> update system </act>
The process starts by <act>review order</act>. Subsequently<act>check if all requested items are available</act>. If not all requested items are available , the staff has <act>order missing products</act>. Everything is ok, then<act>recollect products</act>. Later<act>prepare package</act>. <act>inform courier</act>. Before<act>pick up package</act>, <act>inform client</act> until there are enough human resources <act>process delivery</act>. Before<act>deliver package</act>, <act>decide best route</act> <act>deliver packages of driver</act>. This is done by the driver. <act>update system</act> <act>notify stakeholders</act>.; <act> review order </act> <act> check if all requested items are available </act> <path1><act> order missing products </act></path1> <path1></path1> <act> prepare package </act> <act> inform courier </act> <act> pick up package </act> <act> inform client about potential delay </act> <act> deliver package </act> <act> decide best route </act>  <act> update system </act>
The process starts by <act>review order</act>. <act>check if all requested items are available</act>. If something is missing, the staff has <act>inform customer</act> . Everything is ok, then<act>recollect products</act>. After that,<act>prepare package</act>. <act>inform courier</act>. <act>inform client</act> until there are enough human resources <act>process delivery</act>. Thereafter<act>pick up package</act>. When<act>decide best route</act> <act>deliver packages of driver</act>, <act>deliver package</act>. This is done by the driver. Next,<act>update system</act> <act>notify stakeholders</act>.; <act> review order </act> <act> check if all requested items are available </act> <path1><act> inform customer about potential delay </act></path1> <path1></path1> <act> prepare package </act> <act> inform courier </act> <act> inform client about potential delay </act> <act> pick up package </act> <act> decide best route </act> <act> deliver package </act>  <act> update system </act>
The process starts by <act>review order</act>. <act>check if all requested items are available</act>. In case not all requested items are available , the staff has <act>order missing products</act>. Everything is ok, then<act>recollect products</act>. <act>prepare package</act>. <act>inform courier</act>. Before<act>pick up package</act>, <act>inform client</act> until there are enough human resources <act>process delivery</act>. Subsequently<act>decide best route</act> <act>deliver packages of driver</act>. Then<act>deliver package</act>. This is done by the driver. <act>update system</act> <act>notify stakeholders</act>.; <act> review order </act> <act> check if all requested items are available </act> <path1><act> order missing products </act></path1> <path1></path1> <act> prepare package </act> <act> inform courier </act> <act> pick up package </act> <act> inform client about potential delay </act> <act> decide best route </act> <act> deliver package </act>  <act> update system </act>
The process starts by <act>review order</act>. Next<act>check if all requested items are available</act>. Whenever not all requested items are available , the staff has <act>order missing products</act>. Everything is ok, then<act>recollect products</act>. Afterwards, the staff prepares a package. <act>inform courier</act>. After<act>inform client</act> until there are enough human resources <act>process delivery</act>, <act>pick up package</act>. Next<act>decide best route</act> <act>deliver packages of driver</act>. Subsequently<act>deliver package</act>. This is done by the driver. Then<act>update system</act> <act>notify stakeholders</act>.; <act> review order </act> <act> check if all requested items are available </act> <path1><act> order missing products </act></path1> <path1></path1> <act> prepare package </act> <act> inform courier </act> <act> inform client about potential delay </act> <act> pick up package </act> <act> decide best route </act> <act> deliver package </act>  <act> update system </act>
The reimbursement process within the erics company is started as soon <act>receive reimbursement request</act>. After <act>receive request</act> a reimbursement contract is created. Next, ma. Afterwards, <act>set refund period</act> and <act>determine contract duration</act>. Once this has been completed <act>do check</act> to see if a customer is part of an organisation or only has normal subsidiaries. <act>select customer group association</act>. <act>select customers</act>. Once either of these two activities have been completed <act>set threshold</act>. Subsequently once the refund period has ended. Before<act>send credit note</act>, <act>print credit note</act> . Once<act>calculate reimbursement</act> , <act>pay reimbursement</act>. Once <act>make payment</act> and <act>send notification to customer</act>, the process ends.; <act> receive reimbursement request </act> <act> create reimbursement contract </act> <act> choose beneficiary </act> <act> set refund period and determine contract duration </act> <act> do check to see if customer is part of an organisation </act> <path1><act> select customer group assocation </act></path1><path2><act> select customers manually </act></path2> <act> set threshold </act>  <act> send credit note </act> <act> print credit note </act> <act> calculate reimbursement </act> <act> pay reimbursement </act> 
The reimbursement process within the erics company is started as soon <act>receive reimbursement request</act>. After <act>receive request</act> a reimbursement contract is created. Next ma. Afterwards, <act>set refund period</act> and <act>determine contract duration</act>. Once this has been completed <act>do check</act> to see if a customer is part of an organisation or only has normal subsidiaries. <act>select customer group association</act>. <act>select customers</act>. Once either of these two activities have been completed <act>set threshold</act>. Next once the refund period has ended. After<act>print credit note</act> , <act>send credit note</act>. Before<act>pay reimbursement</act>, <act>calculate reimbursement</act> . Once <act>make payment</act> and <act>send notification to customer</act>, the process ends.; <act> receive reimbursement request </act> <act> create reimbursement contract </act> <act> choose beneficiary </act> <act> set refund period and determine contract duration </act> <act> do check to see if customer is part of an organisation </act> <path1><act> select customer group assocation </act></path1><path2><act> select customers manually </act></path2> <act> set threshold </act>  <act> print credit note </act> <act> send credit note </act> <act> pay reimbursement </act> <act> calculate reimbursement </act> 
The reimbursement process within the erics company is started as soon <act>receive reimbursement request</act>. After <act>receive request</act> a reimbursement contract is created. Next, ma. Later <act>set refund period</act> and <act>determine contract duration</act>. Once this has been completed <act>do check</act> to see if a customer is part of an organisation or only has normal subsidiaries. <act>select customer group association</act>. <act>select customers</act>. Once either of these two activities have been completed <act>set threshold</act>. Next once the refund period has ended. Next<act>print credit note</act> . Subsequently<act>send credit note</act>. Next<act>calculate reimbursement</act> . Later<act>pay reimbursement</act>. Once <act>make payment</act> and <act>send notification to customer</act>, the process ends.; <act> receive reimbursement request </act> <act> create reimbursement contract </act> <act> choose beneficiary </act> <act> set refund period and determine contract duration </act> <act> do check to see if customer is part of an organisation </act> <path1><act> select customer group assocation </act></path1><path2><act> select customers manually </act></path2> <act> set threshold </act>  <act> print credit note </act> <act> send credit note </act> <act> calculate reimbursement </act> <act> pay reimbursement </act> 
The reimbursement process within the erics company is started as soon <act>receive reimbursement request</act>. After <act>receive request</act> a reimbursement contract is created. <act>ma</act>. Then <act>set refund period</act> and <act>determine contract duration</act>. Once this has been completed <act>do check</act> to see if a customer is part of an organisation or only has nor<act>ma</act>l subsidiaries. <act>select customer group association</act>. In the latter case, customers are selected <act>ma</act>nually. Once either of these two activities have been completed <act>set threshold</act>. Subsequently once the refund period has ended. Once<act>print credit note</act> , <act>send credit note</act>. Then<act>calculate reimbursement</act> . Thereafter<act>pay reimbursement</act>. Once the payment has been <act>ma</act>de and <act>send notification to customer</act>, the process ends.; <act> receive reimbursement request </act> <act> create reimbursement contract </act> <act> choose beneficiary </act> <act> set refund period and determine contract duration </act> <act> do check to see if customer is part of an organisation </act> <path1><act> select customer group assocation </act></path1><path2><act> select customers manually </act></path2> <act> set threshold </act>  <act> print credit note </act> <act> send credit note </act> <act> calculate reimbursement </act> <act> pay reimbursement </act> 
The reimbursement process within the erics company is started as soon <act>receive reimbursement request</act>. After <act>receive request</act> a reimbursement contract is created. Next, ma. Next, <act>set refund period</act> and <act>determine contract duration</act>. Once this has been completed <act>do check</act> to see if a customer is part of an organisation or only has normal subsidiaries. <act>select customer group association</act>. <act>select customers</act>. Once either of these two activities have been completed <act>set threshold</act>. Next once the refund period has ended. Once<act>print credit note</act> , <act>send credit note</act>. Before<act>pay reimbursement</act>, <act>calculate reimbursement</act> . Once <act>make payment</act> and <act>send notification to customer</act>, the process ends.; <act> receive reimbursement request </act> <act> create reimbursement contract </act> <act> choose beneficiary </act> <act> set refund period and determine contract duration </act> <act> do check to see if customer is part of an organisation </act> <path1><act> select customer group assocation </act></path1><path2><act> select customers manually </act></path2> <act> set threshold </act>  <act> print credit note </act> <act> send credit note </act> <act> pay reimbursement </act> <act> calculate reimbursement </act> 
The process starts with <act>receive request</act>. First, the team has <act>identify necessary parts</act>. If anything is unclear, <act>ask for more information</act>. Then the team needs <act>check if parts are available</act>. If all parts are available, <act>supply they</act>. Otherwise, the team must <act>record competition</act>> . Before<act>receive final payment</act>, <act>recollect items</act>.; <act> receive request </act> <act> identify necessary parts </act> <path1><act> ask for more information </act></path1> <act> check if all parts are available </act> <path1><act> supply parts to customer </act></path1><path2><act> record petition </act></path2> <act> receive final payment </act> <act> recollect parts </act>
The process starts with <act>receive request</act>. First, the team has <act>identify necessary parts</act>. Whenever the team has any questions about the request, <act>ask for more information</act>. Thereafter the team needs <act>check if parts are available</act>. If all parts are available, <act>supply they</act>. Otherwise, the team must record the petition . After that,<act>recollect items</act>. Subsequently<act>receive final payment</act>.; <act> receive request </act> <act> identify necessary parts </act> <path1><act> ask for more information </act></path1> <act> check if all parts are available </act> <path1><act> supply parts to customer </act></path1><path2><act> record petition </act></path2> <act> recollect parts </act> <act> receive final payment </act>
The process starts with <act>receive request</act>. First, the team has <act>identify necessary parts</act>. In case anything is unclear, <act>ask for more information</act>. After that, the team needs <act>check if parts are available</act>. If available, <act>supply they</act>. Otherwise, the team must make an order to Daisuki. Once<act>recollect items</act>, <act>receive final payment</act>.; <act> receive request </act> <act> identify necessary parts </act> <path1><act> ask for more information </act></path1> <act> check if all parts are available </act> <path1><act> supply parts to customer </act></path1><path2><act> make order </act></path2> <act> recollect parts </act> <act> receive final payment </act>
The process starts with <act>receive request</act>. First, the team has <act>identify necessary parts</act>. In case the team has any questions about the request, <act>ask for more information</act>. Next, the team needs <act>check if parts are available</act>. If available, <act>supply they</act>. Otherwise, the team must make an order to Daisuki. Before<act>receive final payment</act>, <act>recollect items</act>.; <act> receive request </act> <act> identify necessary parts </act> <path1><act> ask for more information </act></path1> <act> check if all parts are available </act> <path1><act> supply parts to customer </act></path1><path2><act> make order </act></path2> <act> receive final payment </act> <act> recollect parts </act>
The process starts with <act>receive request</act>. First, the team has <act>identify necessary parts</act>. If the team has any questions about the request, <act>ask for more information</act>. The team needs <act>check if parts are available</act>. In case available, <act>supply they</act>. Otherwise, the team must contact the customer once<act>collect parts</act>. Once<act>recollect items</act>, <act>receive final payment</act>.; <act> receive request </act> <act> identify necessary parts </act> <path1><act> ask for more information </act></path1> <act> check if all parts are available </act> <path1><act> supply parts to customer </act></path1><path2><act> contact customer </act></path2> <act> recollect parts </act> <act> receive final payment </act>
The process of buying new hardware is started as soon <act>receive request for new hardware</act>. The next step is for the it department to analyse a request for new hardware and either approve or deny a request for new hardware. If the IT department denies the request, <act>inform employee</act> and the process is ended. However, if the request is approved, the request is edited and completed. Before<act>reply to email</act> <act>send offer for requested items</act>, <act>send email</act> asking about prices. Once<act>receive offer</act>, <act>fill form</act>. Later<act>send form</act>. the management then analyses the request and decides if the request is approved or not. <act>forward offer</act> will take care of the invoice . If management rejects the request, the request can also decide <act>deny request</act> after which the process is ended. The processes is ended.; <act> receive request for new hardware </act> <act> analyse request </act> <path1><act> inform employee about denial </act></path1><path2><act> edit and complete request </act></path2> <act> send offer for the requested items </act> <act> send email asking about prices </act> <act> fill in form  </act> <act> send form to management </act> <act> analyze request </act> <path1><act> forward offer </act></path1> <act> prepare order </act> <act> find resources </act> <act> take care of invoice </act> <path1><act> decide to deny the request </act></path1> 
The process of buying new hardware is started as soon <act>receive request for new hardware</act>. The next step is for <act>send order</act>. If the management does not approve the request , the management can also decide <act>deny request</act> after which the process is ended. Then the processes is ended.; <act> receive request for new hardware </act> <act> analyse request </act> <path1><act> inform employee about denial </act></path1><path2><act> edit and complete request </act></path2> <act> send email asking about prices </act> <act> send offer for the requested items </act> <act> fill in form  </act> <act> send form to management </act> <act> analyze request </act> <path1><act> forward offer </act></path1> <act> find resources </act> <act> prepare order </act> <act> send order </act> <path1><act> decide to deny the request </act></path1> 
The process of buying new hardware is started as soon <act>receive request for new hardware</act>. The next step is for the it department to analyse a request for new hardware and either approve or deny a request for new hardware. If it is denied, <act>inform employee</act> and the process is ended. Whenever the request is approved, <act>edit request</act>. Before<act>reply to email</act> <act>send offer for requested items</act>, <act>send email</act> asking about prices. Once<act>receive offer</act>, <act>fill form</act>. Subsequently<act>send form</act>. the management then analyses the request and decides if the request is approved or not. <act>forward offer</act>. If management rejects the request, the request can also decide <act>deny request</act> after which the process is ended. Then the processes is ended.; <act> receive request for new hardware </act> <act> analyse request </act> <path1><act> inform employee about denial </act></path1><path2><act> edit and complete request </act></path2> <act> send offer for the requested items </act> <act> send email asking about prices </act> <act> fill in form  </act> <act> send form to management </act> <act> analyze request </act> <path1><act> forward offer </act></path1> <act> prepare order </act> <act> find resources </act> <act> receive hardware </act> <path1><act> decide to deny the request </act></path1> 
The process of buying new hardware is started as soon <act>receive request for new hardware</act>. The next step is for <act>send order</act>. If the request is not approved by the management, the request can also decide <act>deny request</act> after which the process is ended. Later the processes is ended.; <act> receive request for new hardware </act> <act> analyse request </act> <path1><act> inform employee about denial </act></path1><path2><act> edit and complete request </act></path2> <act> send offer for the requested items </act> <act> send email asking about prices </act> <act> fill in form  </act> <act> send form to management </act> <act> analyze request </act> <path1><act> forward offer </act></path1> <act> find resources </act> <act> prepare order </act> <act> send order </act> <path1><act> decide to deny the request </act></path1> 
The process of buying new hardware is started as soon <act>receive request for new hardware</act>. The next step is for <act>send order</act>. If the management does not approve the request , the management can also decide <act>deny request</act> after which the process is ended. The processes is ended.; <act> receive request for new hardware </act> <act> analyse request </act> <path1><act> inform employee about denial </act></path1><path2><act> edit and complete request </act></path2> <act> send email asking about prices </act> <act> send offer for the requested items </act> <act> fill in form  </act> <act> send form to management </act> <act> analyze request </act> <path1><act> forward offer </act></path1> <act> prepare order </act> <act> find resources </act> <act> send order </act> <path1><act> decide to deny the request </act></path1> 
<act>provide consultancy outsourcing and interim management services</act>. The firm considers acquisition of projects as part of those services. Acquisition can both be done for existing clients and for new clients, because The firm concerns acquisition of projects rather than clients. Acquisition is typically started at networking events by partners of the consultancy firm. <act>handle acquisition</act>, but no standard document is used. When<act>show interest in consultancy service</act>, <act>perform intake</act>. If the client is new, the firm will always try <act>establish framework contract</act> to maintain a long-term relationship as much as possible. For existing clients, a framework contract does not have to be established.;      <act> perform intake </act> <path1><act> try to establish framework contract </act></path1> 
<act>provide consultancy outsourcing and interim management services</act>. The firm considers acquisition of projects as part of those services. Acquisition can both be done for existing clients and for new clients, because The firm concerns acquisition of projects rather than clients. Acquisition is typically started at networking events by partners of the consultancy firm. <act>handle acquisition</act>, but no standard document is used. When<act>show interest in consultancy service</act>, <act>perform intake</act>. Whenever the client is new, the firm will always try <act>establish framework contract</act> to maintain a long-term relationship as much as possible. For existing clients, a framework contract does not have to be established.;      <act> perform intake </act> <path1><act> try to establish framework contract </act></path1> 
<act>provide consultancy outsourcing and interim management services</act>. The firm considers acquisition of projects as part of those services. Acquisition can both be done for existing clients and for new clients, because The firm concerns acquisition of projects rather than clients. Acquisition is typically started at networking events by partners of the consultancy firm. <act>handle acquisition</act>, but no standard document is used. When<act>show interest in consultancy service</act>, <act>perform intake</act>. If the client is new, the firm will always try <act>establish framework contract</act> to maintain a long-term relationship as much as possible. For existing clients, a framework contract does not have to be established.;      <act> perform intake </act> <path1><act> try to establish framework contract </act></path1> 
<act>provide consultancy outsourcing and interim management services</act>. The firm considers acquisition of projects as part of those services. Acquisition can both be done for existing clients and for new clients, because The firm concerns acquisition of projects rather than clients. Acquisition is typically started at networking events by partners of the consultancy firm. <act>handle acquisition</act>, but no standard document is used. When<act>show interest in consultancy service</act>, <act>perform intake</act>. If the client is new, the firm will always try <act>establish framework contract</act> to maintain a long-term relationship as much as possible. For existing clients, a framework contract does not have to be established.;      <act> perform intake </act> <path1><act> try to establish framework contract </act></path1> 
<act>provide consultancy outsourcing and interim management services</act>. The firm considers acquisition of projects as part of those services. Acquisition can both be done for existing clients and for new clients, because The firm concerns acquisition of projects rather than clients. Acquisition is typically started at networking events by partners of the consultancy firm. <act>handle acquisition</act>, but no standard document is used. When<act>show interest in consultancy service</act>, <act>perform intake</act>. Whenever the client is new, the firm will always try <act>establish framework contract</act> to maintain a long-term relationship as much as possible. For existing clients, a framework contract does not have to be established.;      <act> perform intake </act> <path1><act> try to establish framework contract </act></path1> 
As another form of relationship management, regular meetings are held with existing clients. <act>discuss organization of client</act>. This enables <act>decide whether additional work should be done to further improve organization</act>. At the same time this enables <act>bring in additional assignments</act>. <act>happen intake and regular meetings</act>, on which an inventory of the wishes of the client can be made.; <act> hold regular meetings </act> <act> discuss organization of the client </act>   <act> make inventory of the wishes </act>
As another form of relationship management, regular meetings are held with existing clients. <act>discuss organization of client</act>. This enables <act>decide whether additional work should be done to further improve organization</act>. At the same time this enables <act>bring in additional assignments</act>. <act>happen intake and regular meetings</act>, on which an inventory of the wishes of the client can be made.; <act> hold regular meetings </act> <act> discuss organization of the client </act>   <act> make inventory of the wishes </act>
As another form of relationship management, regular meetings are held with existing clients. <act>discuss organization of client</act>. This enables <act>decide whether additional work should be done to further improve organization</act>. At the same time this enables <act>bring in additional assignments</act>. <act>happen intake and regular meetings</act>, on which an inventory of the wishes of the client can be made.; <act> hold regular meetings </act> <act> discuss organization of the client </act>   <act> make inventory of the wishes </act>
As another form of relationship management, regular meetings are held with existing clients. <act>discuss organization of client</act>. This enables <act>decide whether additional work should be done to further improve organization</act>. At the same time this enables <act>bring in additional assignments</act>. <act>happen intake and regular meetings</act>, on which an inventory of the wishes of the client can be made.; <act> hold regular meetings </act> <act> discuss organization of the client </act>   <act> make inventory of the wishes </act>
As another form of relationship management, regular meetings are held with existing clients. <act>discuss organization of client</act>. This enables <act>decide whether additional work should be done to further improve organization</act>. At the same time this enables <act>bring in additional assignments</act>. <act>happen intake and regular meetings</act>, on which an inventory of the wishes of the client can be made.; <act> hold regular meetings </act> <act> discuss organization of the client </act>   <act> make inventory of the wishes </act>
<act>create project team</act> after<act>give project assignment</act>. After<act>create project team</act>, <act>be kick off meeting organized with client</act> as a means of quality control. <act>happen evaluation of project</act>. The consultancy company has a services department, which takes care of market research for the consultants, manages the leasing of cars and provides secretary services.; <act> create project team </act> <act> organize kick-off meeting </act> <act> execute project </act>  <act> hold evaluation meeting </act>  
<act>create project team</act> after<act>give project assignment</act>. After<act>create project team</act>, <act>be kick off meeting organized with client</act> as a means of quality control. <act>happen evaluation of project</act>. The consultancy company has a services department, which takes care of market research for the consultants, manages the leasing of cars and provides secretary services.; <act> create project team </act> <act> organize kick-off meeting </act> <act> execute project </act>  <act> hold evaluation meeting </act>  
<act>create project team</act> after<act>give project assignment</act>. After<act>create project team</act>, <act>be kick off meeting organized with client</act> as a means of quality control. <act>happen evaluation of project</act>. The consultancy company has a services department, which takes care of market research for the consultants, manages the leasing of cars and provides secretary services.; <act> create project team </act> <act> organize kick-off meeting </act> <act> execute project </act>  <act> hold evaluation meeting </act>  
<act>create project team</act> after<act>give project assignment</act>. After<act>create project team</act>, <act>be kick off meeting organized with client</act> as a means of quality control. <act>happen evaluation of project</act>. The consultancy company has a services department, which takes care of market research for the consultants, manages the leasing of cars and provides secretary services.; <act> create project team </act> <act> organize kick-off meeting </act> <act> execute project </act>  <act> hold evaluation meeting </act>  
<act>create project team</act> after<act>give project assignment</act>. After<act>create project team</act>, <act>be kick off meeting organized with client</act> as a means of quality control. <act>happen evaluation of project</act>. The consultancy company has a services department, which takes care of market research for the consultants, manages the leasing of cars and provides secretary services.; <act> create project team </act> <act> organize kick-off meeting </act> <act> execute project </act>  <act> hold evaluation meeting </act>  
First<act>receive purchase order</act>. The first activity that is carried out is confirming the order. After that,<act>receive shipment address</act> . Before<act>emit invoice</act> , <act>ship product</act>. After that,<act>receive payment</act> . Then<act>archive order</act>, thus completing the process..; <act> receive purchase order </act> <act> confirm order </act> <act> receive shipment address </act> <act> emit invoice </act> <act> ship product </act> <act> receive payment </act> <act> archive order </act>
First<act>receive purchase order</act>. The first activity that is carried out is confirming the order. Next<act>receive shipment address</act> . Once<act>ship product</act>, <act>be </act> . Before<act>archive order</act>, thus completing the process. , <act>receive payment</act> .; <act> receive purchase order </act> <act> confirm order </act> <act> receive shipment address </act> <act> ship product </act> <act> emit invoice </act> <act> archive order </act> <act> receive payment </act>
The process starts when<act>receive purchase order</act>. The first activity that is carried out is confirming the order. Later<act>receive shipment address</act> . <act>ship product</act>. <act>be </act> . Before<act>archive order</act>, thus completing the process. , <act>receive payment</act> .; <act> receive purchase order </act> <act> confirm order </act> <act> receive shipment address </act> <act> ship product </act> <act> emit invoice </act> <act> archive order </act> <act> receive payment </act>
Initially<act>receive purchase order</act>. The first activity that is carried out is confirming the order. <act>receive shipment address</act> . When<act>ship product</act>, <act>be </act> . Once<act>receive payment</act> , <act>archive order</act>, thus completing the process..; <act> receive purchase order </act> <act> confirm order </act> <act> receive shipment address </act> <act> ship product </act> <act> emit invoice </act> <act> receive payment </act> <act> archive order </act>
Initially<act>receive purchase order</act>. The first activity that is carried out is confirming the order. Next,<act>receive shipment address</act> . Next,<act>ship product</act>. Afterwards, the invoice is emitted . Before<act>archive order</act>, thus completing the process. , <act>receive payment</act> .; <act> receive purchase order </act> <act> confirm order </act> <act> receive shipment address </act> <act> ship product </act> <act> emit invoice </act> <act> archive order </act> <act> receive payment </act>
Initially<act>receive invoice</act>. Later an invoice needs <act>check for mismatches</act>. The check may result in either of these three options. In case there are no mismatches, <act>post invoice</act>. If there are mismatches but these can be corrected, <act>send invoice</act>. Once one of these three activities is performed <act>park invoice</act> and the process completes.; <act> receive invoice </act> <act> check invoice for mismatches </act>  <path1><act> post invoice </act></path1><path2></path2> <act> park invoice </act>
Initially<act>receive invoice</act>. Later an invoice needs <act>check for mismatches</act>. The check may result in either of these three options. If there are no mismatches, <act>post invoice</act>. If there are mismatches but these can be corrected, <act>send invoice</act>. Once one of these three activities is performed <act>park invoice</act> and the process completes.; <act> receive invoice </act> <act> check invoice for mismatches </act>  <path1><act> post invoice </act></path1><path2></path2> <act> park invoice </act>
Initially<act>receive invoice</act>. Later an invoice needs <act>check for mismatches</act>. The check may result in either of these three options. In case there are no mismatches, <act>post invoice</act>. If there are mismatches but these can be corrected, <act>send invoice</act>. Once one of these three activities is performed <act>park invoice</act> and the process completes.; <act> receive invoice </act> <act> check invoice for mismatches </act>  <path1><act> post invoice </act></path1><path2></path2> <act> park invoice </act>
Initially<act>receive invoice</act>. Afterwards, an invoice needs <act>check for mismatches</act>. The check may result in either of these three options. If there are no mismatches, <act>post invoice</act>. If there are mismatches but these can be corrected, <act>send invoice</act>. Once one of these three activities is performed <act>park invoice</act> and the process completes.; <act> receive invoice </act> <act> check invoice for mismatches </act>  <path1><act> post invoice </act></path1><path2></path2> <act> park invoice </act>
First<act>receive invoice</act>. Later an invoice needs <act>check for mismatches</act>. The check may result in either of these three options. If there are no mismatches, <act>post invoice</act>. If there are mismatches but these can be corrected, <act>send invoice</act>. Once one of these three activities is performed <act>park invoice</act> and the process completes.; <act> receive invoice </act> <act> check invoice for mismatches </act>  <path1><act> post invoice </act></path1><path2></path2> <act> park invoice </act>
The process starts when<act>approve loan application</act>. Before<act>send acceptance pack</act>, <act>be acceptance pack</act> . <act>include repayment schedule</act> which the customer needs to agree upon by <act>send signed documents</act>. <act>verify repayment agreement</act>. When<act>disagree with repayment schedule</act>, <act>cancel application</act>. If the applicant agreed, <act>approve application</act>. In either case, the process completes with <act>notify applicant</act>.; <act> approve loan application </act> <act> send acceptance pack </act> <act> prepare acceptance pack </act> <act> send signed documents back </act> <act> verify repayment agreement </act> <path1><act> cancel application </act></path1><path2><act> approve application </act></path2> <act> notify application status </act>
First<act>approve loan application</act>. Later<act>be </act> . Next<act>send acceptance pack</act>. <act>include repayment schedule</act> which the customer needs to agree upon by <act>send signed documents</act>. <act>verify repayment agreement</act>. If the applicant disagreed with the repayment schedule, <act>cancel application</act>. Whenever the applicant agreed, <act>approve application</act>. In either case, the process completes with <act>notify applicant</act>.; <act> approve loan application </act> <act> prepare acceptance pack </act> <act> send acceptance pack </act> <act> send signed documents back </act> <act> verify repayment agreement </act> <path1><act> cancel application </act></path1><path2><act> approve application </act></path2> <act> notify application status </act>
The process starts when<act>approve loan application</act>. Before<act>send acceptance pack</act>, <act>be acceptance pack</act> . <act>include repayment schedule</act> which the customer needs to agree upon by <act>send signed documents</act>. <act>verify repayment agreement</act>. When<act>disagree with repayment schedule</act>, <act>cancel application</act>. If the applicant agreed, <act>approve application</act>. In either case, the process completes with <act>notify applicant</act>.; <act> approve loan application </act> <act> send acceptance pack </act> <act> prepare acceptance pack </act> <act> send signed documents back </act> <act> verify repayment agreement </act> <path1><act> cancel application </act></path1><path2><act> approve application </act></path2> <act> notify application status </act>
First<act>approve loan application</act>. Before<act>send acceptance pack</act>, <act>be acceptance pack</act> . <act>include repayment schedule</act> which the customer needs to agree upon by <act>send signed documents</act>. <act>verify repayment agreement</act>. If the applicant disagreed with the repayment schedule, <act>cancel application</act>. If the applicant agreed, <act>approve application</act>. In either case, the process completes with <act>notify applicant</act>.; <act> approve loan application </act> <act> send acceptance pack </act> <act> prepare acceptance pack </act> <act> send signed documents back </act> <act> verify repayment agreement </act> <path1><act> cancel application </act></path1><path2><act> approve application </act></path2> <act> notify application status </act>
First<act>approve loan application</act>. Before<act>send acceptance pack</act>, <act>be acceptance pack</act> . <act>include repayment schedule</act> which the customer needs to agree upon by <act>send signed documents</act>. <act>verify repayment agreement</act>. In case the applicant disagreed with the repayment schedule, <act>cancel application</act>. If the applicant agreed, <act>approve application</act>. In either case, the process completes with <act>notify applicant</act>.; <act> approve loan application </act> <act> send acceptance pack </act> <act> prepare acceptance pack </act> <act> send signed documents back </act> <act> verify repayment agreement </act> <path1><act> cancel application </act></path1><path2><act> approve application </act></path2> <act> notify application status </act>
First<act>receive boarding pass</act>. Afterwards, passengers proceed to the security check. Here they need <act>pass personal security screening and luggage screening</act>. Next<act>proceed to departure level</act>.; <act> receive boarding pass </act> <act> proceed to security check </act> <act> pass personal and luggage screening </act> <act> proceed to departure level </act>
First<act>receive boarding pass</act>. Later<act>proceed to security check</act>. Here they need <act>pass personal security screening and luggage screening</act>. Later<act>proceed to departure level</act>.; <act> receive boarding pass </act> <act> proceed to security check </act> <act> pass personal and luggage screening </act> <act> proceed to departure level </act>
First<act>receive boarding pass</act>. <act>proceed to security check</act>. Here they need <act>pass personal security screening and luggage screening</act>. Next,<act>proceed to departure level</act>.; <act> receive boarding pass </act> <act> proceed to security check </act> <act> pass personal and luggage screening </act> <act> proceed to departure level </act>
The process starts when<act>receive boarding pass</act>. In the next step,<act>proceed to security check</act>. Here they need <act>pass personal security screening and luggage screening</act>. Afterwards, they can proceed to the departure level.; <act> receive boarding pass </act> <act> proceed to security check </act> <act> pass personal and luggage screening </act> <act> proceed to departure level </act>
Initially<act>receive boarding pass</act>. In the next step,<act>proceed to security check</act>. Here they need <act>pass personal security screening and luggage screening</act>. Thereafter<act>proceed to departure level</act>.; <act> receive boarding pass </act> <act> proceed to security check </act> <act> pass personal and luggage screening </act> <act> proceed to departure level </act>
<act>approve loan application</act> if A loan application passes two checks. The process starts when<act>assess loan risk of application</act>. This is done automatically by a system. <act>approve appraisal of property</act> . This is carried out by a property appraiser. The risk assessment requires <act>perform credit history check on applicant</act>, which is performed by a financial officer. Once<act>perform both loan risk assessment and property appraisal</act>, <act>assess eligibility of applicant</act>. If the applicant is not eligible, <act>reject application</act>. <act>send acceptance pack</act>.;  <act> assess loan risk </act>  <act> approve appraisal of the property </act>  <act> perform credit history check </act> <act> assess eligibility of the applicant </act> <path1><act> reject application </act></path1><path2><act> send acceptance pack </act></path2>
<act>approve loan application</act> if A loan application passes two checks. The process starts when<act>assess loan risk of application</act>. This is done automatically by a system. Subsequently<act>approve appraisal of property</act> . This is carried out by a property appraiser. After that,<act>require </act> <act>perform credit history check on applicant</act>, which is performed by a financial officer. Once<act>perform both loan risk assessment and property appraisal</act>, <act>assess eligibility of applicant</act>. Whenever the applicant is not eligible, <act>reject application</act>. <act>send acceptance pack</act>.;  <act> assess loan risk </act>  <act> approve appraisal of the property </act>  <act> perform credit history check </act> <act> assess eligibility of the applicant </act> <path1><act> reject application </act></path1><path2><act> send acceptance pack </act></path2>
<act>approve loan application</act> if A loan application passes two checks. First<act>assess loan risk of application</act>. This is performed by a system automatically. Next,<act>approve appraisal of property</act> . This is carried out by a property appraiser. Subsequently<act>require </act> <act>perform credit history check on applicant</act>, which is performed by a financial officer. Once<act>perform both loan risk assessment and property appraisal</act>, <act>assess eligibility of applicant</act>. If the applicant is not eligible, <act>reject application</act>. <act>send acceptance pack</act>.;  <act> assess loan risk </act>  <act> approve appraisal of the property </act>  <act> perform credit history check </act> <act> assess eligibility of the applicant </act> <path1><act> reject application </act></path1><path2><act> send acceptance pack </act></path2>
<act>approve loan application</act> if A loan application passes two checks. First<act>assess loan risk of application</act>. This is performed by a system automatically. After that,<act>approve appraisal of property</act> . This is carried out by a property appraiser. Next, the risk assessment requires <act>perform credit history check on applicant</act>, which is performed by a financial officer. Once<act>perform both loan risk assessment and property appraisal</act>, <act>assess eligibility of applicant</act>. In case the applicant is not eligible, <act>reject application</act>. <act>send acceptance pack</act>.;  <act> assess loan risk </act>  <act> approve appraisal of the property </act>  <act> perform credit history check </act> <act> assess eligibility of the applicant </act> <path1><act> reject application </act></path1><path2><act> send acceptance pack </act></path2>
<act>approve loan application</act> if A loan application passes two checks. First<act>assess loan risk of application</act>. This is done automatically by a system. After that,<act>approve appraisal of property</act> . This is carried out by a property appraiser. In the next step,<act>require next step</act> <act>perform credit history check on applicant</act>, which is performed by a financial officer. Once<act>perform both loan risk assessment and property appraisal</act>, <act>assess eligibility of applicant</act>. If the applicant is not eligible, <act>reject application</act>. <act>send acceptance pack</act>.;  <act> assess loan risk </act>  <act> approve appraisal of the property </act>  <act> perform credit history check </act> <act> assess eligibility of the applicant </act> <path1><act> reject application </act></path1><path2><act> send acceptance pack </act></path2>
A company has two warehouses that store different products: amsterdam and hamburg. First<act>receive order</act>. Then<act>distribute order</act>. If some of the relevant products are maintained in Amsterdam, a sub-order is sent there. If likewise, if some relevant products are maintained in Hamburg, a sub-order is sent there. Later <act>register order</act> and the process completes.;  <act> receive order </act> <act> distribute order </act> <path1><act> send sub-order </act></path1><path2><act> send sub-order </act></path2> <act> register order </act>
A company has two warehouses that store different products: amsterdam and hamburg. Initially<act>receive order</act>. Next,<act>distribute order</act>. If some of the relevant products are maintained in Amsterdam, a sub-order is sent there. If likewise, if some relevant products are maintained in Hamburg, a sub-order is sent there. Then <act>register order</act> and the process completes.;  <act> receive order </act> <act> distribute order </act> <path1><act> send sub-order </act></path1><path2><act> send sub-order </act></path2> <act> register order </act>
A company has two warehouses that store different products: amsterdam and hamburg. Initially<act>receive order</act>. <act>distribute order</act>. If some of the relevant products are maintained in Amsterdam, a sub-order is sent there. If likewise, if some relevant products are maintained in Hamburg, a sub-order is sent there. <act>register order</act> and the process completes.;  <act> receive order </act> <act> distribute order </act> <path1><act> send sub-order </act></path1><path2><act> send sub-order </act></path2> <act> register order </act>
A company has two warehouses that store different products: amsterdam and hamburg. The process starts when<act>receive order</act>. In the next step,<act>distribute process</act>. In case some of the relevant products are maintained in Amsterdam, a sub-order is sent there. Whenever likewise, if some relevant products are maintained in Hamburg, a sub-order is sent there. <act>register order</act> and the process completes.;  <act> receive order </act> <act> distribute order </act> <path1><act> send sub-order </act></path1><path2><act> send sub-order </act></path2> <act> register order </act>
A company has two warehouses that store different products: amsterdam and hamburg. The process starts when<act>receive order</act>. Subsequently<act>distribute process</act>. If some of the relevant products are maintained in Amsterdam, a sub-order is sent there. If likewise, if some relevant products are maintained in Hamburg, a sub-order is sent there. Next, <act>register order</act> and the process completes.;  <act> receive order </act> <act> distribute order </act> <path1><act> send sub-order </act></path1><path2><act> send sub-order </act></path2> <act> register order </act>
If the product requested is not in stock, the product requested needs to be manufactured before the order handling can continue. <act>retrieve product</act> . Initially<act>confirm order</act>. For example, a computer is used for this. Then the process continues normally.; <path1><act> manufacture product </act></path1><path2><act> retrieve product from the warehouse </act></path2> <act> confirm order </act>  
If the product requested is not in stock, the product requested needs to be manufactured before the order handling can continue. <act>retrieve product</act> . First<act>confirm order</act>. For example, a computer is used for this. The process continues normally.; <path1><act> manufacture product </act></path1><path2><act> retrieve product from the warehouse </act></path2> <act> confirm order </act>  
In case the product requested is not in stock, the product requested needs to be manufactured before the order handling can continue. <act>retrieve product requested</act> . First<act>confirm order</act>. For example, a computer is used for this. The process continues normally.; <path1><act> manufacture product </act></path1><path2><act> retrieve product from the warehouse </act></path2> <act> confirm order </act>  
If the product requested is not in stock, the product requested needs to be manufactured before the order handling can continue. <act>retrieve product</act> . First<act>confirm order</act>. This is for instance done on a computer. Thereafter the process continues normally.; <path1><act> manufacture product </act></path1><path2><act> retrieve product from the warehouse </act></path2> <act> confirm order </act>  
If the product requested is not in stock, the product requested needs to be manufactured before the order handling can continue. <act>retrieve product</act> . Initially<act>confirm order</act>. For example, a computer is used for this. Subsequently the process continues normally.; <path1><act> manufacture product </act></path1><path2><act> retrieve product from the warehouse </act></path2> <act> confirm order </act>  
To manufacture a product, the required raw materials have <act>order </act>. Ordering always takes a couple of months. Two preferred suppliers provide different types of raw material. Depending on the product to be manufactured, raw materials may be ordered from either supplier 1 or supplier 2, or from both. Once the raw materials are available, the product can be manufactured . Next<act>confirm order</act>.; <act> order required raw materials </act>    <act> manufacture product </act> <act> confirm order </act>
To manufacture a product, the required raw materials have <act>order </act>. Ordering always takes a couple of months. Two preferred suppliers provide different types of raw material. Depending on the product to be manufactured, raw materials may be ordered from either supplier 1 or supplier 2, or from both. Once the raw materials are available, the product can be manufactured . In the next step,<act>confirm order</act>.; <act> order required raw materials </act>    <act> manufacture product </act> <act> confirm order </act>
To manufacture a product, the required raw materials have <act>order </act>. Ordering always takes a couple of months. Two preferred suppliers provide different types of raw material. Depending on the product to be manufactured, raw materials may be ordered from either supplier 1 or supplier 2, or from both. Once the raw materials are available, the product can be manufactured . Then<act>confirm order</act>.; <act> order required raw materials </act>    <act> manufacture product </act> <act> confirm order </act>
To manufacture a product, the required raw materials have <act>order </act>. Ordering always takes a couple of months. Two preferred suppliers provide different types of raw material. Depending on the product to be manufactured, raw materials may be ordered from either supplier 1 or supplier 2, or from both. Once the raw materials are available, the product can be manufactured . Thereafter<act>confirm order</act>.; <act> order required raw materials </act>    <act> manufacture product </act> <act> confirm order </act>
To manufacture a product, the required raw materials have <act>order </act>. Ordering always takes a couple of months. Two preferred suppliers provide different types of raw material. Depending on the product to be manufactured, raw materials may be ordered from either supplier 1 or supplier 2, or from both. Once the raw materials are available, the product can be manufactured . Next,<act>confirm order</act>.; <act> order required raw materials </act>    <act> manufacture product </act> <act> confirm order </act>
A loan application may be coupled with a home insurance which is offered at discounted prices. The applicant may express their interest in a home insurance plan at the time of <act>submit loan application</act>. If the application is interested in a home insurance plan , <act>send home insurance quote</act>. otherwise, the loan provider sends an acceptance pack to the applicant. The process then continues by verifying the repayment agreement.;  <act> submit loan application </act> <path1><act> send home insurance quote </act></path1><path2><act> send acceptance pack </act></path2> <act> verify repayment agreement </act>
A loan application may be coupled with a home insurance which is offered at discounted prices. The applicant may express their interest in a home insurance plan at the time of <act>submit loan application</act>. If the application is interested in a home insurance plan , <act>send home insurance quote</act>. otherwise, the loan provider sends an acceptance pack to the applicant. The process then continues by verifying the repayment agreement.;  <act> submit loan application </act> <path1><act> send home insurance quote </act></path1><path2><act> send acceptance pack </act></path2> <act> verify repayment agreement </act>
A loan application may be coupled with a home insurance which is offered at discounted prices. The applicant may express their interest in a home insurance plan at the time of <act>submit loan application</act>. If the application is interested in a home insurance plan , <act>send home insurance quote</act>. otherwise, the loan provider sends an acceptance pack to the applicant. The process then continues by verifying the repayment agreement.;  <act> submit loan application </act> <path1><act> send home insurance quote </act></path1><path2><act> send acceptance pack </act></path2> <act> verify repayment agreement </act>
A loan application may be coupled with a home insurance which is offered at discounted prices. The applicant may express their interest in a home insurance plan at the time of <act>submit loan application</act>. If the application is interested in a home insurance plan , <act>send home insurance quote</act>. otherwise, the loan provider sends an acceptance pack to the applicant. The process then continues by verifying the repayment agreement.;  <act> submit loan application </act> <path1><act> send home insurance quote </act></path1><path2><act> send acceptance pack </act></path2> <act> verify repayment agreement </act>
A loan application may be coupled with a home insurance which is offered at discounted prices. The applicant may express their interest in a home insurance plan at the time of <act>submit loan application</act>. Whenever the application is interested in a home insurance plan , <act>send home insurance quote</act>. otherwise, the loan provider sends an acceptance pack to the applicant. The process then continues by verifying the repayment agreement.;  <act> submit loan application </act> <path1><act> send home insurance quote </act></path1><path2><act> send acceptance pack </act></path2> <act> verify repayment agreement </act>
The process starts when<act>receive loan application</act>. Before proceeding with its assessment, the application itself needs <act>check </act>. If the application is incomplete, <act>fill out missing information</act> . Next the process can continue.; <act> receive loan application </act> <act> check application for completeness </act> <path1><act> fill out missing information </act></path1> 
Initially<act>receive loan application</act>. Before proceeding with its assessment, the application itself needs <act>check </act>. If the application is incomplete, <act>fill out missing information</act> . Next the process can continue.; <act> receive loan application </act> <act> check application for completeness </act> <path1><act> fill out missing information </act></path1> 
The process starts when<act>receive loan application</act>. Before proceeding with its assessment, the application itself needs <act>check </act>. In case the application is incomplete, <act>fill out missing information</act> . Subsequently the process can continue.; <act> receive loan application </act> <act> check application for completeness </act> <path1><act> fill out missing information </act></path1> 
First<act>receive loan application</act>. Before proceeding with its assessment, the application itself needs <act>check </act>. Whenever the application is incomplete, <act>fill out missing information</act> . Next the process can continue.; <act> receive loan application </act> <act> check application for completeness </act> <path1><act> fill out missing information </act></path1> 
The process starts when<act>receive loan application</act>. Before proceeding with its assessment, the application itself needs <act>check </act>. In case the application is incomplete, <act>fill out missing information</act> . Subsequently the process can continue.; <act> receive loan application </act> <act> check application for completeness </act> <path1><act> fill out missing information </act></path1> 
<act>carry out order fulfillment process</act> which includes two departments: the sales department and the warehouse & distribution department. Initially<act>check purchase order received by warehouse distribution</act>. <act>carry out operation</act>. <act>complete process</act>.;  <act> check purchase order against stock </act>   <path1><act> retrieve product from warehouse </act></path1><path2><act> check raw materials availability </act></path2> <act> wait for payment </act> <act> emit invoice </act> <act> ship product </act> <act> archive order </act>
<act>carry out order fulfillment process</act> which includes two departments: the sales department and the warehouse & distribution department. Initially<act>check purchase order received by warehouse distribution</act>. <act>carry out operation</act>. <act>complete process</act>.;  <act> check purchase order against stock </act>   <path1><act> retrieve product from warehouse </act></path1><path2><act> check raw materials availability </act></path2> <act> wait for payment </act> <act> emit invoice </act> <act> ship product </act> <act> archive order </act>
<act>carry out order fulfillment process</act> which includes two departments: the sales department and the warehouse & distribution department. The process starts when<act>check purchase order received by warehouse distribution</act>. <act>carry out operation</act>. <act>complete process</act>.;  <act> check purchase order against stock </act>   <path1><act> retrieve product from warehouse </act></path1><path2><act> check raw materials availability </act></path2> <act> emit invoice </act> <act> wait for payment </act> <act> ship product </act> <act> archive order </act>
<act>carry out order fulfillment process</act> which includes two departments: the sales department and the warehouse & distribution department. First<act>check purchase order received by warehouse distribution</act>. <act>carry out operation</act>. <act>complete process</act>.;  <act> check purchase order against stock </act>   <path1><act> retrieve product from warehouse </act></path1><path2><act> check raw materials availability </act></path2> <act> emit invoice </act> <act> wait for payment </act> <act> ship product </act> <act> archive order </act>
<act>carry out order fulfillment process</act> which includes two departments: the sales department and the warehouse & distribution department. First<act>check purchase order received by warehouse distribution</act>. <act>carry out operation</act>. <act>complete process</act>.;  <act> check purchase order against stock </act>   <act> emit invoice </act> <act> confirm order </act> <act> wait for payment </act> <act> ship product </act> <act> archive order </act>
The process for <act>assess loan applications</act> is executed by four roles within the loan provider: a financial officer, a property appraiser and an insurance sales representative. All other activities are performed by the loan officer who is the main point of contact with the applicant. First<act>take care</act> <act>check credit history of applicant</act>. Before<act>send home insurance quote</act> if this is required, <act>be ithe property appraiser</act> appraising the property.;   <act> check credit history </act> <act> send home insurance quote </act> <act> appraise property </act>
The process for <act>assess loan applications</act> is executed by four roles within the loan provider: a financial officer, a property appraiser and an insurance sales representative. All other activities are performed by the loan officer who is the main point of contact with the applicant. First<act>take care</act> <act>check credit history of applicant</act>. Before<act>send home insurance quote</act> if this is required, <act>be ithe property appraiser</act> appraising the property.;   <act> check credit history </act> <act> send home insurance quote </act> <act> appraise property </act>
The process for <act>assess loan applications</act> is executed by four roles within the loan provider: a financial officer, a property appraiser and an insurance sales representative. All other activities are performed by the loan officer who is the main point of contact with the applicant. Initially<act>take care</act> <act>check credit history of applicant</act>. Before<act>send home insurance quote</act> if this is required, <act>be ithe property appraiser</act> appraising the property.;   <act> check credit history </act> <act> send home insurance quote </act> <act> appraise property </act>
The process for <act>assess loan applications</act> is executed by four roles within the loan provider: a financial officer, a property appraiser and an insurance sales representative. All other activities are performed by the loan officer who is the main point of contact with the applicant. The process starts when the financial officer takes care of <act>check credit history of applicant</act>. After<act>be ithe property appraiser</act> appraising the property, <act>send home insurance quote</act> if this is required.;   <act> check credit history </act> <act> appraise property </act> <act> send home insurance quote </act>
The process for <act>assess loan applications</act> is executed by four roles within the loan provider: a financial officer, a property appraiser and an insurance sales representative. All other activities are performed by the loan officer who is the main point of contact with the applicant. First<act>take care</act> <act>check credit history of applicant</act>. Before<act>send home insurance quote</act> if this is required, <act>be ithe property appraiser</act> appraising the property.;   <act> check credit history </act> <act> send home insurance quote </act> <act> appraise property </act>
The process for handling downpayments starts when<act>approve request for payment</act>. The process for handling downpayments involves <act>enter downpayment request</act>. Then<act>pay request</act> . Before<act>clear vendor line items</act>, <act>emit direct invoice</act>. <act>result clearing of vendor line items</act>. <act>process arrears</act>. <act>pay remaining balance</act>. For example, during a holiday.; <act> approve request for payment </act> <act> enter request into the system </act> <act> pay request </act> <act> clear vendor line items </act> <act> emit direct invoice </act>  <path1><act> process arrears </act></path1><path2><act> pay remaining balance </act></path2> 
The process for handling downpayments starts when<act>approve request for payment</act>. The process for handling downpayments involves <act>enter downpayment request</act>. Then<act>pay request</act> . Before<act>clear vendor line items</act>, <act>emit direct invoice</act>. <act>result clearing of vendor line items</act>. <act>process arrears</act>. <act>pay remaining balance</act>. For instance, during a holiday.; <act> approve request for payment </act> <act> enter request into the system </act> <act> pay request </act> <act> clear vendor line items </act> <act> emit direct invoice </act>  <path1><act> process arrears </act></path1><path2><act> pay remaining balance </act></path2> 
The process for handling downpayments starts when<act>approve request for payment</act>. The process for handling downpayments involves <act>enter downpayment request</act>. Later<act>pay request</act> . Before<act>clear vendor line items</act>, <act>emit direct invoice</act>. <act>result clearing of vendor line items</act>. <act>process arrears</act>. <act>pay remaining balance</act>. For example, during a holiday.; <act> approve request for payment </act> <act> enter request into the system </act> <act> pay request </act> <act> clear vendor line items </act> <act> emit direct invoice </act>  <path1><act> process arrears </act></path1><path2><act> pay remaining balance </act></path2> 
The process for handling downpayments starts when<act>approve request for payment</act>. The process for handling downpayments involves <act>enter downpayment request</act>. Next,<act>pay request</act> . After<act>emit direct invoice</act>, <act>clear vendor line items</act>. <act>result clearing of vendor line items</act>. <act>process arrears</act>. <act>pay remaining balance</act>. For instance, during a holiday.; <act> approve request for payment </act> <act> enter request into the system </act> <act> pay request </act> <act> emit direct invoice </act> <act> clear vendor line items </act>  <path1><act> process arrears </act></path1><path2><act> pay remaining balance </act></path2> 
The process for handling downpayments starts when<act>approve request for payment</act>. The process for handling downpayments involves <act>enter downpayment request</act>. Then<act>pay request</act> . Before<act>clear vendor line items</act>, <act>emit direct invoice</act>. <act>result clearing of vendor line items</act>. <act>process arrears</act>. <act>pay remaining balance</act>. For example, during a holiday.; <act> approve request for payment </act> <act> enter request into the system </act> <act> pay request </act> <act> clear vendor line items </act> <act> emit direct invoice </act>  <path1><act> process arrears </act></path1><path2><act> pay remaining balance </act></path2> 
The process starts when<act>receive new credit request</act>. After that,<act>assess risk</act>. In case the risk is above a threshold, an advanced risk assessment needs <act>carry out </act>. otherwise, a simple risk assessment is carried out. Once the assessment has been completed, <act>notify customer</act> . Thereafter<act>organize disbursement</act>. For simplicity, assume that the result of an assessment is always positive.; <act> receive credit request </act> <act> assess risk </act> <path1><act> carry out advanced risk assessment </act></path1><path2><act> carry out simple risk assessment </act></path2> <act> notify customer </act> <act> organize disbursement </act> 
The process starts when<act>receive new credit request</act>. <act>assess risk</act>. If the risk is above a threshold, an advanced risk assessment needs <act>carry out </act>. otherwise, a simple risk assessment is carried out. Once the assessment has been completed, <act>notify customer</act> . Thereafter<act>organize disbursement</act>. For simplicity, assume that the result of an assessment is always positive.; <act> receive credit request </act> <act> assess risk </act> <path1><act> carry out advanced risk assessment </act></path1><path2><act> carry out simple risk assessment </act></path2> <act> notify customer </act> <act> organize disbursement </act> 
First<act>receive new credit request</act>. <act>assess risk</act>. If the risk is above a threshold, an advanced risk assessment needs <act>carry out </act>. otherwise, a simple risk assessment is carried out. Once the assessment has been completed, <act>notify customer</act> . Next<act>organize disbursement</act>. For simplicity, assume that the result of an assessment is always positive.; <act> receive credit request </act> <act> assess risk </act> <path1><act> carry out advanced risk assessment </act></path1><path2><act> carry out simple risk assessment </act></path2> <act> notify customer </act> <act> organize disbursement </act> 
The process starts when<act>receive new credit request</act>. Thereafter<act>assess risk</act>. If the risk is above a threshold, an advanced risk assessment needs <act>carry out </act>. otherwise, a simple risk assessment is carried out. Once the assessment has been completed, <act>notify customer</act> . Thereafter<act>organize disbursement</act>. For simplicity, assume that the result of an assessment is always positive.; <act> receive credit request </act> <act> assess risk </act> <path1><act> carry out advanced risk assessment </act></path1><path2><act> carry out simple risk assessment </act></path2> <act> notify customer </act> <act> organize disbursement </act> 
The process starts when<act>receive new credit request</act>. After that,<act>assess risk</act>. Whenever the risk is above a threshold, an advanced risk assessment needs <act>carry out </act>. otherwise, a simple risk assessment is carried out. Once the assessment has been completed, <act>notify customer</act> . After that,<act>organize disbursement</act>. For simplicity, assume that the result of an assessment is always positive.; <act> receive credit request </act> <act> assess risk </act> <path1><act> carry out advanced risk assessment </act></path1><path2><act> carry out simple risk assessment </act></path2> <act> notify customer </act> <act> organize disbursement </act> 
First<act>evict tenant</act>.; <act> evict tenant </act>
The process starts when<act>evict tenant</act>.; <act> evict tenant </act>
The process starts when<act>evict tenant</act>.; <act> evict tenant </act>
First<act>evict tenant</act>.; <act> evict tenant </act>
The process starts when<act>evict tenant</act>.; <act> evict tenant </act>
The process starts when a process needs <act>start </act> in order to hold a hearing . This is done <act>assess amount of compensation</act> <act>owe owner of premises</act>. This process starts when<act>receive request for compensation</act>. In the next step,<act>retrieve file for particular premises</act> . Thereafter<act>thereafter</act> that both the request is acceptable for filing, and compliant with the description of the premises on file. Setting a hearing date <act>incur fees</act>. It may be <act>pay fees</act>, in which case <act>allocate hearing date</act> and the process completes. It may be that additional fees are required, but <act>pay fees</act>. , <act>proceed </act> allocating the hearing date.; <act> hold hearing </act>  <act> receive request </act> <act> retrieve file </act> <act> check request </act>  <path1><act> allocate hearing date </act></path1><path2><act> allocate hearing date </act></path2>
First a process needs <act>start </act> in order to hold a hearing . This is done <act>assess amount of compensation</act> <act>owe owner of premises</act>. This process starts when<act>receive request for compensation</act>. Afterwards, the cashier retrieves the file for those particular premises . <act>check</act> that both the request is acceptable for filing, and compliant with the description of the premises on file. Setting a hearing date <act>incur fees</act>. It may be <act>pay fees</act>, in which case <act>allocate hearing date</act> and the process completes. It may be that additional fees are required, but <act>pay fees</act>. , <act>generate receipt for additional fees</act> .; <act> hold hearing </act>  <act> receive request </act> <act> retrieve file </act> <act> check request </act>  <path1><act> allocate hearing date </act></path1><path2><act> generate receipt </act></path2>
First a process needs <act>start </act> in order to hold a hearing . This is done <act>assess amount of compensation</act> <act>owe owner of premises</act>. This process starts when<act>receive request for compensation</act>. <act>retrieve file for particular premises</act> . Next,<act>next</act> that both the request is acceptable for filing, and compliant with the description of the premises on file. Setting a hearing date <act>incur fees</act>. It may be <act>pay fees</act>, in which case <act>allocate hearing date</act> and the process completes. It may be that additional fees are required, but <act>pay fees</act>. , <act>generate receipt for additional fees</act> .; <act> hold hearing </act>  <act> receive request </act> <act> retrieve file </act> <act> check request </act>  <path1><act> allocate hearing date </act></path1><path2><act> generate receipt </act></path2>
The process starts when a process needs <act>start </act> in order to hold a hearing . This is done <act>assess amount of compensation</act> <act>owe owner of premises</act>. This process starts when<act>receive request for compensation</act>. Thereafter<act>retrieve file</act> . Next,<act>next</act> that both the request is acceptable for filing, and compliant with the description of the premises on file. Setting a hearing date <act>incur fees</act>. It may be <act>pay fees</act>, in which case <act>allocate hearing date</act> and the process completes. It may be that additional fees are required, but <act>pay fees</act>. , <act>proceed </act> allocating the hearing date.; <act> hold hearing </act>  <act> receive request </act> <act> retrieve file </act> <act> check request </act>  <path1><act> allocate hearing date </act></path1><path2><act> allocate hearing date </act></path2>
The process starts when a process needs <act>start </act> in order to hold a hearing . This is done <act>assess amount of compensation</act> <act>owe owner of premises</act>. This process starts when<act>receive request for compensation</act>. In the next step,<act>retrieve file for particular premises</act> . Next,<act>next</act> that both the request is acceptable for filing, and compliant with the description of the premises on file. Setting a hearing date <act>incur fees</act>. It may be <act>pay fees</act>, in which case <act>allocate hearing date</act> and the process completes. It may be that additional fees are required, but <act>pay fees</act>. , <act>generate receipt for additional fees</act> .; <act> hold hearing </act>  <act> receive request </act> <act> retrieve file </act> <act> check request </act>  <path1><act> allocate hearing date </act></path1><path2><act> generate receipt </act></path2>
The motor claim handling process starts when<act>submit claim</act>. After<act>check documents</act> , <act>register claim</act>. Once<act>pick up claim</act> , <act>perform assessment</act>. Whenever the assessment is positive, <act>schedule payment</act> . otherwise, the claim is rejected.; <act> submit claim </act> <act> check upon completeness </act> <act> register claim </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> schedule payment </act></path1><path2><act> reject claim </act></path2>
The motor claim handling process starts when<act>submit claim</act>. Before<act>register claim</act>, <act>check documents</act> . Before<act>perform assessment</act>, <act>pick up claim</act> . In case the assessment is positive, <act>schedule payment</act> . otherwise, the claim is rejected.; <act> submit claim </act> <act> register claim </act> <act> check upon completeness </act> <act> perform assessment </act> <act> pick up claim </act> <path1><act> schedule payment </act></path1><path2><act> reject claim </act></path2>
The motor claim handling process starts when<act>submit claim</act>. After that,<act>check documents</act> . Thereafter<act>register claim</act>. When<act>pick up claim</act> , <act>perform assessment</act>. If the assessment is positive, <act>schedule payment</act> . otherwise, the claim is rejected.; <act> submit claim </act> <act> check upon completeness </act> <act> register claim </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> schedule payment </act></path1><path2><act> reject claim </act></path2>
The motor claim handling process starts when<act>submit claim</act>. When<act>check documents</act> , <act>register claim</act>. After<act>pick up claim</act> , <act>perform assessment</act>. If the assessment is positive, <act>schedule payment</act> . otherwise, the claim is rejected.; <act> submit claim </act> <act> check upon completeness </act> <act> register claim </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> schedule payment </act></path1><path2><act> reject claim </act></path2>
The motor claim handling process starts when<act>submit claim</act>. Then<act>check documents</act> . Subsequently<act>register claim</act>. Thereafter<act>pick up claim</act> . After that,<act>perform assessment</act>. Whenever the assessment is positive, <act>schedule payment</act> . otherwise, the claim is rejected.; <act> submit claim </act> <act> check upon completeness </act> <act> register claim </act> <act> pick up claim </act> <act> perform assessment </act> <path1><act> schedule payment </act></path1><path2><act> reject claim </act></path2>
First<act>receive claim</act>. Afterwards, a claims officer first checks if the claimant is insured. Whenever not, <act>send automatic notification</act> . otherwise, a senior claims officer evaluates the severity of the claim. <act>base relevant forms are sent to claimant</act>, <act>use sap system</act>.; <act> receive claim </act> <act> check if claimant is insured </act> <path1><act> send notification </act></path1><path2><act> evaluate severity </act></path2> <act> send forms </act>
Initially<act>receive claim</act>. Later<act>insure claimant</act>. <act>send automatic notification</act> . otherwise, a senior claims officer evaluates the severity of the claim. <act>base relevant forms are sent to claimant</act>, <act>use sap system</act>.; <act> receive claim </act> <act> check if claimant is insured </act> <path1><act> send notification </act></path1><path2><act> evaluate severity </act></path2> <act> send forms </act>
Initially<act>receive claim</act>. Afterwards, a claims officer first checks if the claimant is insured. If not, an SAP system sends an automatic notification . otherwise, a senior claims officer evaluates the severity of the claim. <act>base relevant forms are sent to claimant</act>, <act>use sap system</act>.; <act> receive claim </act> <act> check if claimant is insured </act> <path1><act> send notification </act></path1><path2><act> evaluate severity </act></path2> <act> send forms </act>
Initially<act>receive claim</act>. In the next step,<act>insure claimant</act>. <act>send automatic notification</act> . otherwise, a senior claims officer evaluates the severity of the claim. <act>base relevant forms are sent to claimant</act>, <act>use sap system</act>.; <act> receive claim </act> <act> check if claimant is insured </act> <path1><act> send notification </act></path1><path2><act> evaluate severity </act></path2> <act> send forms </act>
The process starts when<act>receive claim</act>. Subsequently<act>insure claimant</act>. If not, an SAP system sends an automatic notification . otherwise, a senior claims officer evaluates the severity of the claim. <act>base relevant forms are sent to claimant</act>, <act>use sap system</act>.; <act> receive claim </act> <act> check if claimant is insured </act> <path1><act> send notification </act></path1><path2><act> evaluate severity </act></path2> <act> send forms </act>
In a procurement process, a quote is <act>obtain from preferred suppliers</act>. When<act>receive quotes</act>, <act>evaluate quotes</act>. <act>select best quote</act>. A corresponding purchase order is then placed.; <act> obtain quotes </act> <act> receive quotes </act> <act> evaluate quotes </act> <act> select best quote </act> <act> place purchase order </act>
In a procurement process, a quote is <act>obtain from preferred suppliers</act>. Before<act>evaluate quotes</act>, <act>receive quotes</act>. Later<act>select best quote</act>. A corresponding purchase order is then placed.; <act> obtain quotes </act> <act> evaluate quotes </act> <act> receive quotes </act> <act> select best quote </act> <act> place purchase order </act>
In a procurement process, a quote is <act>obtain from preferred suppliers</act>. Before<act>evaluate quotes</act>, <act>receive quotes</act>. Afterwards, the best quote is selected. A corresponding purchase order is then placed.; <act> obtain quotes </act> <act> evaluate quotes </act> <act> receive quotes </act> <act> select best quote </act> <act> place purchase order </act>
In a procurement process, a quote is <act>obtain from preferred suppliers</act>. Before<act>evaluate quotes</act>, <act>receive quotes</act>. <act>select best quote</act>. A corresponding purchase order is then placed.; <act> obtain quotes </act> <act> evaluate quotes </act> <act> receive quotes </act> <act> select best quote </act> <act> place purchase order </act>
In a procurement process, a quote is <act>obtain from preferred suppliers</act>. Before<act>evaluate quotes</act>, <act>receive quotes</act>. Next<act>select best quote</act>. A corresponding purchase order is then placed.; <act> obtain quotes </act> <act> evaluate quotes </act> <act> receive quotes </act> <act> select best quote </act> <act> place purchase order </act>
After<act>seek statement</act> that were present, in order to lodge the insurance claim. Before<act>lodge claim</act> <act>wait for other statements</act>, the first two statements are received.; <act> seek statement </act> <act> lodge claim </act> <act> receive statements </act>
After<act>seek statement</act> that were present, in order to lodge the insurance claim. Before<act>lodge claim</act> <act>wait for other statements</act>, the first two statements are received.; <act> seek statement </act> <act> lodge claim </act> <act> receive statements </act>
After<act>seek statement</act> that were present, in order to lodge the insurance claim. Once the first two statements are received, <act>lodge claim</act> <act>wait for other statements</act>.; <act> seek statement </act> <act> receive statements </act> <act> lodge claim </act>
After<act>seek statement</act> that were present, in order to lodge the insurance claim. Once the first two statements are received, <act>lodge claim</act> <act>wait for other statements</act>.; <act> seek statement </act> <act> receive statements </act> <act> lodge claim </act>
After<act>seek statement</act> that were present, in order to lodge the insurance claim. Before<act>lodge claim</act> <act>wait for other statements</act>, the first two statements are received.; <act> seek statement </act> <act> lodge claim </act> <act> receive statements </act>
A typical army recruitment process starts by <act>shortlist applications of candidates</act>. Then those people are then called to sit the following tests: drug and alcohol, eye,<act>test blood urine and weight</act>. Moreover, it may be required for some candidates to repeat some of these tests multiple times <act>get correct assessment</act>. For example the blood test may need to be repeated . Whenever<act>ask candidates</act> <act>sit mental exam and physical exam</act>, <act>interview candidates</act>. Whenever the candidate passes these two exams and performs well in the interview , <act>recruit candidate</act>.; <act> shortlist applications </act> <act> call people </act>    <path1><act> perform blood test </act></path1> <act> sit mental and physical exam </act> <act> interview candidates </act> <path1><act> recruit candidate </act></path1>
A typical army recruitment process starts by <act>shortlist applications of candidates</act>. Thereafter those people are then called to sit the following tests: drug and alcohol, eye,<act>test blood urine and weight</act>. Moreover, it may be required for some candidates to repeat some of these tests multiple times <act>get correct assessment</act>. For example the blood test may need to be repeated . If <act>ask candidates</act> <act>sit mental exam and physical exam</act>. Whenever the candidate passes these two exams and performs well in the interview , <act>recruit candidate</act>.; <act> shortlist applications </act> <act> call people </act>    <path1><act> perform blood test </act></path1> <act> interview candidates </act> <act> sit mental and physical exam </act> <path1><act> recruit candidate </act></path1>
A typical army recruitment process starts by <act>shortlist applications of candidates</act>. Those people are then called to sit the following tests: drug and alcohol, eye,<act>test blood urine and weight</act>. Moreover, it may be required for some candidates to repeat some of these tests multiple times <act>get correct assessment</act>. For example the blood test may need to be repeated . If<act>ask candidates</act> <act>sit mental exam and physical exam</act>, <act>interview candidates</act>. If the candidate passes these two exams and performs well in the interview , <act>recruit candidate</act>.; <act> shortlist applications </act> <act> call people </act>    <path1><act> perform blood test </act></path1> <act> sit mental and physical exam </act> <act> interview candidates </act> <path1><act> recruit candidate </act></path1>
A typical army recruitment process starts by <act>shortlist applications of candidates</act>. Next, those people are then called to sit the following tests: drug and alcohol, eye,<act>test blood urine and weight</act>. Moreover, it may be required for some candidates to repeat some of these tests multiple times <act>get correct assessment</act>. For example the blood test may need to be repeated . In case<act>ask candidates</act> <act>sit mental exam and physical exam</act>, <act>interview candidates</act>. If the candidate passes these two exams and performs well in the interview , <act>recruit candidate</act>.; <act> shortlist applications </act> <act> call people </act>    <path1><act> perform blood test </act></path1> <act> sit mental and physical exam </act> <act> interview candidates </act> <path1><act> recruit candidate </act></path1>
A typical army recruitment process starts by <act>shortlist applications of candidates</act>. Next those people are then called to sit the following tests: drug and alcohol, eye,<act>test blood urine and weight</act>. Moreover, it may be required for some candidates to repeat some of these tests multiple times <act>get correct assessment</act>. For example the blood test may need to be repeated . If <act>ask candidates</act> <act>sit mental exam and physical exam</act>. If the candidate passes these two exams and performs well in the interview , <act>recruit candidate</act>.; <act> shortlist applications </act> <act> call people </act>    <path1><act> perform blood test </act></path1> <act> interview candidates </act> <act> sit mental and physical exam </act> <path1><act> recruit candidate </act></path1>
In a small claims tribunal, callovers occur once a month, <act>set down matter</act>. <act>start </act>. <act>contact involved parties</act> to determine if they are all ready to go to trial. If this is the case, <act>set callover</act>. <act>defer callover</act>. When on the callover day, <act>be </act> , <act>hold callover</act>.;  <act> prepare callover list </act> <act> contact involved parties </act> <path1><act> set callover </act></path1><path2><act> defer callover to next available slot </act></path2> <act> prepare callover material </act> <act> hold callover </act>
In a small claims tribunal, callovers occur once a month, <act>set down matter</act>. <act>start </act>. <act>contact involved parties</act> to determine if they are all ready to go to trial. If this is the case, <act>set callover</act>. <act>defer callover</act>. Before<act>hold callover</act>, <act>be </act> .;  <act> prepare callover list </act> <act> contact involved parties </act> <path1><act> set callover </act></path1><path2><act> defer callover to next available slot </act></path2> <act> hold callover </act> <act> prepare callover material </act>
In a small claims tribunal, callovers occur once a month, <act>set down matter</act>. <act>start </act>. <act>contact involved parties</act> to determine if they are all ready to go to trial. If this is the case, <act>set callover</act>. <act>defer callover</act>. Afterwards, on the callover day, the callover material is prepared . <act>hold callover</act>.;  <act> prepare callover list </act> <act> contact involved parties </act> <path1><act> set callover </act></path1><path2><act> defer callover to next available slot </act></path2> <act> prepare callover material </act> <act> hold callover </act>
In a small claims tribunal, callovers occur once a month, <act>set down matter</act>. <act>start </act>. <act>contact involved parties</act> to determine if they are all ready to go to trial. If this is the case, <act>set callover</act>. <act>defer callover</act>. Before<act>hold callover</act>, <act>be </act> .;  <act> prepare callover list </act> <act> contact involved parties </act> <path1><act> set callover </act></path1><path2><act> defer callover to next available slot </act></path2> <act> hold callover </act> <act> prepare callover material </act>
In a small claims tribunal, callovers occur once a month, <act>set down matter</act>. <act>start </act>. <act>contact involved parties</act> to determine if they are all ready to go to trial. If this is the case, <act>set callover</act>. <act>defer callover</act>. After on the callover day, <act>be </act> , <act>hold callover</act>.;  <act> prepare callover list </act> <act> contact involved parties </act> <path1><act> set callover </act></path1><path2><act> defer callover to next available slot </act></path2> <act> prepare callover material </act> <act> hold callover </act>
The process starts when the isp sends an invoice by email to the customer on the first working day of each month (day 1). On day 7, the customer has the full outstanding amount automatically debited from their bank account. If an automatic transaction fails for any reason, <act>notify customer</act>. If the customer fails again, <act>charge late fee</act>. <act>attempt automatic payment</act>. Before<act>receive payment</act>, on day 14, the internet service is suspended . If on day 30 the payment is still outstanding, <act>apply disconnection fee</act>.; <act> send invoice </act> <act> debit outstanding amount </act> <path1><act> notify customer </act></path1> <path1><act> charge late fee </act></path1>  <act> receive payment </act> <act> suspend internet service </act> <path1><act> apply disconnection fee </act></path1>
Initially the isp sends an invoice by email to the customer on the first working day of each month (day 1). On day 7, the customer has the full outstanding amount automatically debited from their bank account. In case an automatic transaction fails for any reason, <act>notify customer</act>. Whenever the customer fails again, <act>charge late fee</act>. <act>attempt automatic payment</act>. When on day 14, <act>suspend internet service</act> , <act>receive payment</act>. If on day 30 the payment is still outstanding, a debt-recovery procedure is then started.; <act> send invoice </act> <act> debit outstanding amount </act> <path1><act> notify customer </act></path1> <path1><act> charge late fee </act></path1>  <act> suspend internet service </act> <act> receive payment </act> <path1><act> start deb-recovery procedure </act></path1>
Initially the isp sends an invoice by email to the customer on the first working day of each month (day 1). On day 7, the customer has the full outstanding amount automatically debited from their bank account. In case an automatic transaction fails for any reason, <act>notify customer</act>. In case the customer fails again, <act>charge late fee</act>. <act>attempt automatic payment</act>. Before<act>receive payment</act>, on day 14, the internet service is suspended . If on day 30 the payment is still outstanding, a debt-recovery procedure is then started.; <act> send invoice </act> <act> debit outstanding amount </act> <path1><act> notify customer </act></path1> <path1><act> charge late fee </act></path1>  <act> receive payment </act> <act> suspend internet service </act> <path1><act> start deb-recovery procedure </act></path1>
First the isp sends an invoice by email to the customer on the first working day of each month (day 1). On day 7, the customer has the full outstanding amount automatically debited from their bank account. If an automatic transaction fails for any reason, <act>notify customer</act>. If the customer fails again, <act>charge late fee</act>. <act>attempt automatic payment</act>. When on day 14, <act>suspend internet service</act> , <act>receive payment</act>. If on day 30 the payment is still outstanding, <act>be account</act> .; <act> send invoice </act> <act> debit outstanding amount </act> <path1><act> notify customer </act></path1> <path1><act> charge late fee </act></path1>  <act> suspend internet service </act> <act> receive payment </act> <path1><act> close account </act></path1>
First the isp sends an invoice by email to the customer on the first working day of each month (day 1). On day 7, the customer has the full outstanding amount automatically debited from their bank account. In case an automatic transaction fails for any reason, <act>notify customer</act>. If the customer fails again, <act>charge late fee</act>. <act>attempt automatic payment</act>. Once on day 14, <act>suspend internet service</act> , <act>receive payment</act>. If on day 30 the payment is still outstanding, <act>apply disconnection fee</act>.; <act> send invoice </act> <act> debit outstanding amount </act> <path1><act> notify customer </act></path1> <path1><act> charge late fee </act></path1>  <act> suspend internet service </act> <act> receive payment </act> <path1><act> apply disconnection fee </act></path1>
<act>submit purchase order</act>. The procurement system of the restaurant expects <act>receive either po response or error message</act>. However, The procurement system of the restaurant may also happen that no response is received at all due to system errors or due to delays in <act>handle po</act>. When<act>receive error message</act>, <act>notify purchasing officer at headquarters of restaurant</act>. otherwise, the PO Response is processed normally.; <act> submit purchase order </act>   <path1><act> notify purchasing officer </act></path1><path2><act> process response </act></path2>
<act>submit purchase order</act>. The procurement system of the restaurant expects <act>receive either po response or error message</act>. However, The procurement system of the restaurant may also happen that no response is received at all due to system errors or due to delays in <act>handle po</act>. In case no response is received by Friday afternoon , <act>notify purchasing officer at headquarters of restaurant</act>. otherwise, the PO Response is processed normally.; <act> submit purchase order </act>   <path1><act> notify purchasing officer </act></path1><path2><act> process response </act></path2>
<act>submit purchase order</act>. The procurement system of the restaurant expects <act>receive either po response or error message</act>. However, The procurement system of the restaurant may also happen that no response is received at all due to system errors or due to delays in <act>handle po</act>. <act>receive error message</act>, <act>notify purchasing officer at headquarters of restaurant</act>. otherwise, the PO Response is processed normally.; <act> submit purchase order </act>   <path1><act> notify purchasing officer </act></path1><path2><act> process response </act></path2>
<act>submit purchase order</act>. The procurement system of the restaurant expects <act>receive either po response or error message</act>. However, The procurement system of the restaurant may also happen that no response is received at all due to system errors or due to delays in <act>handle po</act>. When<act>receive error message</act>, <act>notify purchasing officer at headquarters of restaurant</act>. otherwise, the PO Response is processed normally.; <act> submit purchase order </act>   <path1><act> notify purchasing officer </act></path1><path2><act> process response </act></path2>
<act>submit purchase order</act>. The procurement system of the restaurant expects <act>receive either po response or error message</act>. However, The procurement system of the restaurant may also happen that no response is received at all due to system errors or due to delays in <act>handle po</act>. <act>receive error message</act>, <act>notify purchasing officer at headquarters of restaurant</act>. otherwise, the PO Response is processed normally.; <act> submit purchase order </act>   <path1><act> notify purchasing officer </act></path1><path2><act> process response </act></path2>
A hospital wants <act>establish rating workflow for doctors</act> . To make the workflow reliable, <act>assign two different roles</act>. The first one is a referee from the newly created quality assurance department <act>represent managing director of hospital</act>. Both roles execute all of their tasks independently from each other. <act>start new case regarding certain doctor by</act> interviewing patients. <act>establish patient interview workflow</act>, it is simply integrated in the new workflow. Meanwhile, the director asks an external expert <act>review work of doctor under rating</act>. Unfortunately, <act>get low expenses fee</act>, it can happen that the expert is not responding in time. Whenever that happens, another expert has to be asked (who could also not respond in time, i.e. the procedure repeats). When<act>send expertise</act>, <act>forward expertise</act>. Before<act>create report</act>, <act>file results containing patient interviews as well as expertise</act> . While the referee is doing this, <act>fill check</act> <act>pay </act> .;     <act> interview patients </act>   <act> ask external expert to review the work of the doctor </act>  <path1><act> ask another expert </act></path1> <path1><act> forward expertise </act></path1> <act> create report </act> <act> file results and expertise </act> <act> fill check </act>
A hospital wants <act>establish rating workflow for doctors</act> . To make the workflow reliable, <act>assign two different roles</act>. The first one is a referee from the newly created quality assurance department <act>represent managing director of hospital</act>. Both roles execute all of their tasks independently from each other. <act>start new case regarding certain doctor by</act> interviewing patients. <act>establish patient interview workflow</act>, it is simply integrated in the new workflow. Meanwhile, the director asks an external expert <act>review work of doctor under rating</act>. Unfortunately, <act>get low expenses fee</act>, it can happen that the expert is not responding in time. Whenever that happens, another expert has to be asked (who could also not respond in time, i.e. the procedure repeats). If an expert finally sends an expertise, <act>forward expertise</act>. Once<act>file results containing patient interviews as well as expertise</act> , <act>create report</act>. While the referee is doing this, <act>fill check</act> <act>pay </act> .;     <act> interview patients </act>   <act> ask external expert to review the work of the doctor </act>  <path1><act> ask another expert </act></path1> <path1><act> forward expertise </act></path1> <act> file results and expertise </act> <act> create report </act> <act> fill check </act>
A hospital wants <act>establish rating workflow for doctors</act> . To make the workflow reliable, <act>assign two different roles</act>. The first one is a referee from the newly created quality assurance department <act>represent managing director of hospital</act>. Both roles execute all of their tasks independently from each other. <act>start new case regarding certain doctor by</act> interviewing patients. <act>establish patient interview workflow</act>, it is simply integrated in the new workflow. Meanwhile, the director asks an external expert <act>review work of doctor under rating</act>. Unfortunately, <act>get low expenses fee</act>, it can happen that the expert is not responding in time. In case that happens, another expert has to be asked (who could also not respond in time, i.e. the procedure repeats). If an expert finally sends an expertise, <act>forward expertise</act>. Then<act>file results containing patient interviews as well as expertise</act> . <act>create report</act>. While the referee is doing this, <act>fill check</act> <act>pay </act> .;     <act> interview patients </act>   <act> ask external expert to review the work of the doctor </act>  <path1><act> ask another expert </act></path1> <path1><act> forward expertise </act></path1> <act> file results and expertise </act> <act> create report </act> <act> fill check </act>
A hospital wants <act>establish rating workflow for doctors</act> . To make the workflow reliable, <act>assign two different roles</act>. The first one is a referee from the newly created quality assurance department <act>represent managing director of hospital</act>. Both roles execute all of their tasks independently from each other. <act>start new case regarding certain doctor by</act> interviewing patients. <act>establish patient interview workflow</act>, it is simply integrated in the new workflow. Meanwhile, the director asks an external expert <act>review work of doctor under rating</act>. Unfortunately, <act>get low expenses fee</act>, it can happen that the expert is not responding in time. If that happens, another expert has to be asked (who could also not respond in time, i.e. the procedure repeats). In case an expert finally sends an expertise, <act>forward expertise</act>. Once<act>file results containing patient interviews as well as expertise</act> , <act>create report</act>. While the referee is doing this, <act>fill check</act> <act>pay </act> .;     <act> interview patients </act>   <act> ask external expert to review the work of the doctor </act>  <path1><act> ask another expert </act></path1> <path1><act> forward expertise </act></path1> <act> file results and expertise </act> <act> create report </act> <act> fill check </act>
A hospital wants <act>establish rating workflow for doctors</act> . To make the workflow reliable, <act>assign two different roles</act>. The first one is a referee from the newly created quality assurance department <act>represent managing director of hospital</act>. Both roles execute all of their tasks independently from each other. <act>start new case regarding certain doctor by</act> interviewing patients. <act>establish patient interview workflow</act>, it is simply integrated in the new workflow. Meanwhile, the director asks an external expert <act>review work of doctor under rating</act>. Unfortunately, <act>get low expenses fee</act>, it can happen that the expert is not responding in time. In case that happens, another expert has to be asked (who could also not respond in time, i.e. the procedure repeats). When<act>send expertise</act>, <act>forward expertise</act>. Before<act>create report</act>, <act>file results containing patient interviews as well as expertise</act> . While the referee is doing this, <act>fill check</act> <act>pay </act> .;     <act> interview patients </act>   <act> ask external expert to review the work of the doctor </act>  <path1><act> ask another expert </act></path1> <path1><act> forward expertise </act></path1> <act> create report </act> <act> file results and expertise </act> <act> fill check </act>